{
  "{\"filename\":\"/home/playola/test/db.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/db.test.js",
      "filenameRelative": "/home/playola/test/db.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "db.test.js",
      "sourceFileName": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "db.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\n\nconst db = require('../lib/db');\nconst errors = require('../lib/errors');\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null;\n    let fakeSongRequest = null;\n    let fakeSongRequests = [];\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        };\n        fakeSongRequests.push((await db.createSongRequest({ spotify_info: spotifyInfo })));\n      }\n    });\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n        id: faker.random.uuid(),\n        title: faker.random.words(),\n        artists: [{ name: faker.random.words() }],\n        album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n        external_ids: { isrc: faker.lorem.word() },\n        duration_ms: faker.random.number()\n      };\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo });\n    });\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id);\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id);\n      } catch (error) {}\n    });\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id);\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      } catch (error) {}\n    });\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n    });\n\n    describe('Put', function () {\n      it('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND);\n      });\n\n      it('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }]);\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave);\n      });\n\n      it.only('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' });\n        console.log(savedSongRequest.completed);\n      });\n    });\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "db.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "db",
        "errors",
        "createdSongRequest",
        "fakeSongRequest",
        "fakeSongRequests",
        "i",
        "spotifyInfo",
        "id",
        "random",
        "uuid",
        "title",
        "words",
        "artists",
        "name",
        "album",
        "image",
        "url",
        "internet",
        "external_ids",
        "isrc",
        "lorem",
        "word",
        "duration_ms",
        "number",
        "push",
        "createSongRequest",
        "spotify_info",
        "songRequest",
        "removeSongRequestWithID",
        "error",
        "getSongRequestWithID",
        "notEqual",
        "deepEqual",
        "getSongRequestWithSpotifyID",
        "spotify_id",
        "savedSongRequest",
        "updateSongRequestWithID",
        "status",
        "MATCH_NOT_FOUND",
        "equal",
        "jsonArrayToSave",
        "JSON",
        "stringify",
        "this",
        "youtube_matches",
        "only",
        "completed",
        "console",
        "log"
      ],
      "mappings": "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",
      "file": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\n\nconst db = require('../lib/db')\nconst errors = require('../lib/errors')\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null\n    let fakeSongRequest = null\n    let fakeSongRequests = []\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n        fakeSongRequests.push(await db.createSongRequest({ spotify_info: spotifyInfo })) \n      }\n    })\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo })\n    })\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id)\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id)\n      } catch (error) {}\n    })\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id)\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      } catch (error) {}\n    })\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n    })\n\n    describe('Put', function () {\n      it ('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND)\n      })\n      \n      it ('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }])\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave)\n      })\n\n      it.only ('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' })\n        console.log(savedSongRequest.completed)\n      })\n    })\n\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  })\n})"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/index.js",
      "filenameRelative": "/home/playola/lib/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const pgp = require('pg-promise')();\nconst db = pgp(process.env.DATABASE_URL);\nconst songRequests = require('./songRequests');\nconst errors = require('../errors');\nconst utils = require('../../deps/db-utils');\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: data => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id;\n    }\n    return songRequests.create(db, data);\n  },\n  getSongRequestWithID: songRequestID => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestWithIDs: songRequestIDs => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table);\n  },\n  removeSongRequestWithID: songRequestID => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data);\n  },\n  getSongRequestWithSpotifyID: spotifyID => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestsMatchingQuery: query => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` + 'where (spotify_id) ilike ${query} ' + 'or status ilike ${query} ' +\n    // 'or song_id ilike ${query} ' +\n    // 'or is_processing ilike ${query} ' +\n    `limit 10`, { query: `%${query}%` });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBncCIsInJlcXVpcmUiLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJzb25nUmVxdWVzdHMiLCJlcnJvcnMiLCJ1dGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVTb25nUmVxdWVzdCIsImRhdGEiLCJzcG90aWZ5X2luZm8iLCJzcG90aWZ5X2lkIiwiaWQiLCJjcmVhdGUiLCJnZXRTb25nUmVxdWVzdFdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJnZXRXaXRoSUQiLCJjb2x1bW5zIiwidGFibGUiLCJTT05HX1JFUVVFU1RfRE9FU19OT1RfRVhJU1QiLCJnZXRTb25nUmVxdWVzdFdpdGhJRHMiLCJzb25nUmVxdWVzdElEcyIsInJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEIiwicmVtb3ZlV2l0aElEIiwidXBkYXRlU29uZ1JlcXVlc3RXaXRoSUQiLCJ1cGRhdGVXaXRoSUQiLCJnZXRTb25nUmVxdWVzdFdpdGhTcG90aWZ5SUQiLCJzcG90aWZ5SUQiLCJnZXRXaXRoRmllbGRJRCIsImdldFNvbmdSZXF1ZXN0c01hdGNoaW5nUXVlcnkiLCJxdWVyeSIsIm1hbnlPck5vbmUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU1DLFFBQVEsWUFBUixHQUFaO0FBQ0EsTUFBTUMsS0FBS0YsSUFBSUcsUUFBUUMsR0FBUixDQUFZQyxZQUFoQixDQUFYO0FBQ0EsTUFBTUMsZUFBZUwsUUFBUSxnQkFBUixDQUFyQjtBQUNBLE1BQU1NLFNBQVNOLFFBQVEsV0FBUixDQUFmO0FBQ0EsTUFBTU8sUUFBUVAsUUFBUSxxQkFBUixDQUFkOztBQUVBUSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0FDLHFCQUFvQkMsSUFBRCxJQUFVO0FBQzNCLFFBQUlBLEtBQUtDLFlBQVQsRUFBdUI7QUFDckJELFdBQUtFLFVBQUwsR0FBa0JGLEtBQUtDLFlBQUwsQ0FBa0JFLEVBQXBDO0FBQ0Q7QUFDRCxXQUFPVCxhQUFhVSxNQUFiLENBQW9CZCxFQUFwQixFQUF3QlUsSUFBeEIsQ0FBUDtBQUNELEdBVGM7QUFVZkssd0JBQXVCQyxhQUFELElBQW1CO0FBQ3ZDLFdBQU9WLE1BQU1XLFNBQU4sQ0FBZ0JqQixFQUFoQixFQUFvQmdCLGFBQXBCLEVBQW1DWixhQUFhYyxPQUFoRCxFQUF5RGQsYUFBYWUsS0FBdEUsRUFBNkVkLE9BQU9lLDJCQUFwRixDQUFQO0FBQ0QsR0FaYztBQWFmQyx5QkFBd0JDLGNBQUQsSUFBb0I7QUFDekMsV0FBT2hCLE1BQU1XLFNBQU4sQ0FBZ0JqQixFQUFoQixFQUFvQnNCLGNBQXBCLEVBQW9DbEIsYUFBYWMsT0FBakQsRUFBMERkLGFBQWFlLEtBQXZFLENBQVA7QUFDRCxHQWZjO0FBZ0JmSSwyQkFBMEJQLGFBQUQsSUFBbUI7QUFDMUMsV0FBT1YsTUFBTWtCLFlBQU4sQ0FBbUJ4QixFQUFuQixFQUF1QmdCLGFBQXZCLEVBQXNDWixhQUFhZSxLQUFuRCxFQUEwRGQsT0FBT2UsMkJBQWpFLENBQVA7QUFDRCxHQWxCYztBQW1CZkssMkJBQXlCLENBQUNULGFBQUQsRUFBZ0JOLElBQWhCLEtBQXlCO0FBQ2hELFdBQU9OLGFBQWFzQixZQUFiLENBQTBCMUIsRUFBMUIsRUFBOEJnQixhQUE5QixFQUE2Q04sSUFBN0MsQ0FBUDtBQUNELEdBckJjO0FBc0JmaUIsK0JBQThCQyxTQUFELElBQWU7QUFDMUMsV0FBT3RCLE1BQU11QixjQUFOLENBQXFCN0IsRUFBckIsRUFBeUI0QixTQUF6QixFQUFvQyxZQUFwQyxFQUFrRHhCLGFBQWFjLE9BQS9ELEVBQXdFZCxhQUFhZSxLQUFyRixFQUE0RmQsT0FBT2UsMkJBQW5HLENBQVA7QUFDRCxHQXhCYztBQXlCZlUsZ0NBQStCQyxLQUFELElBQVc7QUFDdkMsV0FBTy9CLEdBQUdnQyxVQUFILENBQWUsVUFBUzVCLGFBQWFjLE9BQVEsU0FBUWQsYUFBYWUsS0FBTSxHQUExRCxHQUNuQixvQ0FEbUIsR0FFbkIsMkJBRm1CO0FBR25CO0FBQ0E7QUFDQyxjQUxJLEVBS08sRUFBRVksT0FBUSxJQUFHQSxLQUFNLEdBQW5CLEVBTFAsQ0FBUDtBQU1EO0FBaENjLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL2RiIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGdwID0gcmVxdWlyZSgncGctcHJvbWlzZScpKClcbmNvbnN0IGRiID0gcGdwKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTClcbmNvbnN0IHNvbmdSZXF1ZXN0cyA9IHJlcXVpcmUoJy4vc29uZ1JlcXVlc3RzJylcbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gU29uZyBSZXF1ZXN0c1xuICAvL1xuICBjcmVhdGVTb25nUmVxdWVzdDogKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YS5zcG90aWZ5X2luZm8pIHtcbiAgICAgIGRhdGEuc3BvdGlmeV9pZCA9IGRhdGEuc3BvdGlmeV9pbmZvLmlkXG4gICAgfVxuICAgIHJldHVybiBzb25nUmVxdWVzdHMuY3JlYXRlKGRiLCBkYXRhKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhJRHM6IChzb25nUmVxdWVzdElEcykgPT4ge1xuICAgIHJldHVybiB1dGlscy5nZXRXaXRoSUQoZGIsIHNvbmdSZXF1ZXN0SURzLCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlKVxuICB9LFxuICByZW1vdmVTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMucmVtb3ZlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBzb25nUmVxdWVzdHMudGFibGUsIGVycm9ycy5TT05HX1JFUVVFU1RfRE9FU19OT1RfRVhJU1QpXG4gIH0sXG4gIHVwZGF0ZVNvbmdSZXF1ZXN0V2l0aElEOiAoc29uZ1JlcXVlc3RJRCwgZGF0YSkgPT4ge1xuICAgIHJldHVybiBzb25nUmVxdWVzdHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhTcG90aWZ5SUQ6IChzcG90aWZ5SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aEZpZWxkSUQoZGIsIHNwb3RpZnlJRCwgJ3Nwb3RpZnlfaWQnLCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdHNNYXRjaGluZ1F1ZXJ5OiAocXVlcnkpID0+IHtcbiAgICByZXR1cm4gZGIubWFueU9yTm9uZShgc2VsZWN0ICR7c29uZ1JlcXVlc3RzLmNvbHVtbnN9IGZyb20gJHtzb25nUmVxdWVzdHMudGFibGV9IGAgK1xuICAgICAgJ3doZXJlIChzcG90aWZ5X2lkKSBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgICdvciBzdGF0dXMgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAvLyAnb3Igc29uZ19pZCBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgIC8vICdvciBpc19wcm9jZXNzaW5nIGlsaWtlICR7cXVlcnl9ICcgK1xuICAgICAgYGxpbWl0IDEwYCwgeyBxdWVyeTogYCUke3F1ZXJ5fSVgIH0pXG4gIH1cbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "pgp",
        "require",
        "db",
        "process",
        "env",
        "DATABASE_URL",
        "songRequests",
        "errors",
        "utils",
        "module",
        "exports",
        "createSongRequest",
        "data",
        "spotify_info",
        "spotify_id",
        "id",
        "create",
        "getSongRequestWithID",
        "songRequestID",
        "getWithID",
        "columns",
        "table",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "getSongRequestWithIDs",
        "songRequestIDs",
        "removeSongRequestWithID",
        "removeWithID",
        "updateSongRequestWithID",
        "updateWithID",
        "getSongRequestWithSpotifyID",
        "spotifyID",
        "getWithFieldID",
        "getSongRequestsMatchingQuery",
        "query",
        "manyOrNone"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,YAAR,GAAZ;AACA,MAAMC,KAAKF,IAAIG,QAAQC,GAAR,CAAYC,YAAhB,CAAX;AACA,MAAMC,eAAeL,QAAQ,gBAAR,CAArB;AACA,MAAMM,SAASN,QAAQ,WAAR,CAAf;AACA,MAAMO,QAAQP,QAAQ,qBAAR,CAAd;;AAEAQ,OAAOC,OAAP,GAAiB;AACf;AACA;AACA;AACAC,qBAAoBC,IAAD,IAAU;AAC3B,QAAIA,KAAKC,YAAT,EAAuB;AACrBD,WAAKE,UAAL,GAAkBF,KAAKC,YAAL,CAAkBE,EAApC;AACD;AACD,WAAOT,aAAaU,MAAb,CAAoBd,EAApB,EAAwBU,IAAxB,CAAP;AACD,GATc;AAUfK,wBAAuBC,aAAD,IAAmB;AACvC,WAAOV,MAAMW,SAAN,CAAgBjB,EAAhB,EAAoBgB,aAApB,EAAmCZ,aAAac,OAAhD,EAAyDd,aAAae,KAAtE,EAA6Ed,OAAOe,2BAApF,CAAP;AACD,GAZc;AAafC,yBAAwBC,cAAD,IAAoB;AACzC,WAAOhB,MAAMW,SAAN,CAAgBjB,EAAhB,EAAoBsB,cAApB,EAAoClB,aAAac,OAAjD,EAA0Dd,aAAae,KAAvE,CAAP;AACD,GAfc;AAgBfI,2BAA0BP,aAAD,IAAmB;AAC1C,WAAOV,MAAMkB,YAAN,CAAmBxB,EAAnB,EAAuBgB,aAAvB,EAAsCZ,aAAae,KAAnD,EAA0Dd,OAAOe,2BAAjE,CAAP;AACD,GAlBc;AAmBfK,2BAAyB,CAACT,aAAD,EAAgBN,IAAhB,KAAyB;AAChD,WAAON,aAAasB,YAAb,CAA0B1B,EAA1B,EAA8BgB,aAA9B,EAA6CN,IAA7C,CAAP;AACD,GArBc;AAsBfiB,+BAA8BC,SAAD,IAAe;AAC1C,WAAOtB,MAAMuB,cAAN,CAAqB7B,EAArB,EAAyB4B,SAAzB,EAAoC,YAApC,EAAkDxB,aAAac,OAA/D,EAAwEd,aAAae,KAArF,EAA4Fd,OAAOe,2BAAnG,CAAP;AACD,GAxBc;AAyBfU,gCAA+BC,KAAD,IAAW;AACvC,WAAO/B,GAAGgC,UAAH,CAAe,UAAS5B,aAAac,OAAQ,SAAQd,aAAae,KAAM,GAA1D,GACnB,oCADmB,GAEnB,2BAFmB;AAGnB;AACA;AACC,cALI,EAKO,EAAEY,OAAQ,IAAGA,KAAM,GAAnB,EALP,CAAP;AAMD;AAhCc,CAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const pgp = require('pg-promise')()\nconst db = pgp(process.env.DATABASE_URL)\nconst songRequests = require('./songRequests')\nconst errors = require('../errors')\nconst utils = require('../../deps/db-utils')\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: (data) => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id\n    }\n    return songRequests.create(db, data)\n  },\n  getSongRequestWithID: (songRequestID) => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestWithIDs: (songRequestIDs) => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table)\n  },\n  removeSongRequestWithID: (songRequestID) => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data)\n  },\n  getSongRequestWithSpotifyID: (spotifyID) => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestsMatchingQuery: (query) => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` +\n      'where (spotify_id) ilike ${query} ' +\n      'or status ilike ${query} ' +\n      // 'or song_id ilike ${query} ' +\n      // 'or is_processing ilike ${query} ' +\n      `limit 10`, { query: `%${query}%` })\n  }\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/db/songRequests.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/songRequests.js",
      "filenameRelative": "/home/playola/lib/db/songRequests.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequests.js",
      "sourceFileName": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequests"
    },
    "ignored": false,
    "code": "const errors = require('../errors');\nconst utils = require('../../deps/db-utils');\nconst songRequestCache = require('../cache/songRequest');\n\nconst SONG_REQUESTS_TABLE = 'song_requests';\nconst SONG_REQUESTS_PUBLIC_COLUMNS = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ');\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  };\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS));\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID));\n        }\n        return reject(err);\n      } else {\n        songRequestCache.setSongRequest(songRequest);\n        return resolve(songRequest);\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(songRequest => finish(null, songRequest)).catch(err => finish(err));\n  });\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'];\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      songRequestCache.setSongRequest(songRequest);\n      resolve(songRequest);\n    }\n\n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(segment => finish(null, segment)).catch(err => finish(err));\n  });\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0cy5qcyJdLCJuYW1lcyI6WyJlcnJvcnMiLCJyZXF1aXJlIiwidXRpbHMiLCJzb25nUmVxdWVzdENhY2hlIiwiU09OR19SRVFVRVNUU19UQUJMRSIsIlNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMiLCJtYXAiLCJjIiwiam9pbiIsImNyZWF0ZSIsImRiIiwiZGF0YSIsImRlZmF1bHRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmaW5pc2giLCJlcnIiLCJzb25nUmVxdWVzdCIsImNvbnN0cmFpbnQiLCJFcnJvciIsImVycnMiLCJTT05HX1JFUVVFU1RfQUxSRUFEWV9FWElTVFMiLCJwYXJzZUludCIsImNvZGUiLCJUUkFOU0NSSVBUX0lEX0lOVkFMSUQiLCJzZXRTb25nUmVxdWVzdCIsInRoZW4iLCJjYXRjaCIsInVwZGF0ZVdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJhbGxvd2VkRmllbGRzIiwiY29uc29sZSIsImxvZyIsInNlZ21lbnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29sdW1ucyIsInRhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1DLFFBQVFELFFBQVEscUJBQVIsQ0FBZDtBQUNBLE1BQU1FLG1CQUFtQkYsUUFBUSxzQkFBUixDQUF6Qjs7QUFFQSxNQUFNRyxzQkFBc0IsZUFBNUI7QUFDQSxNQUFNQywrQkFBK0IsQ0FDbkMsSUFEbUMsRUFFbkMsWUFGbUMsRUFHbkMsY0FIbUMsRUFJbkMsb0JBSm1DLEVBS25DLGlCQUxtQyxFQU1uQyx1QkFObUMsRUFPbkMsS0FQbUMsRUFRbkMsZ0JBUm1DLEVBU25DLFFBVG1DLEVBVW5DLFNBVm1DLEVBV25DLGVBWG1DLEVBWW5DLFdBWm1DLEVBYW5DLFlBYm1DLEVBY25DQyxHQWRtQyxDQWMvQkMsS0FBTSxHQUFFSCxtQkFBb0IsSUFBR0csQ0FBRSxFQWRGLEVBY0tDLElBZEwsQ0FjVSxJQWRWLENBQXJDOztB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ZXNDb250ZW50IjpbImNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuY29uc3Qgc29uZ1JlcXVlc3RDYWNoZSA9IHJlcXVpcmUoJy4uL2NhY2hlL3NvbmdSZXF1ZXN0JylcblxuY29uc3QgU09OR19SRVFVRVNUU19UQUJMRSA9ICdzb25nX3JlcXVlc3RzJ1xuY29uc3QgU09OR19SRVFVRVNUU19QVUJMSUNfQ09MVU1OUyA9IFtcbiAgJ2lkJyxcbiAgJ3Nwb3RpZnlfaWQnLFxuICAnc3BvdGlmeV9pbmZvJyxcbiAgJ3Nwb3RpZnlfaW5mb19lcnJvcicsXG4gICd5b3V0dWJlX21hdGNoZXMnLFxuICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgJ2tleScsXG4gICdkb3dubG9hZF9lcnJvcicsXG4gICdzdGF0dXMnLFxuICAnc29uZ19pZCcsXG4gICdpc19wcm9jZXNzaW5nJyxcbiAgJ2NvbXBsZXRlZCcsXG4gICdjcmVhdGVkX2F0J1xuXS5tYXAoYyA9PiBgJHtTT05HX1JFUVVFU1RTX1RBQkxFfS4ke2N9YCkuam9pbignLCAnKVxuXG5mdW5jdGlvbiBjcmVhdGUoZGIsIGRhdGEgPSB7fSkge1xuICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAnc3BvdGlmeV9pZCc6ICcnLFxuICAgICdzcG90aWZ5X2luZm8nOiB7fSxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJzoge30sXG4gICAgJ3lvdXR1YmVfbWF0Y2hlcyc6IHt9LFxuICAgICd5b3V0dWJlX21hdGNoZXNfZXJyb3InOiB7fSxcbiAgICAna2V5JzogJycsXG4gICAgJ2Rvd25sb2FkX2Vycm9yJzoge30sXG4gICAgJ3N0YXR1cyc6ICcnLFxuICAgICdzb25nX2lkJzogJycsXG4gICAgJ2lzX3Byb2Nlc3NpbmcnOiB0cnVlXG4gIH1cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBmdW5jdGlvbiBmaW5pc2goZXJyLCBzb25nUmVxdWVzdCkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvbnN0cmFpbnQgPT09ICdzcG90aWZ5X2lkX3VuaXF1ZV9pbmRleCcpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihlcnJzLlNPTkdfUkVRVUVTVF9BTFJFQURZX0VYSVNUUykpXG4gICAgICAgIH0gZWxzZSBpZiAocGFyc2VJbnQoZXJyLmNvZGUpID09PSAyMzUwMikge1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGVycnMuVFJBTlNDUklQVF9JRF9JTlZBTElEKSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvbmdSZXF1ZXN0Q2FjaGUuc2V0U29uZ1JlcXVlc3Qoc29uZ1JlcXVlc3QpXG4gICAgICAgIHJldHVybiByZXNvbHZlKHNvbmdSZXF1ZXN0KVxuICAgICAgfVxuICAgIH1cblxuICAgIHV0aWxzLmNyZWF0ZShkYiwgZGVmYXVsdHMsIGRhdGEsIFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsIFNPTkdfUkVRVUVTVFNfVEFCTEUpXG4gICAgICAudGhlbihzb25nUmVxdWVzdCA9PiBmaW5pc2gobnVsbCwgc29uZ1JlcXVlc3QpKVxuICAgICAgLmNhdGNoKGVyciA9PiBmaW5pc2goZXJyKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhID0ge30pIHtcbiAgY29uc3QgYWxsb3dlZEZpZWxkcyA9IFtcbiAgICAnaWQnLFxuICAgICdzcG90aWZ5X2lkJyxcbiAgICAnc3BvdGlmeV9pbmZvJyxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJyxcbiAgICAneW91dHViZV9tYXRjaGVzJyxcbiAgICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgICAna2V5JyxcbiAgICAnZG93bmxvYWRfZXJyb3InLFxuICAgICdzdGF0dXMnLFxuICAgICdzb25nX2lkJyxcbiAgICAnaXNfcHJvY2Vzc2luZycsXG4gICAgJ2NvbXBsZXRlZCcsXG4gICAgJ2NyZWF0ZWRfYXQnXG4gIF1cblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZ1bmN0aW9uIGZpbmlzaChlcnIsIHNvbmdSZXF1ZXN0KSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpXG4gICAgICB9XG4gICAgICBzb25nUmVxdWVzdENhY2hlLnNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KVxuICAgICAgcmVzb2x2ZShzb25nUmVxdWVzdClcbiAgICB9XG4gICAgXG4gICAgdXRpbHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBhbGxvd2VkRmllbGRzLCBkYXRhLCBTT05HX1JFUVVFU1RTX1BVQkxJQ19DT0xVTU5TLCBTT05HX1JFUVVFU1RTX1RBQkxFKVxuICAgICAgLnRoZW4oc2VnbWVudCA9PiBmaW5pc2gobnVsbCwgc2VnbWVudCkpXG4gICAgICAuY2F0Y2goZXJyID0+IGZpbmlzaChlcnIpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gQ29uc3RhbnRzXG4gIC8vXG4gIGNvbHVtbnM6IFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsXG4gIHRhYmxlOiBTT05HX1JFUVVFU1RTX1RBQkxFLFxuXG4gIC8vXG4gIC8vIE1ldGhvZHNcbiAgLy9cbiAgY3JlYXRlLFxuICB1cGRhdGVXaXRoSURcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequests.js"
      ],
      "names": [
        "errors",
        "require",
        "utils",
        "songRequestCache",
        "SONG_REQUESTS_TABLE",
        "SONG_REQUESTS_PUBLIC_COLUMNS",
        "map",
        "c",
        "join",
        "create",
        "db",
        "data",
        "defaults",
        "Promise",
        "resolve",
        "reject",
        "finish",
        "err",
        "songRequest",
        "constraint",
        "Error",
        "errs",
        "SONG_REQUEST_ALREADY_EXISTS",
        "parseInt",
        "code",
        "TRANSCRIPT_ID_INVALID",
        "setSongRequest",
        "then",
        "catch",
        "updateWithID",
        "songRequestID",
        "allowedFields",
        "console",
        "log",
        "segment",
        "module",
        "exports",
        "columns",
        "table"
      ],
      "mappings": "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",
      "file": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const errors = require('../errors')\nconst utils = require('../../deps/db-utils')\nconst songRequestCache = require('../cache/songRequest')\n\nconst SONG_REQUESTS_TABLE = 'song_requests'\nconst SONG_REQUESTS_PUBLIC_COLUMNS = [\n  'id',\n  'spotify_id',\n  'spotify_info',\n  'spotify_info_error',\n  'youtube_matches',\n  'youtube_matches_error',\n  'key',\n  'download_error',\n  'status',\n  'song_id',\n  'is_processing',\n  'completed',\n  'created_at'\n].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ')\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  }\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS))\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID))\n        }\n        return reject(err)\n      } else {\n        songRequestCache.setSongRequest(songRequest)\n        return resolve(songRequest)\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(songRequest => finish(null, songRequest))\n      .catch(err => finish(err))\n  })\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = [\n    'id',\n    'spotify_id',\n    'spotify_info',\n    'spotify_info_error',\n    'youtube_matches',\n    'youtube_matches_error',\n    'key',\n    'download_error',\n    'status',\n    'song_id',\n    'is_processing',\n    'completed',\n    'created_at'\n  ]\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err)\n        return reject(err)\n      }\n      songRequestCache.setSongRequest(songRequest)\n      resolve(songRequest)\n    }\n    \n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(segment => finish(null, segment))\n      .catch(err => finish(err))\n  })\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/errors.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/errors.js",
      "filenameRelative": "/home/playola/lib/errors.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "errors.js",
      "sourceFileName": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "errors"
    },
    "ignored": false,
    "code": "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ09OVEFJTlNfSU5WQUxJRF9BUkdVTUVOVCIsIlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVCIsIklOVkFMSURfQlVDS0VUX05BTUUiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLDZCQUEyQixtRUFEWjtBQUVmQywrQkFBNkIsMkNBRmQ7QUFHZkMsdUJBQXFCO0FBSE4sQ0FBakIiLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIENPTlRBSU5TX0lOVkFMSURfQVJHVU1FTlQ6ICdUaGUgcXVlcnkgY29udGFpbmVkIGFuIGludmFsaWQgdmFsdWUgKHVuYWJsZSB0byBiZSBtb3JlIHNwZWNpZmljKScsXG4gIFNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVDogJ0Egc29uZ1JlcXVlc3Qgd2l0aCB0aGF0IGlkIGRvZXMgbm90IGV4aXN0JyxcbiAgSU5WQUxJRF9CVUNLRVRfTkFNRTogJ2ludmFsaWQgYnVja2V0TmFtZSdcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "module",
        "exports",
        "CONTAINS_INVALID_ARGUMENT",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "INVALID_BUCKET_NAME"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,6BAA2B,mEADZ;AAEfC,+BAA6B,2CAFd;AAGfC,uBAAqB;AAHN,CAAjB",
      "file": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/index.js",
      "filenameRelative": "/home/playola/deps/db-utils/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const utils = require('./utils');\nmodule.exports = utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLFFBQVEsU0FBUixDQUFkO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUJILEtBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvZGVwcy9kYi11dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5tb2R1bGUuZXhwb3J0cyA9IHV0aWxzXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "utils",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,SAAR,CAAd;AACAC,OAAOC,OAAP,GAAiBH,KAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const utils = require('./utils')\nmodule.exports = utils\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/utils.js",
      "filenameRelative": "/home/playola/deps/db-utils/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified'\n};\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual;\n    this.table1JoinField = table1JoinField;\n    this.table2JoinField = table2JoinField;\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(db, fieldID, field, entityID, entity, columns, table, fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS, entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    db.oneOrNone(`insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` + `where not exists ` + `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` + `returning ${columns}`).then(row => {\n      if (!row) {\n        reject(new Error(fieldAlreadyExistsError));\n      } else {\n        resolve(row);\n      }\n    }).catch(error => {\n      if (parseInt(error.code) === 23503) {\n        reject(new Error(entityNotFoundError));\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY));\n      return;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const defaultFields = Object.keys(defaults);\n    const fields = defaultFields.join(', ');\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ');\n    data = Object.assign(defaults, data);\n    db.one(`insert into ${table} (${fields}) values (${values}) returning ${columns}`, data).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nfunction getWithID(db, id, columns = 'id', table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError);\n}\n\nfunction getMany(db, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table);\n}\n\nfunction getWithFieldID(db, fieldID, field, columns, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const data = {};\n    data[field] = fieldID;\n    db.oneOrNone(`select ${columns} from ${table} where ${field}=\\${${field}}`, data).then(row => row ? resolve(row) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([]);\n      return;\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '');\n    const columnsWithoutTable = columns.replace(new RegExp(`${table}.`, 'g'), '');\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter((elem, index, self) => index === self.indexOf(elem));\n    db.manyOrNone(`select ${columnsWithoutTable} ` + `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` + `on field_id = ${fieldWithoutTable} order by idx`, [uniqueIDs]).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyInnerJoinedByFieldID(db, fieldID, table1, table1Field, table1JoinField, table2, table2JoinField, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  const joinConditions = [new JoinCondition(table1JoinField, table2JoinField, true)];\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder, offset, limit);\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  let joins = '';\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField;\n    const table2JoinField = condition.table2JoinField;\n    const isEqual = condition.isEqual;\n    joins += `${table1JoinField} ${isEqual ? '=' : '!='} ${table2JoinField} and `;\n  }\n  joins = joins.slice(0, -5);\n  return db.manyOrNone(`select ${table2Columns} from ${table1} ` + `inner join ${table2} on (${joins}) ` + `where ${table1Field} = ${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`);\n}\n\nfunction getManyWithFieldID(db, fieldID, field, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `where ${field}=${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(db, fieldIDs, field, entityID, entityField, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([]);\n      return;\n    }\n\n    db.tx(t => {\n      let queries = [];\n\n      /**\n       * Delete all existing fields matching ID\n       */\n      queries.push(t.result(`delete from ${table} where ${entityField} = ${entityID}`));\n\n      /**\n       * Add these new fields\n       */\n      if (fieldIDs && fieldIDs.length) {\n        queries.push(t.manyOrNone(`insert into ${table} (${entityField}, ${field}) ` + `values(${entityID}, unnest($1)) on conflict do nothing ` + `returning ${columns}`, [fieldIDs]));\n      }\n\n      return t.batch(queries);\n    }).then(data => !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1])).catch(error => reject(error.first));\n  });\n}\n\nfunction removeWithFieldID(db, fieldID, field, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  const fields = {};\n  fields[field] = fieldID;\n  return removeWithFieldIDs(db, fields, table, notFoundError);\n}\n\nfunction removeWithFieldIDs(db, fields, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    let where = '';\n    Object.keys(fields).map(key => where += `${key} = \\${${key}} and `);where = where.slice(0, -5), db.result(`delete from ${table} where ${where}`, fields).then(data => data.rowCount !== 0 ? resolve(data) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction removeWithID(db, id, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError);\n}\n\nfunction updateWithID(db, id, allowedFields = [], data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const allowedData = {};\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()';\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField];\n      }\n    }\n\n    let updates = '';\n    Object.keys(allowedData).map(key => updates += `${key} = \\${${key}}, `);\n    updates = updates.slice(0, -2);\n    db.one(`update ${table} set ${updates} where id = ${id} returning ${columns}`, allowedData).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "errors",
        "DEFAULTS_EMPTY",
        "DATA_EMPTY",
        "ENTITY_DOES_NOT_EXIST",
        "FIELD_ALREADY_EXISTS",
        "TABLE_NOT_SPECIFIED",
        "JoinCondition",
        "constructor",
        "table1JoinField",
        "table2JoinField",
        "isEqual",
        "addFieldWithIDToEntityWithID",
        "db",
        "fieldID",
        "field",
        "entityID",
        "entity",
        "columns",
        "table",
        "fieldAlreadyExistsError",
        "entityNotFoundError",
        "Promise",
        "resolve",
        "reject",
        "oneOrNone",
        "then",
        "row",
        "Error",
        "catch",
        "error",
        "parseInt",
        "code",
        "create",
        "defaults",
        "data",
        "Object",
        "keys",
        "length",
        "defaultFields",
        "fields",
        "join",
        "values",
        "map",
        "f",
        "assign",
        "one",
        "getWithID",
        "id",
        "notFoundError",
        "getWithFieldID",
        "getMany",
        "orderByField",
        "sortOrder",
        "offset",
        "limit",
        "manyOrNone",
        "rows",
        "getManyWithIDs",
        "ids",
        "getManyWithFieldIDs",
        "fieldIDs",
        "fieldWithoutTable",
        "replace",
        "RegExp",
        "columnsWithoutTable",
        "uniqueIDs",
        "filter",
        "elem",
        "index",
        "self",
        "indexOf",
        "getManyInnerJoinedByFieldID",
        "table1",
        "table1Field",
        "table2",
        "table2Columns",
        "joinConditions",
        "getManyInnerJoinedByFieldIDUsingJoinConditions",
        "joins",
        "condition",
        "slice",
        "getManyWithFieldID",
        "replaceFieldsWithIDsForEntityWithID",
        "entityField",
        "tx",
        "t",
        "queries",
        "push",
        "result",
        "batch",
        "first",
        "removeWithFieldID",
        "removeWithFieldIDs",
        "where",
        "key",
        "rowCount",
        "removeWithID",
        "updateWithID",
        "allowedFields",
        "allowedData",
        "allowedField",
        "hasOwnProperty",
        "updates",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified',\n}\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual\n    this.table1JoinField = table1JoinField\n    this.table2JoinField = table2JoinField\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(\n  db,\n  fieldID,\n  field,\n  entityID,\n  entity,\n  columns,\n  table,\n  fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS,\n  entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    db\n      .oneOrNone(\n        `insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` +\n          `where not exists ` +\n          `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` +\n          `returning ${columns}`,\n      )\n      .then(row => {\n        if (!row) {\n          reject(new Error(fieldAlreadyExistsError))\n        } else {\n          resolve(row)\n        }\n      })\n      .catch(error => {\n        if (parseInt(error.code) === 23503) {\n          reject(new Error(entityNotFoundError))\n        } else {\n          reject(error)\n        }\n      })\n  })\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY))\n      return\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const defaultFields = Object.keys(defaults)\n    const fields = defaultFields.join(', ')\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ')\n    data = Object.assign(defaults, data)\n    db\n      .one(\n        `insert into ${table} (${fields}) values (${values}) returning ${columns}`,\n        data,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getWithID(\n  db,\n  id,\n  columns = 'id',\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError)\n}\n\nfunction getMany(\n  db,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table)\n}\n\nfunction getWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const data = {}\n    data[field] = fieldID\n    db\n      .oneOrNone(\n        `select ${columns} from ${table} where ${field}=\\${${field}}`,\n        data,\n      )\n      .then(row => (row ? resolve(row) : reject(new Error(notFoundError))))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([])\n      return\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '')\n    const columnsWithoutTable = columns.replace(\n      new RegExp(`${table}.`, 'g'),\n      '',\n    )\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter(\n      (elem, index, self) => index === self.indexOf(elem),\n    )\n    db\n      .manyOrNone(\n        `select ${columnsWithoutTable} ` +\n          `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` +\n          `on field_id = ${fieldWithoutTable} order by idx`,\n        [uniqueIDs],\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyInnerJoinedByFieldID(\n  db,\n  fieldID,\n  table1,\n  table1Field,\n  table1JoinField,\n  table2,\n  table2JoinField,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  const joinConditions = [\n    new JoinCondition(table1JoinField, table2JoinField, true),\n  ]\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(\n    db,\n    fieldID,\n    joinConditions,\n    table1,\n    table1Field,\n    table2,\n    table2Columns,\n    orderByField,\n    sortOrder,\n    offset,\n    limit,\n  )\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(\n  db,\n  fieldID,\n  joinConditions,\n  table1,\n  table1Field,\n  table2,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  let joins = ''\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField\n    const table2JoinField = condition.table2JoinField\n    const isEqual = condition.isEqual\n    joins += `${table1JoinField} ${isEqual\n      ? '='\n      : '!='} ${table2JoinField} and `\n  }\n  joins = joins.slice(0, -5)\n  return db.manyOrNone(\n    `select ${table2Columns} from ${table1} ` +\n      `inner join ${table2} on (${joins}) ` +\n      `where ${table1Field} = ${fieldID} ` +\n      `order by ${orderByField} ${sortOrder} ` +\n      `offset ${offset} limit ${limit}`,\n  )\n}\n\nfunction getManyWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `where ${field}=${fieldID} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(\n  db,\n  fieldIDs,\n  field,\n  entityID,\n  entityField,\n  columns,\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([])\n      return\n    }\n\n    db\n      .tx(t => {\n        let queries = []\n\n        /**\n         * Delete all existing fields matching ID\n         */\n        queries.push(\n          t.result(`delete from ${table} where ${entityField} = ${entityID}`),\n        )\n\n        /**\n         * Add these new fields\n         */\n        if (fieldIDs && fieldIDs.length) {\n          queries.push(\n            t.manyOrNone(\n              `insert into ${table} (${entityField}, ${field}) ` +\n                `values(${entityID}, unnest($1)) on conflict do nothing ` +\n                `returning ${columns}`,\n              [fieldIDs],\n            ),\n          )\n        }\n\n        return t.batch(queries)\n      })\n      .then(\n        data =>\n          !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1]),\n      )\n      .catch(error => reject(error.first))\n  })\n}\n\nfunction removeWithFieldID(\n  db,\n  fieldID,\n  field,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  const fields = {}\n  fields[field] = fieldID\n  return removeWithFieldIDs(db, fields, table, notFoundError)\n}\n\nfunction removeWithFieldIDs(\n  db,\n  fields,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    let where = ''\n    Object.keys(fields).map(key => (where += `${key} = \\${${key}} and `))\n    ;(where = where.slice(0, -5)),\n      db\n        .result(`delete from ${table} where ${where}`, fields)\n        .then(\n          data =>\n            data.rowCount !== 0\n              ? resolve(data)\n              : reject(new Error(notFoundError)),\n        )\n        .catch(error => reject(error))\n  })\n}\n\nfunction removeWithID(\n  db,\n  id,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError)\n}\n\nfunction updateWithID(\n  db,\n  id,\n  allowedFields = [],\n  data = {},\n  columns = 'id',\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const allowedData = {}\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()'\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField]\n      }\n    }\n\n    let updates = ''\n    Object.keys(allowedData).map(key => (updates += `${key} = \\${${key}}, `))\n    updates = updates.slice(0, -2)\n    db\n      .one(\n        `update ${table} set ${updates} where id = ${id} returning ${columns}`,\n        allowedData,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition,\n}\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/cache/songRequest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/songRequest.js",
      "filenameRelative": "/home/playola/lib/cache/songRequest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequest.js",
      "sourceFileName": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequest"
    },
    "ignored": false,
    "code": "const url = require('url');\nconst client = require('./redisClient');\n\nclass SongRequestCache {\n  constructor() {}\n\n  show(req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err);\n        next();\n      }\n\n      if (data) {\n        return res.status(200).send(data);\n      } else {\n        next();\n      }\n    });\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest));\n  }\n}\n\nmodule.exports = new SongRequestCache();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbInVybCIsInJlcXVpcmUiLCJjbGllbnQiLCJTb25nUmVxdWVzdENhY2hlIiwiY29uc3RydWN0b3IiLCJzaG93IiwicmVxIiwicmVzIiwibmV4dCIsImdldCIsInBhcmFtcyIsInNwb3RpZnlJRCIsImVyciIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsInNldFNvbmdSZXF1ZXN0Iiwic29uZ1JlcXVlc3QiLCJzZXRleCIsInNwb3RpZnlfaWQiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTUMsUUFBUSxLQUFSLENBQVo7QUFDQSxNQUFNQyxTQUFTRCxRQUFRLGVBQVIsQ0FBZjs7QUFFQSxNQUFNRSxnQkFBTixDQUF1QjtBQUNyQkMsZ0JBQWMsQ0FFYjs7QUFFREMsT0FBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUFzQjtBQUNwQk4sV0FBT08sR0FBUCxDQUFZLGdCQUFlSCxJQUFJSSxNQUFKLENBQVdDLFNBQVUsRUFBaEQsRUFBbUQsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDaEUsVUFBSUQsR0FBSixFQUFTO0FBQ1BFLGdCQUFRQyxHQUFSLENBQVlILEdBQVo7QUFDQUo7QUFDRDs7QUFFRCxVQUFJSyxJQUFKLEVBQVU7QUFDUixlQUFPTixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLElBQXJCLENBQVA7QUFDRCxPQUZELE1BRU87QUFDTEw7QUFDRDtBQUNGLEtBWEQ7QUFZRDs7QUFFRFUsaUJBQWVDLFdBQWYsRUFBNEI7QUFDMUJqQixXQUFPa0IsS0FBUCxDQUFjLGdCQUFlRCxZQUFZRSxVQUFXLEVBQXBELEVBQXVELEVBQXZELEVBQTJEQyxLQUFLQyxTQUFMLENBQWVKLFdBQWYsQ0FBM0Q7QUFDRDtBQXRCb0I7O0FBeUJ2QkssT0FBT0MsT0FBUCxHQUFpQixJQUFJdEIsZ0JBQUosRUFBakIiLCJmaWxlIjoic29uZ1JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvY2FjaGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKVxuY29uc3QgY2xpZW50ID0gcmVxdWlyZSgnLi9yZWRpc0NsaWVudCcpXG5cbmNsYXNzIFNvbmdSZXF1ZXN0Q2FjaGUge1xuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgc2hvdyAocmVxLCByZXMsIG5leHQpIHtcbiAgICBjbGllbnQuZ2V0KGBzb25nX3JlcXVlc3RfJHtyZXEucGFyYW1zLnNwb3RpZnlJRH1gLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChkYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KSB7XG4gICAgY2xpZW50LnNldGV4KGBzb25nX3JlcXVlc3RfJHtzb25nUmVxdWVzdC5zcG90aWZ5X2lkfWAsIDYwLCBKU09OLnN0cmluZ2lmeShzb25nUmVxdWVzdCkpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU29uZ1JlcXVlc3RDYWNoZSgpIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequest.js"
      ],
      "names": [
        "url",
        "require",
        "client",
        "SongRequestCache",
        "constructor",
        "show",
        "req",
        "res",
        "next",
        "get",
        "params",
        "spotifyID",
        "err",
        "data",
        "console",
        "log",
        "status",
        "send",
        "setSongRequest",
        "songRequest",
        "setex",
        "spotify_id",
        "JSON",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,MAAMC,SAASD,QAAQ,eAAR,CAAf;;AAEA,MAAME,gBAAN,CAAuB;AACrBC,gBAAc,CAEb;;AAEDC,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AACpBN,WAAOO,GAAP,CAAY,gBAAeH,IAAII,MAAJ,CAAWC,SAAU,EAAhD,EAAmD,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChE,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAJ;AACD;;AAED,UAAIK,IAAJ,EAAU;AACR,eAAON,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB,CAAP;AACD,OAFD,MAEO;AACLL;AACD;AACF,KAXD;AAYD;;AAEDU,iBAAeC,WAAf,EAA4B;AAC1BjB,WAAOkB,KAAP,CAAc,gBAAeD,YAAYE,UAAW,EAApD,EAAuD,EAAvD,EAA2DC,KAAKC,SAAL,CAAeJ,WAAf,CAA3D;AACD;AAtBoB;;AAyBvBK,OAAOC,OAAP,GAAiB,IAAItB,gBAAJ,EAAjB",
      "file": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const url = require('url')\nconst client = require('./redisClient')\n\nclass SongRequestCache {\n  constructor() {\n\n  }\n\n  show (req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err)\n        next()\n      }\n\n      if (data) {\n        return res.status(200).send(data)\n      } else {\n        next()\n      }\n    })\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest))\n  }\n}\n\nmodule.exports = new SongRequestCache()"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/cache/redisClient.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/redisClient.js",
      "filenameRelative": "/home/playola/lib/cache/redisClient.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "redisClient.js",
      "sourceFileName": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "redisClient"
    },
    "ignored": false,
    "code": "const redis = require('redis');\nconst client = redis.createClient(process.env.REDIS_URL);\nmodule.exports = client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZGlzQ2xpZW50LmpzIl0sIm5hbWVzIjpbInJlZGlzIiwicmVxdWlyZSIsImNsaWVudCIsImNyZWF0ZUNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19VUkwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLFNBQVNGLE1BQU1HLFlBQU4sQ0FBbUJDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBL0IsQ0FBZjtBQUNBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJyZWRpc0NsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9jYWNoZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlzID0gcmVxdWlyZSgncmVkaXMnKVxuY29uc3QgY2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KHByb2Nlc3MuZW52LlJFRElTX1VSTClcbm1vZHVsZS5leHBvcnRzID0gY2xpZW50Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "redisClient.js"
      ],
      "names": [
        "redis",
        "require",
        "client",
        "createClient",
        "process",
        "env",
        "REDIS_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,SAASF,MAAMG,YAAN,CAAmBC,QAAQC,GAAR,CAAYC,SAA/B,CAAf;AACAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const redis = require('redis')\nconst client = redis.createClient(process.env.REDIS_URL)\nmodule.exports = client"
      ]
    },
    "mtime": 1522275423000
  },
  "{\"filename\":\"/home/playola/test/lib.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/lib.test.js",
      "filenameRelative": "/home/playola/test/lib.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.test.js",
      "sourceFileName": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\nconst sinon = require('sinon');\n\nconst services = require('../lib/services');\nconst lib = require('../lib/lib');\nconst errors = require('../lib/errors');\n\ndescribe('lib', function () {\n\n  describe('getOrCreateSongRequest', function () {\n    fit('gets an existing songRequest', async function () {});\n    fit('song exists -- create a songRequest with proper song_id and status', async function () {});\n\n    fit('creates a songRequest if it does not already exist', async function () {});\n  });\n\n  describe.only('createSongRequest', function () {\n    var createdSongRequest;\n    var publishStub;\n    // stub services\n    beforeEach(function () {\n      publishStub = sinon.stub(services.songRequest, 'publish');\n    });\n\n    after(function () {\n      publishStub.restore();\n    });\n\n    afterEach(async function () {\n      if (createdSongRequest) {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      }\n    });\n\n    it('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      assert.equal(songRequest.spotify_id, spotifyID);\n      assert.equal(songRequest.status.status.GETTING_SPOTIFY_INFO);\n      assert.equal(songRequest.is_processing, true);\n    });\n\n    it('broadcasts that it was created', async function () {\n      var songRequest = await lib.createSongRequest('mySpotifyID');\n      sinon.assert.calledWith(publishStub, events.SONGREQUEST_CREATED, songRequest);\n    });\n  });\n\n  describe('completeReplaceAudioForSong', function () {\n    fit('updates the song with the new key', async function () {});\n  });\n\n  describe('completeSongAcquisition', function () {\n    fit('adds the new song to the db', function () {});\n\n    fit('updates the old songRequest with the new song_id', function () {});\n\n    fit('only updates the songRequest and key if the song already exists', function () {});\n  });\n\n  describe('');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi50ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJmYWtlciIsIm1vY2hhIiwiYWZ0ZXIiLCJiZWZvcmUiLCJiZWZvcmVFYWNoIiwiYWZ0ZXJFYWNoIiwiZGVzY3JpYmUiLCJpdCIsInNpbm9uIiwic2VydmljZXMiLCJsaWIiLCJlcnJvcnMiLCJmaXQiLCJvbmx5IiwiY3JlYXRlZFNvbmdSZXF1ZXN0IiwicHVibGlzaFN0dWIiLCJzdHViIiwic29uZ1JlcXVlc3QiLCJyZXN0b3JlIiwiZGIiLCJyZW1vdmVTb25nUmVxdWVzdFdpdGhJRCIsImlkIiwiY3JlYXRlU29uZ1JlcXVlc3QiLCJlcXVhbCIsInNwb3RpZnlfaWQiLCJzcG90aWZ5SUQiLCJzdGF0dXMiLCJHRVRUSU5HX1NQT1RJRllfSU5GTyIsImlzX3Byb2Nlc3NpbmciLCJjYWxsZWRXaXRoIiwiZXZlbnRzIiwiU09OR1JFUVVFU1RfQ1JFQVRFRCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFQSxNQUFGLEtBQWFDLFFBQVEsTUFBUixDQUFuQjtBQUNBLE1BQU1DLFFBQVFELFFBQVEsT0FBUixDQUFkO0FBQ0EsTUFBTUUsUUFBUUYsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNRyxRQUFRRCxNQUFNQyxLQUFwQjtBQUNBLE1BQU1DLFNBQVNGLE1BQU1FLE1BQXJCO0FBQ0EsTUFBTUMsYUFBYUgsTUFBTUcsVUFBekI7QUFDQSxNQUFNQyxZQUFZSixNQUFNSSxTQUF4QjtBQUNBLE1BQU1DLFdBQVdMLE1BQU1LLFFBQXZCO0FBQ0EsTUFBTUMsS0FBS04sTUFBTU0sRUFBakI7QUFDQSxNQUFNQyxRQUFRVCxRQUFRLE9BQVIsQ0FBZDs7QUFFQSxNQUFNVSxXQUFXVixRQUFRLGlCQUFSLENBQWpCO0FBQ0EsTUFBTVcsTUFBTVgsUUFBUSxZQUFSLENBQVo7QUFDQSxNQUFNWSxTQUFTWixRQUFRLGVBQVIsQ0FBZjs7QUFFQU8sU0FBVSxLQUFWLEVBQWlCLFlBQVk7O0FBRTNCQSxXQUFVLHdCQUFWLEVBQW9DLFlBQVk7QUFDOUNNLFFBQUssOEJBQUwsRUFBcUMsa0JBQWtCLENBRXRELENBRkQ7QUFHQUEsUUFBSyxvRUFBTCxFQUEyRSxrQkFBa0IsQ0FFNUYsQ0FGRDs7QUFJQUEsUUFBSyxvREFBTCxFQUEyRCxrQkFBa0IsQ0FFNUUsQ0FGRDtBQUdELEdBWEQ7O0FBYUFOLFdBQVNPLElBQVQsQ0FBZSxtQkFBZixFQUFvQyxZQUFZO0FBQzlDLFFBQUlDLGtCQUFKO0FBQ0EsUUFBSUMsV0FBSjtBQUNBO0FBQ0FYLGVBQVcsWUFBWTtBQUNyQlcsb0JBQWNQLE1BQU1RLElBQU4sQ0FBV1AsU0FBU1EsV0FBcEIsRUFBaUMsU0FBakMsQ0FBZDtBQUNELEtBRkQ7O0FBSUFmLFVBQU0sWUFBWTtBQUNoQmEsa0JBQVlHLE9BQVo7QUFDRCxLQUZEOztBQUlBYixjQUFVLGtCQUFrQjtBQUMxQixVQUFJUyxrQkFBSixFQUF3QjtBQUN0QixjQUFNSyxHQUFHQyx1QkFBSCxDQUEyQk4sbUJBQW1CTyxFQUE5QyxDQUFOO0FBQ0Q7QUFDRixLQUpEOztBQU1BZCxPQUFJLHVCQUFKLEVBQTZCLGtCQUFrQjtBQUM3Q08sMkJBQXFCLE1BQU1KLElBQUlZLGlCQUFKLENBQXNCLGFBQXRCLENBQTNCO0FBQ0F4QixhQUFPeUIsS0FBUCxDQUFhTixZQUFZTyxVQUF6QixFQUFxQ0MsU0FBckM7QUFDQTNCLGFBQU95QixLQUFQLENBQWFOLFlBQVlTLE1BQVosQ0FBb0JBLE1BQXBCLENBQTJCQyxvQkFBeEM7QUFDQTdCLGFBQU95QixLQUFQLENBQWFOLFlBQVlXLGFBQXpCLEVBQXdDLElBQXhDO0FBQ0QsS0FMRDs7QUFPQXJCLE9BQUksZ0NBQUosRUFBc0Msa0JBQWtCO0FBQ3RELFVBQUlVLGNBQWMsTUFBTVAsSUFBSVksaUJBQUosQ0FBc0IsYUFBdEIsQ0FBeEI7QUFDQWQsWUFBTVYsTUFBTixDQUFhK0IsVUFBYixDQUF3QmQsV0FBeEIsRUFBcUNlLE9BQU9DLG1CQUE1QyxFQUFpRWQsV0FBakU7QUFDRCxLQUhEO0FBSUQsR0E3QkQ7O0FBK0JBWCxXQUFVLDZCQUFWLEVBQXlDLFlBQVk7QUFDbkRNLFFBQUssbUNBQUwsRUFBMEMsa0JBQWtCLENBRTNELENBRkQ7QUFHRCxHQUpEOztBQU1BTixXQUFVLHlCQUFWLEVBQXFDLFlBQVk7QUFDL0NNLFFBQUssNkJBQUwsRUFBb0MsWUFBWSxDQUUvQyxDQUZEOztBQUlBQSxRQUFLLGtEQUFMLEVBQXlELFlBQVksQ0FFcEUsQ0FGRDs7QUFJQUEsUUFBSSxpRUFBSixFQUF1RSxZQUFZLENBRWxGLENBRkQ7QUFHRCxHQVpEOztBQWNBTixXQUFVLEVBQVY7QUFJRCxDQXRFRCIsImZpbGUiOiJsaWIudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFzc2VydCB9ID0gcmVxdWlyZSgnY2hhaScpXG5jb25zdCBmYWtlciA9IHJlcXVpcmUoJ2Zha2VyJylcbmNvbnN0IG1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKVxuY29uc3QgYWZ0ZXIgPSBtb2NoYS5hZnRlclxuY29uc3QgYmVmb3JlID0gbW9jaGEuYmVmb3JlXG5jb25zdCBiZWZvcmVFYWNoID0gbW9jaGEuYmVmb3JlRWFjaFxuY29uc3QgYWZ0ZXJFYWNoID0gbW9jaGEuYWZ0ZXJFYWNoXG5jb25zdCBkZXNjcmliZSA9IG1vY2hhLmRlc2NyaWJlXG5jb25zdCBpdCA9IG1vY2hhLml0XG5jb25zdCBzaW5vbiA9IHJlcXVpcmUoJ3Npbm9uJylcblxuY29uc3Qgc2VydmljZXMgPSByZXF1aXJlKCcuLi9saWIvc2VydmljZXMnKVxuY29uc3QgbGliID0gcmVxdWlyZSgnLi4vbGliL2xpYicpXG5jb25zdCBlcnJvcnMgPSByZXF1aXJlKCcuLi9saWIvZXJyb3JzJylcblxuZGVzY3JpYmUgKCdsaWInLCBmdW5jdGlvbiAoKSB7XG5cbiAgZGVzY3JpYmUgKCdnZXRPckNyZWF0ZVNvbmdSZXF1ZXN0JywgZnVuY3Rpb24gKCkge1xuICAgIGZpdCAoJ2dldHMgYW4gZXhpc3Rpbmcgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICAgIGZpdCAoJ3NvbmcgZXhpc3RzIC0tIGNyZWF0ZSBhIHNvbmdSZXF1ZXN0IHdpdGggcHJvcGVyIHNvbmdfaWQgYW5kIHN0YXR1cycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG5cbiAgICBmaXQgKCdjcmVhdGVzIGEgc29uZ1JlcXVlc3QgaWYgaXQgZG9lcyBub3QgYWxyZWFkeSBleGlzdCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG4gIH0pXG5cbiAgZGVzY3JpYmUub25seSAoJ2NyZWF0ZVNvbmdSZXF1ZXN0JywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBjcmVhdGVkU29uZ1JlcXVlc3RcbiAgICB2YXIgcHVibGlzaFN0dWJcbiAgICAvLyBzdHViIHNlcnZpY2VzXG4gICAgYmVmb3JlRWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICBwdWJsaXNoU3R1YiA9IHNpbm9uLnN0dWIoc2VydmljZXMuc29uZ1JlcXVlc3QsICdwdWJsaXNoJylcbiAgICB9KVxuXG4gICAgYWZ0ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgcHVibGlzaFN0dWIucmVzdG9yZSgpXG4gICAgfSlcblxuICAgIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoY3JlYXRlZFNvbmdSZXF1ZXN0KSB7XG4gICAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKGNyZWF0ZWRTb25nUmVxdWVzdC5pZClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgaXQgKCdjcmVhdGVzIGEgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBjcmVhdGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY3JlYXRlU29uZ1JlcXVlc3QoJ215U3BvdGlmeUlEJylcbiAgICAgIGFzc2VydC5lcXVhbChzb25nUmVxdWVzdC5zcG90aWZ5X2lkLCBzcG90aWZ5SUQpXG4gICAgICBhc3NlcnQuZXF1YWwoc29uZ1JlcXVlc3Quc3RhdHVzLiBzdGF0dXMuR0VUVElOR19TUE9USUZZX0lORk8pXG4gICAgICBhc3NlcnQuZXF1YWwoc29uZ1JlcXVlc3QuaXNfcHJvY2Vzc2luZywgdHJ1ZSlcbiAgICB9KVxuXG4gICAgaXQgKCdicm9hZGNhc3RzIHRoYXQgaXQgd2FzIGNyZWF0ZWQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY3JlYXRlU29uZ1JlcXVlc3QoJ215U3BvdGlmeUlEJylcbiAgICAgIHNpbm9uLmFzc2VydC5jYWxsZWRXaXRoKHB1Ymxpc2hTdHViLCBldmVudHMuU09OR1JFUVVFU1RfQ1JFQVRFRCwgc29uZ1JlcXVlc3QpXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSAoJ2NvbXBsZXRlUmVwbGFjZUF1ZGlvRm9yU29uZycsIGZ1bmN0aW9uICgpIHtcbiAgICBmaXQgKCd1cGRhdGVzIHRoZSBzb25nIHdpdGggdGhlIG5ldyBrZXknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICB9KVxuXG4gIGRlc2NyaWJlICgnY29tcGxldGVTb25nQWNxdWlzaXRpb24nLCBmdW5jdGlvbiAoKSB7XG4gICAgZml0ICgnYWRkcyB0aGUgbmV3IHNvbmcgdG8gdGhlIGRiJywgZnVuY3Rpb24gKCkge1xuXG4gICAgfSlcblxuICAgIGZpdCAoJ3VwZGF0ZXMgdGhlIG9sZCBzb25nUmVxdWVzdCB3aXRoIHRoZSBuZXcgc29uZ19pZCcsIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG4gICAgXG4gICAgZml0KCdvbmx5IHVwZGF0ZXMgdGhlIHNvbmdSZXF1ZXN0IGFuZCBrZXkgaWYgdGhlIHNvbmcgYWxyZWFkeSBleGlzdHMnLCBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICB9KVxuXG4gIGRlc2NyaWJlICgnJylcblxuXG5cbn0pXG5cblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "sinon",
        "services",
        "lib",
        "errors",
        "fit",
        "only",
        "createdSongRequest",
        "publishStub",
        "stub",
        "songRequest",
        "restore",
        "db",
        "removeSongRequestWithID",
        "id",
        "createSongRequest",
        "equal",
        "spotify_id",
        "spotifyID",
        "status",
        "GETTING_SPOTIFY_INFO",
        "is_processing",
        "calledWith",
        "events",
        "SONGREQUEST_CREATED"
      ],
      "mappings": "AAAA,MAAM,EAAEA,MAAF,KAAaC,QAAQ,MAAR,CAAnB;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,MAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,MAAMG,QAAQD,MAAMC,KAApB;AACA,MAAMC,SAASF,MAAME,MAArB;AACA,MAAMC,aAAaH,MAAMG,UAAzB;AACA,MAAMC,YAAYJ,MAAMI,SAAxB;AACA,MAAMC,WAAWL,MAAMK,QAAvB;AACA,MAAMC,KAAKN,MAAMM,EAAjB;AACA,MAAMC,QAAQT,QAAQ,OAAR,CAAd;;AAEA,MAAMU,WAAWV,QAAQ,iBAAR,CAAjB;AACA,MAAMW,MAAMX,QAAQ,YAAR,CAAZ;AACA,MAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEAO,SAAU,KAAV,EAAiB,YAAY;;AAE3BA,WAAU,wBAAV,EAAoC,YAAY;AAC9CM,QAAK,8BAAL,EAAqC,kBAAkB,CAEtD,CAFD;AAGAA,QAAK,oEAAL,EAA2E,kBAAkB,CAE5F,CAFD;;AAIAA,QAAK,oDAAL,EAA2D,kBAAkB,CAE5E,CAFD;AAGD,GAXD;;AAaAN,WAASO,IAAT,CAAe,mBAAf,EAAoC,YAAY;AAC9C,QAAIC,kBAAJ;AACA,QAAIC,WAAJ;AACA;AACAX,eAAW,YAAY;AACrBW,oBAAcP,MAAMQ,IAAN,CAAWP,SAASQ,WAApB,EAAiC,SAAjC,CAAd;AACD,KAFD;;AAIAf,UAAM,YAAY;AAChBa,kBAAYG,OAAZ;AACD,KAFD;;AAIAb,cAAU,kBAAkB;AAC1B,UAAIS,kBAAJ,EAAwB;AACtB,cAAMK,GAAGC,uBAAH,CAA2BN,mBAAmBO,EAA9C,CAAN;AACD;AACF,KAJD;;AAMAd,OAAI,uBAAJ,EAA6B,kBAAkB;AAC7CO,2BAAqB,MAAMJ,IAAIY,iBAAJ,CAAsB,aAAtB,CAA3B;AACAxB,aAAOyB,KAAP,CAAaN,YAAYO,UAAzB,EAAqCC,SAArC;AACA3B,aAAOyB,KAAP,CAAaN,YAAYS,MAAZ,CAAoBA,MAApB,CAA2BC,oBAAxC;AACA7B,aAAOyB,KAAP,CAAaN,YAAYW,aAAzB,EAAwC,IAAxC;AACD,KALD;;AAOArB,OAAI,gCAAJ,EAAsC,kBAAkB;AACtD,UAAIU,cAAc,MAAMP,IAAIY,iBAAJ,CAAsB,aAAtB,CAAxB;AACAd,YAAMV,MAAN,CAAa+B,UAAb,CAAwBd,WAAxB,EAAqCe,OAAOC,mBAA5C,EAAiEd,WAAjE;AACD,KAHD;AAID,GA7BD;;AA+BAX,WAAU,6BAAV,EAAyC,YAAY;AACnDM,QAAK,mCAAL,EAA0C,kBAAkB,CAE3D,CAFD;AAGD,GAJD;;AAMAN,WAAU,yBAAV,EAAqC,YAAY;AAC/CM,QAAK,6BAAL,EAAoC,YAAY,CAE/C,CAFD;;AAIAA,QAAK,kDAAL,EAAyD,YAAY,CAEpE,CAFD;;AAIAA,QAAI,iEAAJ,EAAuE,YAAY,CAElF,CAFD;AAGD,GAZD;;AAcAN,WAAU,EAAV;AAID,CAtED",
      "file": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\nconst sinon = require('sinon')\n\nconst services = require('../lib/services')\nconst lib = require('../lib/lib')\nconst errors = require('../lib/errors')\n\ndescribe ('lib', function () {\n\n  describe ('getOrCreateSongRequest', function () {\n    fit ('gets an existing songRequest', async function () {\n\n    })\n    fit ('song exists -- create a songRequest with proper song_id and status', async function () {\n\n    })\n\n    fit ('creates a songRequest if it does not already exist', async function () {\n\n    })\n  })\n\n  describe.only ('createSongRequest', function () {\n    var createdSongRequest\n    var publishStub\n    // stub services\n    beforeEach(function () {\n      publishStub = sinon.stub(services.songRequest, 'publish')\n    })\n\n    after(function () {\n      publishStub.restore()\n    })\n\n    afterEach(async function () {\n      if (createdSongRequest) {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      }\n    })\n\n    it ('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      assert.equal(songRequest.spotify_id, spotifyID)\n      assert.equal(songRequest.status. status.GETTING_SPOTIFY_INFO)\n      assert.equal(songRequest.is_processing, true)\n    })\n\n    it ('broadcasts that it was created', async function () {\n      var songRequest = await lib.createSongRequest('mySpotifyID')\n      sinon.assert.calledWith(publishStub, events.SONGREQUEST_CREATED, songRequest)\n    })\n  })\n\n  describe ('completeReplaceAudioForSong', function () {\n    fit ('updates the song with the new key', async function () {\n\n    })\n  })\n\n  describe ('completeSongAcquisition', function () {\n    fit ('adds the new song to the db', function () {\n\n    })\n\n    fit ('updates the old songRequest with the new song_id', function () {\n\n    })\n    \n    fit('only updates the songRequest and key if the song already exists', function () {\n\n    })\n  })\n\n  describe ('')\n\n\n\n})\n\n\n"
      ]
    },
    "mtime": 1523745263000
  },
  "{\"filename\":\"/home/playola/test/db.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/db.test.js",
      "filenameRelative": "/home/playola/test/db.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "db.test.js",
      "sourceFileName": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "db.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\n\nconst db = require('../lib/db');\nconst errors = require('../lib/errors');\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null;\n    let fakeSongRequest = null;\n    let fakeSongRequests = [];\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        };\n        fakeSongRequests.push((await db.createSongRequest({ spotify_info: spotifyInfo })));\n      }\n    });\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n        id: faker.random.uuid(),\n        title: faker.random.words(),\n        artists: [{ name: faker.random.words() }],\n        album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n        external_ids: { isrc: faker.lorem.word() },\n        duration_ms: faker.random.number()\n      };\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo });\n    });\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id);\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id);\n      } catch (error) {}\n    });\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id);\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      } catch (error) {}\n    });\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n    });\n\n    describe('Put', function () {\n      it('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND);\n      });\n\n      it('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }]);\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave);\n      });\n\n      it.only('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' });\n        console.log(savedSongRequest.completed);\n      });\n    });\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLnRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImZha2VyIiwibW9jaGEiLCJhZnRlciIsImJlZm9yZSIsImJlZm9yZUVhY2giLCJhZnRlckVhY2giLCJkZXNjcmliZSIsIml0IiwiZGIiLCJlcnJvcnMiLCJjcmVhdGVkU29uZ1JlcXVlc3QiLCJmYWtlU29uZ1JlcXVlc3QiLCJmYWtlU29uZ1JlcXVlc3RzIiwiaSIsInNwb3RpZnlJbmZvIiwiaWQiLCJyYW5kb20iLCJ1dWlkIiwidGl0bGUiLCJ3b3JkcyIsImFydGlzdHMiLCJuYW1lIiwiYWxidW0iLCJpbWFnZSIsInVybCIsImludGVybmV0IiwiZXh0ZXJuYWxfaWRzIiwiaXNyYyIsImxvcmVtIiwid29yZCIsImR1cmF0aW9uX21zIiwibnVtYmVyIiwicHVzaCIsImNyZWF0ZVNvbmdSZXF1ZXN0Iiwic3BvdGlmeV9pbmZvIiwic29uZ1JlcXVlc3QiLCJyZW1vdmVTb25nUmVxdWVzdFdpdGhJRCIsImVycm9yIiwiZ2V0U29uZ1JlcXVlc3RXaXRoSUQiLCJub3RFcXVhbCIsImRlZXBFcXVhbCIsImdldFNvbmdSZXF1ZXN0V2l0aFNwb3RpZnlJRCIsInNwb3RpZnlfaWQiLCJzYXZlZFNvbmdSZXF1ZXN0IiwidXBkYXRlU29uZ1JlcXVlc3RXaXRoSUQiLCJzdGF0dXMiLCJNQVRDSF9OT1RfRk9VTkQiLCJlcXVhbCIsImpzb25BcnJheVRvU2F2ZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aGlzIiwieW91dHViZV9tYXRjaGVzIiwib25seSIsImNvbXBsZXRlZCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sRUFBRUEsTUFBRixLQUFhQyxRQUFRLE1BQVIsQ0FBbkI7QUFDQSxNQUFNQyxRQUFRRCxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1FLFFBQVFGLFFBQVEsT0FBUixDQUFkO0FBQ0EsTUFBTUcsUUFBUUQsTUFBTUMsS0FBcEI7QUFDQSxNQUFNQyxTQUFTRixN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QixNQUFNbkMsR0FBR29DLHVCQUFILENBQTJCakMsZ0JBQWdCSSxFQUEzQyxFQUErQyxFQUFFcUMsaUJBQWlCSixlQUFuQixFQUEvQyxDQUEvQjtBQUNBLFlBQUliLGNBQWMsTUFBTTNCLEdBQUc4QixvQkFBSCxDQUF3QjNCLGdCQUFnQkksRUFBeEMsQ0FBeEI7QUFDQWpCLGVBQU9pRCxLQUFQLENBQWFFLEtBQUtDLFNBQUwsQ0FBZWYsWUFBWWlCLGVBQTNCLENBQWIsRUFBMERKLGVBQTFEO0FBQ0QsT0FMRDs7QUFPQXpDLFNBQUc4QyxJQUFILENBQVMsa0JBQVQsRUFBNkIsa0JBQWtCO0FBQzdDLGNBQU1WLG1CQUFtQixNQUFNbkMsR0FBR29DLHVCQUFILENBQTJCakMsZ0JBQWdCSSxFQUEzQyxFQUErQyxFQUFFdUMsV0FBVyxPQUFiLEVBQS9DLENBQS9CO0FBQ0FDLGdCQUFRQyxHQUFSLENBQVliLGlCQUFpQlcsU0FBN0I7QUFDRCxPQUhEO0FBSUQsS0FsQkQ7O0FBcUJBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRCxHQXBJRDtBQXFJRCxDQXRJRCIsImZpbGUiOiJkYi50ZXN0LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgYXNzZXJ0IH0gPSByZXF1aXJlKCdjaGFpJylcbmNvbnN0IGZha2VyID0gcmVxdWlyZSgnZmFrZXInKVxuY29uc3QgbW9jaGEgPSByZXF1aXJlKCdtb2NoYScpXG5jb25zdCBhZnRlciA9IG1vY2hhLmFmdGVyXG5jb25zdCBiZWZvcmUgPSBtb2NoYS5iZWZvcmVcbmNvbnN0IGJlZm9yZUVhY2ggPSBtb2NoYS5iZWZvcmVFYWNoXG5jb25zdCBhZnRlckVhY2ggPSBtb2NoYS5hZnRlckVhY2hcbmNvbnN0IGRlc2NyaWJlID0gbW9jaGEuZGVzY3JpYmVcbmNvbnN0IGl0ID0gbW9jaGEuaXRcblxuY29uc3QgZGIgPSByZXF1aXJlKCcuLi9saWIvZGInKVxuY29uc3QgZXJyb3JzID0gcmVxdWlyZSgnLi4vbGliL2Vycm9ycycpXG5cbmRlc2NyaWJlKCdEQicsIGZ1bmN0aW9uICgpIHtcbiAgZGVzY3JpYmUoJ1NvbmdSZXF1ZXN0cycsIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgY3JlYXRlZFNvbmdSZXF1ZXN0ID0gbnVsbFxuICAgIGxldCBmYWtlU29uZ1JlcXVlc3QgPSBudWxsXG4gICAgbGV0IGZha2VTb25nUmVxdWVzdHMgPSBbXVxuXG4gICAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgICBsZXQgc3BvdGlmeUluZm8gPSB7XG4gICAgICAgICAgaWQ6IGZha2VyLnJhbmRvbS51dWlkKCksXG4gICAgICAgICAgdGl0bGU6IGZha2VyLnJhbmRvbS53b3JkcygpLFxuICAgICAgICAgIGFydGlzdHM6IFt7IG5hbWU6IGZha2VyLnJhbmRvbS53b3JkcygpIH1dLFxuICAgICAgICAgIGFsYnVtOiB7IG5hbWU6IGZha2VyLnJhbmRvbS53b3JkcygpLCBpbWFnZTogW3sgdXJsOiBmYWtlci5pbnRlcm5ldC51cmwoKSB9XX0sXG4gICAgICAgICAgZXh0ZXJuYWxfaWRzOiB7IGlzcmM6IGZha2VyLmxvcmVtLndvcmQoKSB9LFxuICAgICAgICAgIGR1cmF0aW9uX21zOiBmYWtlci5yYW5kb20ubnVtYmVyKClcbiAgICAgICAgfVxuICAgICAgICBmYWtlU29uZ1JlcXVlc3RzLnB1c2goYXdhaXQgZGIuY3JlYXRlU29uZ1JlcXVlc3QoeyBzcG90aWZ5X2luZm86IHNwb3RpZnlJbmZvIH0pKSBcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgYmVmb3JlRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgc3BvdGlmeUluZm8gPSB7XG4gICAgICAgICAgaWQ6IGZha2VyLnJhbmRvbS51dWlkKCksXG4gICAgICAgICAgdGl0bGU6IGZha2VyLnJhbmRvbS53b3JkcygpLFxuICAgICAgICAgIGFydGlzdHM6IFt7IG5hbWU6IGZha2VyLnJhbmRvbS53b3JkcygpIH1dLFxuICAgICAgICAgIGFsYnVtOiB7IG5hbWU6IGZha2VyLnJhbmRvbS53b3JkcygpLCBpbWFnZTogW3sgdXJsOiBmYWtlci5pbnRlcm5ldC51cmwoKSB9XX0sXG4gICAgICAgICAgZXh0ZXJuYWxfaWRzOiB7IGlzcmM6IGZha2VyLmxvcmVtLndvcmQoKSB9LFxuICAgICAgICAgIGR1cmF0aW9uX21zOiBmYWtlci5yYW5kb20ubnVtYmVyKClcbiAgICAgICAgfVxuICAgICAgZmFrZVNvbmdSZXF1ZXN0ID0gYXdhaXQgZGIuY3JlYXRlU29uZ1JlcXVlc3QoeyBzcG90aWZ5X2luZm86IHNwb3RpZnlJbmZvIH0pXG4gICAgfSlcblxuICAgIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAobGV0IHNvbmdSZXF1ZXN0IG9mIGZha2VTb25nUmVxdWVzdHMpIHtcbiAgICAgICAgYXdhaXQgZGIucmVtb3ZlU29uZ1JlcXVlc3RXaXRoSUQoc29uZ1JlcXVlc3QuaWQpXG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKHNvbmdSZXF1ZXN0LmlkKVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9XG4gICAgfSlcblxuICAgIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkYi5yZW1vdmVTb25nUmVxdWVzdFdpdGhJRChmYWtlU29uZ1JlcXVlc3QuaWQpXG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKGNyZWF0ZWRTb25nUmVxdWVzdC5pZClcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7fVxuICAgIH0pXG5cbiAgICBkZXNjcmliZSgnR2V0JywgZnVuY3Rpb24gKCkge1xuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gYSBzb25nUmVxdWVzdCAoaWQpJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgc29uZ1JlcXVlc3QgPSBhd2FpdCBkYi5nZXRTb25nUmVxdWVzdFdpdGhJRChmYWtlU29uZ1JlcXVlc3QuaWQpXG4gICAgICAgIGFzc2VydC5ub3RFcXVhbChzb25nUmVxdWVzdCwgbnVsbClcbiAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChzb25nUmVxdWVzdC5zcG90aWZ5X2luZm8sIGZha2VTb25nUmVxdWVzdC5zcG90aWZ5X2luZm8pXG4gICAgICB9KVxuXG4gICAgICBpdCgnc2hvdWxkIHJldHVybiBhIHNvbmdSZXF1ZXN0IChzcG90aWZ5X2lkKScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IHNvbmdSZXF1ZXN0ID0gYXdhaXQgZGIuZ2V0U29uZ1JlcXVlc3RXaXRoU3BvdGlmeUlEKGZha2VTb25nUmVxdWVzdC5zcG90aWZ5X2lkKVxuICAgICAgICBhc3NlcnQubm90RXF1YWwoc29uZ1JlcXVlc3QsIG51bGwpXG4gICAgICAgIGFzc2VydC5kZWVwRXF1YWwoc29uZ1JlcXVlc3Quc3BvdGlmeV9pbmZvLCBmYWtlU29uZ1JlcXVlc3Quc3BvdGlmeV9pbmZvKVxuICAgICAgfSlcbiAgICB9KVxuXG4gICAgZGVzY3JpYmUoJ1B1dCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGl0ICgnc2hvdWxkIGFkZCBhIHN0YXR1cyB0byB0aGUgc2hpdCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3Qgc2F2ZWRTb25nUmVxdWVzdCA9IGF3YWl0IGRiLnVwZGF0ZVNvbmdSZXF1ZXN0V2l0aElEKGZha2VTb25nUmVxdWVzdC5pZCwgeyBzdGF0dXM6IGVycm9ycy5NQVRDSF9OT1RfRk9VTkQgfSlcbiAgICAgICAgbGV0IHNvbmdSZXF1ZXN0ID0gYXdhaXQgZGIuZ2V0U29uZ1JlcXVlc3RXaXRoSUQoZmFrZVNvbmdSZXF1ZXN0LmlkKVxuICAgICAgICBhc3NlcnQuZXF1YWwoc29uZ1JlcXVlc3Quc3RhdHVzLCBlcnJvcnMuTUFUQ0hfTk9UX0ZPVU5EKVxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaXQgKCdzaG91bGQgYWRkIHlvdXR1YmVfbWF0Y2hlcycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3QganNvbkFycmF5VG9TYXZlID0gSlNPTi5zdHJpbmdpZnkoW3sgdGhpczogJ2lzQXdlc29tZScgfV0pXG4gICAgICAgIGNvbnN0IHNhdmVkU29uZ1JlcXVlc3QgPSBhd2FpdCBkYi51cGRhdGVTb25nUmVxdWVzdFdpdGhJRChmYWtlU29uZ1JlcXVlc3QuaWQsIHsgeW91dHViZV9tYXRjaGVzOiBqc29uQXJyYXlUb1NhdmUgfSlcbiAgICAgICAgbGV0IHNvbmdSZXF1ZXN0ID0gYXdhaXQgZGIuZ2V0U29uZ1JlcXVlc3RXaXRoSUQoZmFrZVNvbmdSZXF1ZXN0LmlkKVxuICAgICAgICBhc3NlcnQuZXF1YWwoSlNPTi5zdHJpbmdpZnkoc29uZ1JlcXVlc3QueW91dHViZV9tYXRjaGVzKSwganNvbkFycmF5VG9TYXZlKVxuICAgICAgfSlcblxuICAgICAgaXQub25seSAoJ2FkZHMgYSB0aW1lc3RhbXAnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHNhdmVkU29uZ1JlcXVlc3QgPSBhd2FpdCBkYi51cGRhdGVTb25nUmVxdWVzdFdpdGhJRChmYWtlU29uZ1JlcXVlc3QuaWQsIHsgY29tcGxldGVkOiAnTk9XKCknIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKHNhdmVkU29uZ1JlcXVlc3QuY29tcGxldGVkKVxuICAgICAgfSlcbiAgICB9KVxuXG5cbiAgICAvLyBkZXNjcmliZSgnU2VhcmNoJywgZnVuY3Rpb24gKCkge1xuICAgIC8vICAgbGV0IGZha2VVc2VycyA9IFtdXG5cbiAgICAvLyAgIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgIHRoaXMudGltZW91dCgxNTAwMClcblxuICAgIC8vICAgICBsZXQgc29uZ1JlcXVlc3RzID0gW1xuICAgIC8vICAgICAgIHsgc3BvdGlmeV9pZDogJ3Nwb3RpZnlJRDEnLCBrZXk6ICdrZXkxJywgaXNfcHJvY2Vzc2luZzogdHJ1ZSB9LFxuICAgIC8vICAgICAgIHsgc3BvdGlmeV9pZDogJ3Nwb3RpZnlJRDInLCBrZXk6ICdrZXkyJywgaXNfcHJvY2Vzc2luZzogdHJ1ZSB9LFxuICAgIC8vICAgICAgIHsgc3BvdGlmeV9pZDogJ3Nwb3RpZnlJRDMnLCBrZXk6ICdrZXkzJywgaXNfcHJvY2Vzc2luZzogZmFsc2UgfSxcbiAgICAvLyAgICAgICB7IHNwb3RpZnlfaWQ6ICdzcG90aWZ5SUQ0Jywga2V5OiAna2V5NCcsIGlzX3Byb2Nlc3Npbmc6IGZhbHNlIH0sXG4gICAgLy8gICAgICAgeyBzcG90aWZ5X2lkOiAnc3BvdGlmeUlENScsIGtleTogJ2tleTUnLCBpc19wcm9jZXNzaW5nOiBmYWxzZSB9XG4gICAgLy8gICAgIF1cblxuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBlb3BsZS5sZW5ndGg7IGkrKykge1xuICAgIC8vICAgICAgIGxldCBzb25nUmVxdWVzdCA9IHNvbmdSZXF1ZXN0c1tpXVxuICAgIC8vICAgICAgIGxldCBzb25nUmVxdWVzdCA9IGF3YWl0IGRiLmNyZWF0ZVNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0c1tpXSlcbiAgICAvLyAgICAgICBmYWtlU29uZ1JlcXVlc3RzLnB1c2goc29uZ1JlcXVlc3QpXG4gICAgLy8gICAgIH1cbiAgICAvLyAgIH0pXG5cbiAgICAvLyAgIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAvLyAgICAgdGhpcy50aW1lb3V0KDE1MDAwKVxuICAgIC8vICAgICBmb3IgKGxldCBzb25nUmVxdWVzdCBvZiBmYWtlU29uZ1JlcXVlc3RzKSB7XG4gICAgLy8gICAgICAgYXdhaXQgZGIucmVtb3ZlVXNlcldpdGhFbWFpbChzb25nUmVxdWVzdC5lbWFpbClcbiAgICAvLyAgICAgfVxuICAgIC8vICAgfSlcblxuICAgIC8vICAgaXQoJ3Nob3VsZCBmaW5kIHVzZXJzIG1hdGNoaW5nIGEgcXVlcnkgKGFsaSknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgIGxldCB1c2VycyA9IGF3YWl0IGRiLmdldFVzZXJzTWF0Y2hpbmdRdWVyeSgnYWxpJylcbiAgICAvLyAgICAgYXNzZXJ0LmlzQXRMZWFzdCh1c2Vycy5sZW5ndGgsIDEpXG4gICAgLy8gICB9KVxuXG4gICAgLy8gICBpdCgnc2hvdWxkIGZpbmQgdXNlcnMgbWF0Y2hpbmcgYSBxdWVyeSAobWFuKScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAvLyAgICAgbGV0IHVzZXJzID0gYXdhaXQgZGIuZ2V0VXNlcnNNYXRjaGluZ1F1ZXJ5KCdtYW4nKVxuICAgIC8vICAgICBhc3NlcnQuaXNBdExlYXN0KHVzZXJzLmxlbmd0aCwgMilcbiAgICAvLyAgIH0pXG5cbiAgICAvLyAgIGl0KCdzaG91bGQgZmluZCB1c2VycyBtYXRjaGluZyBhIHF1ZXJ5IChsYSknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgIGxldCB1c2VycyA9IGF3YWl0IGRiLmdldFVzZXJzTWF0Y2hpbmdRdWVyeSgnbGEnKVxuICAgIC8vICAgICBhc3NlcnQuaXNBdExlYXN0KHVzZXJzLmxlbmd0aCwgMilcbiAgICAvLyAgIH0pXG5cbiAgICAvLyAgIGl0KCdzaG91bGQgZmluZCB1c2VycyBtYXRjaGluZyBhIHF1ZXJ5ICg2OSknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgIGxldCB1c2VycyA9IGF3YWl0IGRiLmdldFVzZXJzTWF0Y2hpbmdRdWVyeSgnNjknKVxuICAgIC8vICAgICBhc3NlcnQuaXNBdExlYXN0KHVzZXJzLmxlbmd0aCwgMilcbiAgICAvLyAgIH0pXG4gICAgLy8gfSlcbiAgfSlcbn0pIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "db.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "db",
        "errors",
        "createdSongRequest",
        "fakeSongRequest",
        "fakeSongRequests",
        "i",
        "spotifyInfo",
        "id",
        "random",
        "uuid",
        "title",
        "words",
        "artists",
        "name",
        "album",
        "image",
        "url",
        "internet",
        "external_ids",
        "isrc",
        "lorem",
        "word",
        "duration_ms",
        "number",
        "push",
        "createSongRequest",
        "spotify_info",
        "songRequest",
        "removeSongRequestWithID",
        "error",
        "getSongRequestWithID",
        "notEqual",
        "deepEqual",
        "getSongRequestWithSpotifyID",
        "spotify_id",
        "savedSongRequest",
        "updateSongRequestWithID",
        "status",
        "MATCH_NOT_FOUND",
        "equal",
        "jsonArrayToSave",
        "JSON",
        "stringify",
        "this",
        "youtube_matches",
        "only",
        "completed",
        "console",
        "log"
      ],
      "mappings": "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",
      "file": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\n\nconst db = require('../lib/db')\nconst errors = require('../lib/errors')\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null\n    let fakeSongRequest = null\n    let fakeSongRequests = []\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n        fakeSongRequests.push(await db.createSongRequest({ spotify_info: spotifyInfo })) \n      }\n    })\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo })\n    })\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id)\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id)\n      } catch (error) {}\n    })\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id)\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      } catch (error) {}\n    })\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n    })\n\n    describe('Put', function () {\n      it ('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND)\n      })\n      \n      it ('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }])\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave)\n      })\n\n      it.only ('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' })\n        console.log(savedSongRequest.completed)\n      })\n    })\n\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  })\n})"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/index.js",
      "filenameRelative": "/home/playola/lib/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const pgp = require('pg-promise')();\nconst db = pgp(process.env.DATABASE_URL);\nconst songRequests = require('./songRequests');\nconst errors = require('../errors');\nconst utils = require('../../deps/db-utils');\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: data => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id;\n    }\n    return songRequests.create(db, data);\n  },\n  getSongRequestWithID: songRequestID => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestWithIDs: songRequestIDs => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table);\n  },\n  removeSongRequestWithID: songRequestID => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data);\n  },\n  getSongRequestWithSpotifyID: spotifyID => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestsMatchingQuery: query => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` + 'where (spotify_id) ilike ${query} ' + 'or status ilike ${query} ' +\n    // 'or song_id ilike ${query} ' +\n    // 'or is_processing ilike ${query} ' +\n    `limit 10`, { query: `%${query}%` });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBncCIsInJlcXVpcmUiLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJzb25nUmVxdWVzdHMiLCJlcnJvcnMiLCJ1dGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVTb25nUmVxdWVzdCIsImRhdGEiLCJzcG90aWZ5X2luZm8iLCJzcG90aWZ5X2lkIiwiaWQiLCJjcmVhdGUiLCJnZXRTb25nUmVxdWVzdFdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJnZXRXaXRoSUQiLCJjb2x1bW5zIiwidGFibGUiLCJTT05HX1JFUVVFU1RfRE9FU19OT1RfRVhJU1QiLCJnZXRTb25nUmVxdWVzdFdpdGhJRHMiLCJzb25nUmVxdWVzdElEcyIsInJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEIiwicmVtb3ZlV2l0aElEIiwidXBkYXRlU29uZ1JlcXVlc3RXaXRoSUQiLCJ1cGRhdGVXaXRoSUQiLCJnZXRTb25nUmVxdWVzdFdpdGhTcG90aWZ5SUQiLCJzcG90aWZ5SUQiLCJnZXRXaXRoRmllbGRJRCIsImdldFNvbmdSZXF1ZXN0c01hdGNoaW5nUXVlcnkiLCJxdWVyeSIsIm1hbnlPck5vbmUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU1DLFFBQVEsWUFBUixHQUFaO0FBQ0EsTUFBTUMsS0FBS0YsSUFBSUcsUUFBUUMsR0FBUixDQUFZQyxZQUFoQixDQUFYO0FBQ0EsTUFBTUMsZUFBZUwsUUFBUSxnQkFBUixDQUFyQjtBQUNBLE1BQU1NLFNBQVNOLFFBQVEsV0FBUixDQUFmO0FBQ0EsTUFBTU8sUUFBUVAsUUFBUSxxQkFBUixDQUFkOztBQUVBUSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0FDLHFCQUFvQkMsSUFBRCxJQUFVO0FBQzNCLFFBQUlBLEtBQUtDLFlBQVQsRUFBdUI7QUFDckJELFdBQUtFLFVBQUwsR0FBa0JGLEtBQUtDLFlBQUwsQ0FBa0JFLEVBQXBDO0FBQ0Q7QUFDRCxXQUFPVCxhQUFhVSxNQUFiLENBQW9CZCxFQUFwQixFQUF3QlUsSUFBeEIsQ0FBUDtBQUNELEdBVGM7QUFVZkssd0JBQXVCQyxhQUFELElBQW1CO0FBQ3ZDLFdBQU9WLE1BQU1XLFNBQU4sQ0FBZ0JqQixFQUFoQixFQUFvQmdCLGFBQXBCLEVBQW1DWixhQUFhYyxPQUFoRCxFQUF5RGQsYUFBYWUsS0FBdEUsRUFBNkVkLE9BQU9lLDJCQUFwRixDQUFQO0FBQ0QsR0FaYztBQWFmQyx5QkFBd0JDLGNBQUQsSUFBb0I7QUFDekMsV0FBT2hCLE1BQU1XLFNBQU4sQ0FBZ0JqQixFQUFoQixFQUFvQnNCLGNBQXBCLEVBQW9DbEIsYUFBYWMsT0FBakQsRUFBMERkLGFBQWFlLEtBQXZFLENBQVA7QUFDRCxHQWZjO0FBZ0JmSSwyQkFBMEJQLGFBQUQsSUFBbUI7QUFDMUMsV0FBT1YsTUFBTWtCLFlBQU4sQ0FBbUJ4QixFQUFuQixFQUF1QmdCLGFBQXZCLEVBQXNDWixhQUFhZSxLQUFuRCxFQUEwRGQsT0FBT2UsMkJBQWpFLENBQVA7QUFDRCxHQWxCYztBQW1CZkssMkJBQXlCLENBQUNULGFBQUQsRUFBZ0JOLElBQWhCLEtBQXlCO0FBQ2hELFdBQU9OLGFBQWFzQixZQUFiLENBQTBCMUIsRUFBMUIsRUFBOEJnQixhQUE5QixFQUE2Q04sSUFBN0MsQ0FBUDtBQUNELEdBckJjO0FBc0JmaUIsK0JBQThCQyxTQUFELElBQWU7QUFDMUMsV0FBT3RCLE1BQU11QixjQUFOLENBQXFCN0IsRUFBckIsRUFBeUI0QixTQUF6QixFQUFvQyxZQUFwQyxFQUFrRHhCLGFBQWFjLE9BQS9ELEVBQXdFZCxhQUFhZSxLQUFyRixFQUE0RmQsT0FBT2UsMkJBQW5HLENBQVA7QUFDRCxHQXhCYztBQXlCZlUsZ0NBQStCQyxLQUFELElBQVc7QUFDdkMsV0FBTy9CLEdBQUdnQyxVQUFILENBQWUsVUFBUzVCLGFBQWFjLE9BQVEsU0FBUWQsYUFBYWUsS0FBTSxHQUExRCxHQUNuQixvQ0FEbUIsR0FFbkIsMkJBRm1CO0FBR25CO0FBQ0E7QUFDQyxjQUxJLEVBS08sRUFBRVksT0FBUSxJQUFHQSxLQUFNLEdBQW5CLEVBTFAsQ0FBUDtBQU1EO0FBaENjLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL2RiIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGdwID0gcmVxdWlyZSgncGctcHJvbWlzZScpKClcbmNvbnN0IGRiID0gcGdwKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTClcbmNvbnN0IHNvbmdSZXF1ZXN0cyA9IHJlcXVpcmUoJy4vc29uZ1JlcXVlc3RzJylcbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gU29uZyBSZXF1ZXN0c1xuICAvL1xuICBjcmVhdGVTb25nUmVxdWVzdDogKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YS5zcG90aWZ5X2luZm8pIHtcbiAgICAgIGRhdGEuc3BvdGlmeV9pZCA9IGRhdGEuc3BvdGlmeV9pbmZvLmlkXG4gICAgfVxuICAgIHJldHVybiBzb25nUmVxdWVzdHMuY3JlYXRlKGRiLCBkYXRhKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhJRHM6IChzb25nUmVxdWVzdElEcykgPT4ge1xuICAgIHJldHVybiB1dGlscy5nZXRXaXRoSUQoZGIsIHNvbmdSZXF1ZXN0SURzLCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlKVxuICB9LFxuICByZW1vdmVTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMucmVtb3ZlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBzb25nUmVxdWVzdHMudGFibGUsIGVycm9ycy5TT05HX1JFUVVFU1RfRE9FU19OT1RfRVhJU1QpXG4gIH0sXG4gIHVwZGF0ZVNvbmdSZXF1ZXN0V2l0aElEOiAoc29uZ1JlcXVlc3RJRCwgZGF0YSkgPT4ge1xuICAgIHJldHVybiBzb25nUmVxdWVzdHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdFdpdGhTcG90aWZ5SUQ6IChzcG90aWZ5SUQpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aEZpZWxkSUQoZGIsIHNwb3RpZnlJRCwgJ3Nwb3RpZnlfaWQnLCBzb25nUmVxdWVzdHMuY29sdW1ucywgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICBnZXRTb25nUmVxdWVzdHNNYXRjaGluZ1F1ZXJ5OiAocXVlcnkpID0+IHtcbiAgICByZXR1cm4gZGIubWFueU9yTm9uZShgc2VsZWN0ICR7c29uZ1JlcXVlc3RzLmNvbHVtbnN9IGZyb20gJHtzb25nUmVxdWVzdHMudGFibGV9IGAgK1xuICAgICAgJ3doZXJlIChzcG90aWZ5X2lkKSBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgICdvciBzdGF0dXMgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAvLyAnb3Igc29uZ19pZCBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgIC8vICdvciBpc19wcm9jZXNzaW5nIGlsaWtlICR7cXVlcnl9ICcgK1xuICAgICAgYGxpbWl0IDEwYCwgeyBxdWVyeTogYCUke3F1ZXJ5fSVgIH0pXG4gIH1cbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "pgp",
        "require",
        "db",
        "process",
        "env",
        "DATABASE_URL",
        "songRequests",
        "errors",
        "utils",
        "module",
        "exports",
        "createSongRequest",
        "data",
        "spotify_info",
        "spotify_id",
        "id",
        "create",
        "getSongRequestWithID",
        "songRequestID",
        "getWithID",
        "columns",
        "table",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "getSongRequestWithIDs",
        "songRequestIDs",
        "removeSongRequestWithID",
        "removeWithID",
        "updateSongRequestWithID",
        "updateWithID",
        "getSongRequestWithSpotifyID",
        "spotifyID",
        "getWithFieldID",
        "getSongRequestsMatchingQuery",
        "query",
        "manyOrNone"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,YAAR,GAAZ;AACA,MAAMC,KAAKF,IAAIG,QAAQC,GAAR,CAAYC,YAAhB,CAAX;AACA,MAAMC,eAAeL,QAAQ,gBAAR,CAArB;AACA,MAAMM,SAASN,QAAQ,WAAR,CAAf;AACA,MAAMO,QAAQP,QAAQ,qBAAR,CAAd;;AAEAQ,OAAOC,OAAP,GAAiB;AACf;AACA;AACA;AACAC,qBAAoBC,IAAD,IAAU;AAC3B,QAAIA,KAAKC,YAAT,EAAuB;AACrBD,WAAKE,UAAL,GAAkBF,KAAKC,YAAL,CAAkBE,EAApC;AACD;AACD,WAAOT,aAAaU,MAAb,CAAoBd,EAApB,EAAwBU,IAAxB,CAAP;AACD,GATc;AAUfK,wBAAuBC,aAAD,IAAmB;AACvC,WAAOV,MAAMW,SAAN,CAAgBjB,EAAhB,EAAoBgB,aAApB,EAAmCZ,aAAac,OAAhD,EAAyDd,aAAae,KAAtE,EAA6Ed,OAAOe,2BAApF,CAAP;AACD,GAZc;AAafC,yBAAwBC,cAAD,IAAoB;AACzC,WAAOhB,MAAMW,SAAN,CAAgBjB,EAAhB,EAAoBsB,cAApB,EAAoClB,aAAac,OAAjD,EAA0Dd,aAAae,KAAvE,CAAP;AACD,GAfc;AAgBfI,2BAA0BP,aAAD,IAAmB;AAC1C,WAAOV,MAAMkB,YAAN,CAAmBxB,EAAnB,EAAuBgB,aAAvB,EAAsCZ,aAAae,KAAnD,EAA0Dd,OAAOe,2BAAjE,CAAP;AACD,GAlBc;AAmBfK,2BAAyB,CAACT,aAAD,EAAgBN,IAAhB,KAAyB;AAChD,WAAON,aAAasB,YAAb,CAA0B1B,EAA1B,EAA8BgB,aAA9B,EAA6CN,IAA7C,CAAP;AACD,GArBc;AAsBfiB,+BAA8BC,SAAD,IAAe;AAC1C,WAAOtB,MAAMuB,cAAN,CAAqB7B,EAArB,EAAyB4B,SAAzB,EAAoC,YAApC,EAAkDxB,aAAac,OAA/D,EAAwEd,aAAae,KAArF,EAA4Fd,OAAOe,2BAAnG,CAAP;AACD,GAxBc;AAyBfU,gCAA+BC,KAAD,IAAW;AACvC,WAAO/B,GAAGgC,UAAH,CAAe,UAAS5B,aAAac,OAAQ,SAAQd,aAAae,KAAM,GAA1D,GACnB,oCADmB,GAEnB,2BAFmB;AAGnB;AACA;AACC,cALI,EAKO,EAAEY,OAAQ,IAAGA,KAAM,GAAnB,EALP,CAAP;AAMD;AAhCc,CAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const pgp = require('pg-promise')()\nconst db = pgp(process.env.DATABASE_URL)\nconst songRequests = require('./songRequests')\nconst errors = require('../errors')\nconst utils = require('../../deps/db-utils')\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: (data) => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id\n    }\n    return songRequests.create(db, data)\n  },\n  getSongRequestWithID: (songRequestID) => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestWithIDs: (songRequestIDs) => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table)\n  },\n  removeSongRequestWithID: (songRequestID) => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data)\n  },\n  getSongRequestWithSpotifyID: (spotifyID) => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestsMatchingQuery: (query) => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` +\n      'where (spotify_id) ilike ${query} ' +\n      'or status ilike ${query} ' +\n      // 'or song_id ilike ${query} ' +\n      // 'or is_processing ilike ${query} ' +\n      `limit 10`, { query: `%${query}%` })\n  }\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/db/songRequests.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/songRequests.js",
      "filenameRelative": "/home/playola/lib/db/songRequests.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequests.js",
      "sourceFileName": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequests"
    },
    "ignored": false,
    "code": "const errors = require('../errors');\nconst utils = require('../../deps/db-utils');\nconst songRequestCache = require('../cache/songRequest');\n\nconst SONG_REQUESTS_TABLE = 'song_requests';\nconst SONG_REQUESTS_PUBLIC_COLUMNS = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ');\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  };\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS));\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID));\n        }\n        return reject(err);\n      } else {\n        songRequestCache.setSongRequest(songRequest);\n        return resolve(songRequest);\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(songRequest => finish(null, songRequest)).catch(err => finish(err));\n  });\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'];\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      songRequestCache.setSongRequest(songRequest);\n      resolve(songRequest);\n    }\n\n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(segment => finish(null, segment)).catch(err => finish(err));\n  });\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0cy5qcyJdLCJuYW1lcyI6WyJlcnJvcnMiLCJyZXF1aXJlIiwidXRpbHMiLCJzb25nUmVxdWVzdENhY2hlIiwiU09OR19SRVFVRVNUU19UQUJMRSIsIlNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMiLCJtYXAiLCJjIiwiam9pbiIsImNyZWF0ZSIsImRiIiwiZGF0YSIsImRlZmF1bHRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmaW5pc2giLCJlcnIiLCJzb25nUmVxdWVzdCIsImNvbnN0cmFpbnQiLCJFcnJvciIsImVycnMiLCJTT05HX1JFUVVFU1RfQUxSRUFEWV9FWElTVFMiLCJwYXJzZUludCIsImNvZGUiLCJUUkFOU0NSSVBUX0lEX0lOVkFMSUQiLCJzZXRTb25nUmVxdWVzdCIsInRoZW4iLCJjYXRjaCIsInVwZGF0ZVdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJhbGxvd2VkRmllbGRzIiwiY29uc29sZSIsImxvZyIsInNlZ21lbnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29sdW1ucyIsInRhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1DLFFBQVFELFFBQVEscUJBQVIsQ0FBZDtBQUNBLE1BQU1FLG1CQUFtQkYsUUFBUSxzQkFBUixDQUF6Qjs7QUFFQSxNQUFNRyxzQkFBc0IsZUFBNUI7QUFDQSxNQUFNQywrQkFBK0IsQ0FDbkMsSUFEbUMsRUFFbkMsWUFGbUMsRUFHbkMsY0FIbUMsRUFJbkMsb0JBSm1DLEVBS25DLGlCQUxtQyxFQU1uQyx1QkFObUMsRUFPbkMsS0FQbUMsRUFRbkMsZ0JBUm1DLEVBU25DLFFBVG1DLEVBVW5DLFNBVm1DLEVBV25DLGVBWG1DLEVBWW5DLFdBWm1DLEVBYW5DLFlBYm1DLEVBY25DQyxHQWRtQyxDQWMvQkMsS0FBTSxHQUFFSCxtQkFBb0IsSUFBR0csQ0FBRSxFQWRGLEVBY0tDLElBZEwsQ0FjVSxJQWRWLENBQXJDOztB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ZXNDb250ZW50IjpbImNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuY29uc3Qgc29uZ1JlcXVlc3RDYWNoZSA9IHJlcXVpcmUoJy4uL2NhY2hlL3NvbmdSZXF1ZXN0JylcblxuY29uc3QgU09OR19SRVFVRVNUU19UQUJMRSA9ICdzb25nX3JlcXVlc3RzJ1xuY29uc3QgU09OR19SRVFVRVNUU19QVUJMSUNfQ09MVU1OUyA9IFtcbiAgJ2lkJyxcbiAgJ3Nwb3RpZnlfaWQnLFxuICAnc3BvdGlmeV9pbmZvJyxcbiAgJ3Nwb3RpZnlfaW5mb19lcnJvcicsXG4gICd5b3V0dWJlX21hdGNoZXMnLFxuICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgJ2tleScsXG4gICdkb3dubG9hZF9lcnJvcicsXG4gICdzdGF0dXMnLFxuICAnc29uZ19pZCcsXG4gICdpc19wcm9jZXNzaW5nJyxcbiAgJ2NvbXBsZXRlZCcsXG4gICdjcmVhdGVkX2F0J1xuXS5tYXAoYyA9PiBgJHtTT05HX1JFUVVFU1RTX1RBQkxFfS4ke2N9YCkuam9pbignLCAnKVxuXG5mdW5jdGlvbiBjcmVhdGUoZGIsIGRhdGEgPSB7fSkge1xuICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAnc3BvdGlmeV9pZCc6ICcnLFxuICAgICdzcG90aWZ5X2luZm8nOiB7fSxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJzoge30sXG4gICAgJ3lvdXR1YmVfbWF0Y2hlcyc6IHt9LFxuICAgICd5b3V0dWJlX21hdGNoZXNfZXJyb3InOiB7fSxcbiAgICAna2V5JzogJycsXG4gICAgJ2Rvd25sb2FkX2Vycm9yJzoge30sXG4gICAgJ3N0YXR1cyc6ICcnLFxuICAgICdzb25nX2lkJzogJycsXG4gICAgJ2lzX3Byb2Nlc3NpbmcnOiB0cnVlXG4gIH1cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBmdW5jdGlvbiBmaW5pc2goZXJyLCBzb25nUmVxdWVzdCkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvbnN0cmFpbnQgPT09ICdzcG90aWZ5X2lkX3VuaXF1ZV9pbmRleCcpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihlcnJzLlNPTkdfUkVRVUVTVF9BTFJFQURZX0VYSVNUUykpXG4gICAgICAgIH0gZWxzZSBpZiAocGFyc2VJbnQoZXJyLmNvZGUpID09PSAyMzUwMikge1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGVycnMuVFJBTlNDUklQVF9JRF9JTlZBTElEKSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvbmdSZXF1ZXN0Q2FjaGUuc2V0U29uZ1JlcXVlc3Qoc29uZ1JlcXVlc3QpXG4gICAgICAgIHJldHVybiByZXNvbHZlKHNvbmdSZXF1ZXN0KVxuICAgICAgfVxuICAgIH1cblxuICAgIHV0aWxzLmNyZWF0ZShkYiwgZGVmYXVsdHMsIGRhdGEsIFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsIFNPTkdfUkVRVUVTVFNfVEFCTEUpXG4gICAgICAudGhlbihzb25nUmVxdWVzdCA9PiBmaW5pc2gobnVsbCwgc29uZ1JlcXVlc3QpKVxuICAgICAgLmNhdGNoKGVyciA9PiBmaW5pc2goZXJyKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhID0ge30pIHtcbiAgY29uc3QgYWxsb3dlZEZpZWxkcyA9IFtcbiAgICAnaWQnLFxuICAgICdzcG90aWZ5X2lkJyxcbiAgICAnc3BvdGlmeV9pbmZvJyxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJyxcbiAgICAneW91dHViZV9tYXRjaGVzJyxcbiAgICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgICAna2V5JyxcbiAgICAnZG93bmxvYWRfZXJyb3InLFxuICAgICdzdGF0dXMnLFxuICAgICdzb25nX2lkJyxcbiAgICAnaXNfcHJvY2Vzc2luZycsXG4gICAgJ2NvbXBsZXRlZCcsXG4gICAgJ2NyZWF0ZWRfYXQnXG4gIF1cblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZ1bmN0aW9uIGZpbmlzaChlcnIsIHNvbmdSZXF1ZXN0KSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpXG4gICAgICB9XG4gICAgICBzb25nUmVxdWVzdENhY2hlLnNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KVxuICAgICAgcmVzb2x2ZShzb25nUmVxdWVzdClcbiAgICB9XG4gICAgXG4gICAgdXRpbHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBhbGxvd2VkRmllbGRzLCBkYXRhLCBTT05HX1JFUVVFU1RTX1BVQkxJQ19DT0xVTU5TLCBTT05HX1JFUVVFU1RTX1RBQkxFKVxuICAgICAgLnRoZW4oc2VnbWVudCA9PiBmaW5pc2gobnVsbCwgc2VnbWVudCkpXG4gICAgICAuY2F0Y2goZXJyID0+IGZpbmlzaChlcnIpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gQ29uc3RhbnRzXG4gIC8vXG4gIGNvbHVtbnM6IFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsXG4gIHRhYmxlOiBTT05HX1JFUVVFU1RTX1RBQkxFLFxuXG4gIC8vXG4gIC8vIE1ldGhvZHNcbiAgLy9cbiAgY3JlYXRlLFxuICB1cGRhdGVXaXRoSURcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequests.js"
      ],
      "names": [
        "errors",
        "require",
        "utils",
        "songRequestCache",
        "SONG_REQUESTS_TABLE",
        "SONG_REQUESTS_PUBLIC_COLUMNS",
        "map",
        "c",
        "join",
        "create",
        "db",
        "data",
        "defaults",
        "Promise",
        "resolve",
        "reject",
        "finish",
        "err",
        "songRequest",
        "constraint",
        "Error",
        "errs",
        "SONG_REQUEST_ALREADY_EXISTS",
        "parseInt",
        "code",
        "TRANSCRIPT_ID_INVALID",
        "setSongRequest",
        "then",
        "catch",
        "updateWithID",
        "songRequestID",
        "allowedFields",
        "console",
        "log",
        "segment",
        "module",
        "exports",
        "columns",
        "table"
      ],
      "mappings": "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",
      "file": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const errors = require('../errors')\nconst utils = require('../../deps/db-utils')\nconst songRequestCache = require('../cache/songRequest')\n\nconst SONG_REQUESTS_TABLE = 'song_requests'\nconst SONG_REQUESTS_PUBLIC_COLUMNS = [\n  'id',\n  'spotify_id',\n  'spotify_info',\n  'spotify_info_error',\n  'youtube_matches',\n  'youtube_matches_error',\n  'key',\n  'download_error',\n  'status',\n  'song_id',\n  'is_processing',\n  'completed',\n  'created_at'\n].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ')\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  }\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS))\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID))\n        }\n        return reject(err)\n      } else {\n        songRequestCache.setSongRequest(songRequest)\n        return resolve(songRequest)\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(songRequest => finish(null, songRequest))\n      .catch(err => finish(err))\n  })\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = [\n    'id',\n    'spotify_id',\n    'spotify_info',\n    'spotify_info_error',\n    'youtube_matches',\n    'youtube_matches_error',\n    'key',\n    'download_error',\n    'status',\n    'song_id',\n    'is_processing',\n    'completed',\n    'created_at'\n  ]\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err)\n        return reject(err)\n      }\n      songRequestCache.setSongRequest(songRequest)\n      resolve(songRequest)\n    }\n    \n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(segment => finish(null, segment))\n      .catch(err => finish(err))\n  })\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/errors.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/errors.js",
      "filenameRelative": "/home/playola/lib/errors.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "errors.js",
      "sourceFileName": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "errors"
    },
    "ignored": false,
    "code": "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ09OVEFJTlNfSU5WQUxJRF9BUkdVTUVOVCIsIlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVCIsIklOVkFMSURfQlVDS0VUX05BTUUiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLDZCQUEyQixtRUFEWjtBQUVmQywrQkFBNkIsMkNBRmQ7QUFHZkMsdUJBQXFCO0FBSE4sQ0FBakIiLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIENPTlRBSU5TX0lOVkFMSURfQVJHVU1FTlQ6ICdUaGUgcXVlcnkgY29udGFpbmVkIGFuIGludmFsaWQgdmFsdWUgKHVuYWJsZSB0byBiZSBtb3JlIHNwZWNpZmljKScsXG4gIFNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVDogJ0Egc29uZ1JlcXVlc3Qgd2l0aCB0aGF0IGlkIGRvZXMgbm90IGV4aXN0JyxcbiAgSU5WQUxJRF9CVUNLRVRfTkFNRTogJ2ludmFsaWQgYnVja2V0TmFtZSdcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "module",
        "exports",
        "CONTAINS_INVALID_ARGUMENT",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "INVALID_BUCKET_NAME"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,6BAA2B,mEADZ;AAEfC,+BAA6B,2CAFd;AAGfC,uBAAqB;AAHN,CAAjB",
      "file": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/index.js",
      "filenameRelative": "/home/playola/deps/db-utils/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const utils = require('./utils');\nmodule.exports = utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLFFBQVEsU0FBUixDQUFkO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUJILEtBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvZGVwcy9kYi11dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5tb2R1bGUuZXhwb3J0cyA9IHV0aWxzXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "utils",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,SAAR,CAAd;AACAC,OAAOC,OAAP,GAAiBH,KAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const utils = require('./utils')\nmodule.exports = utils\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/utils.js",
      "filenameRelative": "/home/playola/deps/db-utils/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified'\n};\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual;\n    this.table1JoinField = table1JoinField;\n    this.table2JoinField = table2JoinField;\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(db, fieldID, field, entityID, entity, columns, table, fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS, entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    db.oneOrNone(`insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` + `where not exists ` + `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` + `returning ${columns}`).then(row => {\n      if (!row) {\n        reject(new Error(fieldAlreadyExistsError));\n      } else {\n        resolve(row);\n      }\n    }).catch(error => {\n      if (parseInt(error.code) === 23503) {\n        reject(new Error(entityNotFoundError));\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY));\n      return;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const defaultFields = Object.keys(defaults);\n    const fields = defaultFields.join(', ');\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ');\n    data = Object.assign(defaults, data);\n    db.one(`insert into ${table} (${fields}) values (${values}) returning ${columns}`, data).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nfunction getWithID(db, id, columns = 'id', table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError);\n}\n\nfunction getMany(db, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table);\n}\n\nfunction getWithFieldID(db, fieldID, field, columns, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const data = {};\n    data[field] = fieldID;\n    db.oneOrNone(`select ${columns} from ${table} where ${field}=\\${${field}}`, data).then(row => row ? resolve(row) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([]);\n      return;\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '');\n    const columnsWithoutTable = columns.replace(new RegExp(`${table}.`, 'g'), '');\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter((elem, index, self) => index === self.indexOf(elem));\n    db.manyOrNone(`select ${columnsWithoutTable} ` + `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` + `on field_id = ${fieldWithoutTable} order by idx`, [uniqueIDs]).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyInnerJoinedByFieldID(db, fieldID, table1, table1Field, table1JoinField, table2, table2JoinField, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  const joinConditions = [new JoinCondition(table1JoinField, table2JoinField, true)];\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder, offset, limit);\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  let joins = '';\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField;\n    const table2JoinField = condition.table2JoinField;\n    const isEqual = condition.isEqual;\n    joins += `${table1JoinField} ${isEqual ? '=' : '!='} ${table2JoinField} and `;\n  }\n  joins = joins.slice(0, -5);\n  return db.manyOrNone(`select ${table2Columns} from ${table1} ` + `inner join ${table2} on (${joins}) ` + `where ${table1Field} = ${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`);\n}\n\nfunction getManyWithFieldID(db, fieldID, field, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `where ${field}=${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(db, fieldIDs, field, entityID, entityField, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([]);\n      return;\n    }\n\n    db.tx(t => {\n      let queries = [];\n\n      /**\n       * Delete all existing fields matching ID\n       */\n      queries.push(t.result(`delete from ${table} where ${entityField} = ${entityID}`));\n\n      /**\n       * Add these new fields\n       */\n      if (fieldIDs && fieldIDs.length) {\n        queries.push(t.manyOrNone(`insert into ${table} (${entityField}, ${field}) ` + `values(${entityID}, unnest($1)) on conflict do nothing ` + `returning ${columns}`, [fieldIDs]));\n      }\n\n      return t.batch(queries);\n    }).then(data => !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1])).catch(error => reject(error.first));\n  });\n}\n\nfunction removeWithFieldID(db, fieldID, field, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  const fields = {};\n  fields[field] = fieldID;\n  return removeWithFieldIDs(db, fields, table, notFoundError);\n}\n\nfunction removeWithFieldIDs(db, fields, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    let where = '';\n    Object.keys(fields).map(key => where += `${key} = \\${${key}} and `);where = where.slice(0, -5), db.result(`delete from ${table} where ${where}`, fields).then(data => data.rowCount !== 0 ? resolve(data) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction removeWithID(db, id, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError);\n}\n\nfunction updateWithID(db, id, allowedFields = [], data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const allowedData = {};\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()';\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField];\n      }\n    }\n\n    let updates = '';\n    Object.keys(allowedData).map(key => updates += `${key} = \\${${key}}, `);\n    updates = updates.slice(0, -2);\n    db.one(`update ${table} set ${updates} where id = ${id} returning ${columns}`, allowedData).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "errors",
        "DEFAULTS_EMPTY",
        "DATA_EMPTY",
        "ENTITY_DOES_NOT_EXIST",
        "FIELD_ALREADY_EXISTS",
        "TABLE_NOT_SPECIFIED",
        "JoinCondition",
        "constructor",
        "table1JoinField",
        "table2JoinField",
        "isEqual",
        "addFieldWithIDToEntityWithID",
        "db",
        "fieldID",
        "field",
        "entityID",
        "entity",
        "columns",
        "table",
        "fieldAlreadyExistsError",
        "entityNotFoundError",
        "Promise",
        "resolve",
        "reject",
        "oneOrNone",
        "then",
        "row",
        "Error",
        "catch",
        "error",
        "parseInt",
        "code",
        "create",
        "defaults",
        "data",
        "Object",
        "keys",
        "length",
        "defaultFields",
        "fields",
        "join",
        "values",
        "map",
        "f",
        "assign",
        "one",
        "getWithID",
        "id",
        "notFoundError",
        "getWithFieldID",
        "getMany",
        "orderByField",
        "sortOrder",
        "offset",
        "limit",
        "manyOrNone",
        "rows",
        "getManyWithIDs",
        "ids",
        "getManyWithFieldIDs",
        "fieldIDs",
        "fieldWithoutTable",
        "replace",
        "RegExp",
        "columnsWithoutTable",
        "uniqueIDs",
        "filter",
        "elem",
        "index",
        "self",
        "indexOf",
        "getManyInnerJoinedByFieldID",
        "table1",
        "table1Field",
        "table2",
        "table2Columns",
        "joinConditions",
        "getManyInnerJoinedByFieldIDUsingJoinConditions",
        "joins",
        "condition",
        "slice",
        "getManyWithFieldID",
        "replaceFieldsWithIDsForEntityWithID",
        "entityField",
        "tx",
        "t",
        "queries",
        "push",
        "result",
        "batch",
        "first",
        "removeWithFieldID",
        "removeWithFieldIDs",
        "where",
        "key",
        "rowCount",
        "removeWithID",
        "updateWithID",
        "allowedFields",
        "allowedData",
        "allowedField",
        "hasOwnProperty",
        "updates",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified',\n}\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual\n    this.table1JoinField = table1JoinField\n    this.table2JoinField = table2JoinField\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(\n  db,\n  fieldID,\n  field,\n  entityID,\n  entity,\n  columns,\n  table,\n  fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS,\n  entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    db\n      .oneOrNone(\n        `insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` +\n          `where not exists ` +\n          `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` +\n          `returning ${columns}`,\n      )\n      .then(row => {\n        if (!row) {\n          reject(new Error(fieldAlreadyExistsError))\n        } else {\n          resolve(row)\n        }\n      })\n      .catch(error => {\n        if (parseInt(error.code) === 23503) {\n          reject(new Error(entityNotFoundError))\n        } else {\n          reject(error)\n        }\n      })\n  })\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY))\n      return\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const defaultFields = Object.keys(defaults)\n    const fields = defaultFields.join(', ')\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ')\n    data = Object.assign(defaults, data)\n    db\n      .one(\n        `insert into ${table} (${fields}) values (${values}) returning ${columns}`,\n        data,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getWithID(\n  db,\n  id,\n  columns = 'id',\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError)\n}\n\nfunction getMany(\n  db,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table)\n}\n\nfunction getWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const data = {}\n    data[field] = fieldID\n    db\n      .oneOrNone(\n        `select ${columns} from ${table} where ${field}=\\${${field}}`,\n        data,\n      )\n      .then(row => (row ? resolve(row) : reject(new Error(notFoundError))))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([])\n      return\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '')\n    const columnsWithoutTable = columns.replace(\n      new RegExp(`${table}.`, 'g'),\n      '',\n    )\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter(\n      (elem, index, self) => index === self.indexOf(elem),\n    )\n    db\n      .manyOrNone(\n        `select ${columnsWithoutTable} ` +\n          `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` +\n          `on field_id = ${fieldWithoutTable} order by idx`,\n        [uniqueIDs],\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyInnerJoinedByFieldID(\n  db,\n  fieldID,\n  table1,\n  table1Field,\n  table1JoinField,\n  table2,\n  table2JoinField,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  const joinConditions = [\n    new JoinCondition(table1JoinField, table2JoinField, true),\n  ]\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(\n    db,\n    fieldID,\n    joinConditions,\n    table1,\n    table1Field,\n    table2,\n    table2Columns,\n    orderByField,\n    sortOrder,\n    offset,\n    limit,\n  )\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(\n  db,\n  fieldID,\n  joinConditions,\n  table1,\n  table1Field,\n  table2,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  let joins = ''\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField\n    const table2JoinField = condition.table2JoinField\n    const isEqual = condition.isEqual\n    joins += `${table1JoinField} ${isEqual\n      ? '='\n      : '!='} ${table2JoinField} and `\n  }\n  joins = joins.slice(0, -5)\n  return db.manyOrNone(\n    `select ${table2Columns} from ${table1} ` +\n      `inner join ${table2} on (${joins}) ` +\n      `where ${table1Field} = ${fieldID} ` +\n      `order by ${orderByField} ${sortOrder} ` +\n      `offset ${offset} limit ${limit}`,\n  )\n}\n\nfunction getManyWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `where ${field}=${fieldID} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(\n  db,\n  fieldIDs,\n  field,\n  entityID,\n  entityField,\n  columns,\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([])\n      return\n    }\n\n    db\n      .tx(t => {\n        let queries = []\n\n        /**\n         * Delete all existing fields matching ID\n         */\n        queries.push(\n          t.result(`delete from ${table} where ${entityField} = ${entityID}`),\n        )\n\n        /**\n         * Add these new fields\n         */\n        if (fieldIDs && fieldIDs.length) {\n          queries.push(\n            t.manyOrNone(\n              `insert into ${table} (${entityField}, ${field}) ` +\n                `values(${entityID}, unnest($1)) on conflict do nothing ` +\n                `returning ${columns}`,\n              [fieldIDs],\n            ),\n          )\n        }\n\n        return t.batch(queries)\n      })\n      .then(\n        data =>\n          !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1]),\n      )\n      .catch(error => reject(error.first))\n  })\n}\n\nfunction removeWithFieldID(\n  db,\n  fieldID,\n  field,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  const fields = {}\n  fields[field] = fieldID\n  return removeWithFieldIDs(db, fields, table, notFoundError)\n}\n\nfunction removeWithFieldIDs(\n  db,\n  fields,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    let where = ''\n    Object.keys(fields).map(key => (where += `${key} = \\${${key}} and `))\n    ;(where = where.slice(0, -5)),\n      db\n        .result(`delete from ${table} where ${where}`, fields)\n        .then(\n          data =>\n            data.rowCount !== 0\n              ? resolve(data)\n              : reject(new Error(notFoundError)),\n        )\n        .catch(error => reject(error))\n  })\n}\n\nfunction removeWithID(\n  db,\n  id,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError)\n}\n\nfunction updateWithID(\n  db,\n  id,\n  allowedFields = [],\n  data = {},\n  columns = 'id',\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const allowedData = {}\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()'\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField]\n      }\n    }\n\n    let updates = ''\n    Object.keys(allowedData).map(key => (updates += `${key} = \\${${key}}, `))\n    updates = updates.slice(0, -2)\n    db\n      .one(\n        `update ${table} set ${updates} where id = ${id} returning ${columns}`,\n        allowedData,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition,\n}\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/cache/songRequest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/songRequest.js",
      "filenameRelative": "/home/playola/lib/cache/songRequest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequest.js",
      "sourceFileName": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequest"
    },
    "ignored": false,
    "code": "const url = require('url');\nconst client = require('./redisClient');\n\nclass SongRequestCache {\n  constructor() {}\n\n  show(req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err);\n        next();\n      }\n\n      if (data) {\n        return res.status(200).send(data);\n      } else {\n        next();\n      }\n    });\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest));\n  }\n}\n\nmodule.exports = new SongRequestCache();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbInVybCIsInJlcXVpcmUiLCJjbGllbnQiLCJTb25nUmVxdWVzdENhY2hlIiwiY29uc3RydWN0b3IiLCJzaG93IiwicmVxIiwicmVzIiwibmV4dCIsImdldCIsInBhcmFtcyIsInNwb3RpZnlJRCIsImVyciIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsInNldFNvbmdSZXF1ZXN0Iiwic29uZ1JlcXVlc3QiLCJzZXRleCIsInNwb3RpZnlfaWQiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTUMsUUFBUSxLQUFSLENBQVo7QUFDQSxNQUFNQyxTQUFTRCxRQUFRLGVBQVIsQ0FBZjs7QUFFQSxNQUFNRSxnQkFBTixDQUF1QjtBQUNyQkMsZ0JBQWMsQ0FFYjs7QUFFREMsT0FBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUFzQjtBQUNwQk4sV0FBT08sR0FBUCxDQUFZLGdCQUFlSCxJQUFJSSxNQUFKLENBQVdDLFNBQVUsRUFBaEQsRUFBbUQsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDaEUsVUFBSUQsR0FBSixFQUFTO0FBQ1BFLGdCQUFRQyxHQUFSLENBQVlILEdBQVo7QUFDQUo7QUFDRDs7QUFFRCxVQUFJSyxJQUFKLEVBQVU7QUFDUixlQUFPTixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLElBQXJCLENBQVA7QUFDRCxPQUZELE1BRU87QUFDTEw7QUFDRDtBQUNGLEtBWEQ7QUFZRDs7QUFFRFUsaUJBQWVDLFdBQWYsRUFBNEI7QUFDMUJqQixXQUFPa0IsS0FBUCxDQUFjLGdCQUFlRCxZQUFZRSxVQUFXLEVBQXBELEVBQXVELEVBQXZELEVBQTJEQyxLQUFLQyxTQUFMLENBQWVKLFdBQWYsQ0FBM0Q7QUFDRDtBQXRCb0I7O0FBeUJ2QkssT0FBT0MsT0FBUCxHQUFpQixJQUFJdEIsZ0JBQUosRUFBakIiLCJmaWxlIjoic29uZ1JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvY2FjaGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKVxuY29uc3QgY2xpZW50ID0gcmVxdWlyZSgnLi9yZWRpc0NsaWVudCcpXG5cbmNsYXNzIFNvbmdSZXF1ZXN0Q2FjaGUge1xuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgc2hvdyAocmVxLCByZXMsIG5leHQpIHtcbiAgICBjbGllbnQuZ2V0KGBzb25nX3JlcXVlc3RfJHtyZXEucGFyYW1zLnNwb3RpZnlJRH1gLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChkYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KSB7XG4gICAgY2xpZW50LnNldGV4KGBzb25nX3JlcXVlc3RfJHtzb25nUmVxdWVzdC5zcG90aWZ5X2lkfWAsIDYwLCBKU09OLnN0cmluZ2lmeShzb25nUmVxdWVzdCkpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU29uZ1JlcXVlc3RDYWNoZSgpIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequest.js"
      ],
      "names": [
        "url",
        "require",
        "client",
        "SongRequestCache",
        "constructor",
        "show",
        "req",
        "res",
        "next",
        "get",
        "params",
        "spotifyID",
        "err",
        "data",
        "console",
        "log",
        "status",
        "send",
        "setSongRequest",
        "songRequest",
        "setex",
        "spotify_id",
        "JSON",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,MAAMC,SAASD,QAAQ,eAAR,CAAf;;AAEA,MAAME,gBAAN,CAAuB;AACrBC,gBAAc,CAEb;;AAEDC,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AACpBN,WAAOO,GAAP,CAAY,gBAAeH,IAAII,MAAJ,CAAWC,SAAU,EAAhD,EAAmD,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChE,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAJ;AACD;;AAED,UAAIK,IAAJ,EAAU;AACR,eAAON,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB,CAAP;AACD,OAFD,MAEO;AACLL;AACD;AACF,KAXD;AAYD;;AAEDU,iBAAeC,WAAf,EAA4B;AAC1BjB,WAAOkB,KAAP,CAAc,gBAAeD,YAAYE,UAAW,EAApD,EAAuD,EAAvD,EAA2DC,KAAKC,SAAL,CAAeJ,WAAf,CAA3D;AACD;AAtBoB;;AAyBvBK,OAAOC,OAAP,GAAiB,IAAItB,gBAAJ,EAAjB",
      "file": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const url = require('url')\nconst client = require('./redisClient')\n\nclass SongRequestCache {\n  constructor() {\n\n  }\n\n  show (req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err)\n        next()\n      }\n\n      if (data) {\n        return res.status(200).send(data)\n      } else {\n        next()\n      }\n    })\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest))\n  }\n}\n\nmodule.exports = new SongRequestCache()"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/cache/redisClient.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/redisClient.js",
      "filenameRelative": "/home/playola/lib/cache/redisClient.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "redisClient.js",
      "sourceFileName": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "redisClient"
    },
    "ignored": false,
    "code": "const redis = require('redis');\nconst client = redis.createClient(process.env.REDIS_URL);\nmodule.exports = client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZGlzQ2xpZW50LmpzIl0sIm5hbWVzIjpbInJlZGlzIiwicmVxdWlyZSIsImNsaWVudCIsImNyZWF0ZUNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19VUkwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLFNBQVNGLE1BQU1HLFlBQU4sQ0FBbUJDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBL0IsQ0FBZjtBQUNBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJyZWRpc0NsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9jYWNoZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlzID0gcmVxdWlyZSgncmVkaXMnKVxuY29uc3QgY2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KHByb2Nlc3MuZW52LlJFRElTX1VSTClcbm1vZHVsZS5leHBvcnRzID0gY2xpZW50Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "redisClient.js"
      ],
      "names": [
        "redis",
        "require",
        "client",
        "createClient",
        "process",
        "env",
        "REDIS_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,SAASF,MAAMG,YAAN,CAAmBC,QAAQC,GAAR,CAAYC,SAA/B,CAAf;AACAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const redis = require('redis')\nconst client = redis.createClient(process.env.REDIS_URL)\nmodule.exports = client"
      ]
    },
    "mtime": 1522275423000
  },
  "{\"filename\":\"/home/playola/test/lib.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/lib.test.js",
      "filenameRelative": "/home/playola/test/lib.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.test.js",
      "sourceFileName": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\nconst sinon = require('sinon');\n\nconst services = require('../lib/services');\nconst lib = require('../lib/lib');\nconst errors = require('../lib/errors');\n\ndescribe('lib', function () {\n\n  describe('getOrCreateSongRequest', function () {\n    fit('gets an existing songRequest', async function () {});\n    fit('song exists -- create a songRequest with proper song_id and status', async function () {});\n\n    fit('creates a songRequest if it does not already exist', async function () {});\n  });\n\n  describe.only('createSongRequest', function () {\n    var createdSongRequest;\n    var publishStub;\n    // stub services\n    beforeEach(function () {\n      publishStub = sinon.stub(services.songRequest, 'publish');\n    });\n\n    after(function () {\n      publishStub.restore();\n    });\n\n    afterEach(async function () {\n      if (createdSongRequest) {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      }\n    });\n\n    it('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      assert.equal(songRequest.spotify_id, spotifyID);\n      assert.equal(songRequest.status.status.GETTING_SPOTIFY_INFO);\n      assert.equal(songRequest.is_processing, true);\n    });\n\n    it('broadcasts that it was created', async function () {\n      var songRequest = await lib.createSongRequest('mySpotifyID');\n      sinon.assert.calledWith(publishStub, events.SONGREQUEST_CREATED, songRequest);\n    });\n  });\n\n  describe('completeReplaceAudioForSong', function () {\n    fit('updates the song with the new key', async function () {});\n  });\n\n  describe('completeSongAcquisition', function () {\n    fit('adds the new song to the db', function () {});\n\n    fit('updates the old songRequest with the new song_id', function () {});\n\n    fit('only updates the songRequest and key if the song already exists', function () {});\n  });\n\n  describe('');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi50ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJmYWtlciIsIm1vY2hhIiwiYWZ0ZXIiLCJiZWZvcmUiLCJiZWZvcmVFYWNoIiwiYWZ0ZXJFYWNoIiwiZGVzY3JpYmUiLCJpdCIsInNpbm9uIiwic2VydmljZXMiLCJsaWIiLCJlcnJvcnMiLCJmaXQiLCJvbmx5IiwiY3JlYXRlZFNvbmdSZXF1ZXN0IiwicHVibGlzaFN0dWIiLCJzdHViIiwic29uZ1JlcXVlc3QiLCJyZXN0b3JlIiwiZGIiLCJyZW1vdmVTb25nUmVxdWVzdFdpdGhJRCIsImlkIiwiY3JlYXRlU29uZ1JlcXVlc3QiLCJlcXVhbCIsInNwb3RpZnlfaWQiLCJzcG90aWZ5SUQiLCJzdGF0dXMiLCJHRVRUSU5HX1NQT1RJRllfSU5GTyIsImlzX3Byb2Nlc3NpbmciLCJjYWxsZWRXaXRoIiwiZXZlbnRzIiwiU09OR1JFUVVFU1RfQ1JFQVRFRCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFQSxNQUFGLEtBQWFDLFFBQVEsTUFBUixDQUFuQjtBQUNBLE1BQU1DLFFBQVFELFFBQVEsT0FBUixDQUFkO0FBQ0EsTUFBTUUsUUFBUUYsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNRyxRQUFRRCxNQUFNQyxLQUFwQjtBQUNBLE1BQU1DLFNBQVNGLE1BQU1FLE1BQXJCO0FBQ0EsTUFBTUMsYUFBYUgsTUFBTUcsVUFBekI7QUFDQSxNQUFNQyxZQUFZSixNQUFNSSxTQUF4QjtBQUNBLE1BQU1DLFdBQVdMLE1BQU1LLFFBQXZCO0FBQ0EsTUFBTUMsS0FBS04sTUFBTU0sRUFBakI7QUFDQSxNQUFNQyxRQUFRVCxRQUFRLE9BQVIsQ0FBZDs7QUFFQSxNQUFNVSxXQUFXVixRQUFRLGlCQUFSLENBQWpCO0FBQ0EsTUFBTVcsTUFBTVgsUUFBUSxZQUFSLENBQVo7QUFDQSxNQUFNWSxTQUFTWixRQUFRLGVBQVIsQ0FBZjs7QUFFQU8sU0FBVSxLQUFWLEVBQWlCLFlBQVk7O0FBRTNCQSxXQUFVLHdCQUFWLEVBQW9DLFlBQVk7QUFDOUNNLFFBQUssOEJBQUwsRUFBcUMsa0JBQWtCLENBRXRELENBRkQ7QUFHQUEsUUFBSyxvRUFBTCxFQUEyRSxrQkFBa0IsQ0FFNUYsQ0FGRDs7QUFJQUEsUUFBSyxvREFBTCxFQUEyRCxrQkFBa0IsQ0FFNUUsQ0FGRDtBQUdELEdBWEQ7O0FBYUFOLFdBQVNPLElBQVQsQ0FBZSxtQkFBZixFQUFvQyxZQUFZO0FBQzlDLFFBQUlDLGtCQUFKO0FBQ0EsUUFBSUMsV0FBSjtBQUNBO0FBQ0FYLGVBQVcsWUFBWTtBQUNyQlcsb0JBQWNQLE1BQU1RLElBQU4sQ0FBV1AsU0FBU1EsV0FBcEIsRUFBaUMsU0FBakMsQ0FBZDtBQUNELEtBRkQ7O0FBSUFmLFVBQU0sWUFBWTtBQUNoQmEsa0JBQVlHLE9BQVo7QUFDRCxLQUZEOztBQUlBYixjQUFVLGtCQUFrQjtBQUMxQixVQUFJUyxrQkFBSixFQUF3QjtBQUN0QixjQUFNSyxHQUFHQyx1QkFBSCxDQUEyQk4sbUJBQW1CTyxFQUE5QyxDQUFOO0FBQ0Q7QUFDRixLQUpEOztBQU1BZCxPQUFJLHVCQUFKLEVBQTZCLGtCQUFrQjtBQUM3Q08sMkJBQXFCLE1BQU1KLElBQUlZLGlCQUFKLENBQXNCLGFBQXRCLENBQTNCO0FBQ0F4QixhQUFPeUIsS0FBUCxDQUFhTixZQUFZTyxVQUF6QixFQUFxQ0MsU0FBckM7QUFDQTNCLGFBQU95QixLQUFQLENBQWFOLFlBQVlTLE1BQVosQ0FBb0JBLE1BQXBCLENBQTJCQyxvQkFBeEM7QUFDQTdCLGFBQU95QixLQUFQLENBQWFOLFlBQVlXLGFBQXpCLEVBQXdDLElBQXhDO0FBQ0QsS0FMRDs7QUFPQXJCLE9BQUksZ0NBQUosRUFBc0Msa0JBQWtCO0FBQ3RELFVBQUlVLGNBQWMsTUFBTVAsSUFBSVksaUJBQUosQ0FBc0IsYUFBdEIsQ0FBeEI7QUFDQWQsWUFBTVYsTUFBTixDQUFhK0IsVUFBYixDQUF3QmQsV0FBeEIsRUFBcUNlLE9BQU9DLG1CQUE1QyxFQUFpRWQsV0FBakU7QUFDRCxLQUhEO0FBSUQsR0E3QkQ7O0FBK0JBWCxXQUFVLDZCQUFWLEVBQXlDLFlBQVk7QUFDbkRNLFFBQUssbUNBQUwsRUFBMEMsa0JBQWtCLENBRTNELENBRkQ7QUFHRCxHQUpEOztBQU1BTixXQUFVLHlCQUFWLEVBQXFDLFlBQVk7QUFDL0NNLFFBQUssNkJBQUwsRUFBb0MsWUFBWSxDQUUvQyxDQUZEOztBQUlBQSxRQUFLLGtEQUFMLEVBQXlELFlBQVksQ0FFcEUsQ0FGRDs7QUFJQUEsUUFBSSxpRUFBSixFQUF1RSxZQUFZLENBRWxGLENBRkQ7QUFHRCxHQVpEOztBQWNBTixXQUFVLEVBQVY7QUFJRCxDQXRFRCIsImZpbGUiOiJsaWIudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFzc2VydCB9ID0gcmVxdWlyZSgnY2hhaScpXG5jb25zdCBmYWtlciA9IHJlcXVpcmUoJ2Zha2VyJylcbmNvbnN0IG1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKVxuY29uc3QgYWZ0ZXIgPSBtb2NoYS5hZnRlclxuY29uc3QgYmVmb3JlID0gbW9jaGEuYmVmb3JlXG5jb25zdCBiZWZvcmVFYWNoID0gbW9jaGEuYmVmb3JlRWFjaFxuY29uc3QgYWZ0ZXJFYWNoID0gbW9jaGEuYWZ0ZXJFYWNoXG5jb25zdCBkZXNjcmliZSA9IG1vY2hhLmRlc2NyaWJlXG5jb25zdCBpdCA9IG1vY2hhLml0XG5jb25zdCBzaW5vbiA9IHJlcXVpcmUoJ3Npbm9uJylcblxuY29uc3Qgc2VydmljZXMgPSByZXF1aXJlKCcuLi9saWIvc2VydmljZXMnKVxuY29uc3QgbGliID0gcmVxdWlyZSgnLi4vbGliL2xpYicpXG5jb25zdCBlcnJvcnMgPSByZXF1aXJlKCcuLi9saWIvZXJyb3JzJylcblxuZGVzY3JpYmUgKCdsaWInLCBmdW5jdGlvbiAoKSB7XG5cbiAgZGVzY3JpYmUgKCdnZXRPckNyZWF0ZVNvbmdSZXF1ZXN0JywgZnVuY3Rpb24gKCkge1xuICAgIGZpdCAoJ2dldHMgYW4gZXhpc3Rpbmcgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICAgIGZpdCAoJ3NvbmcgZXhpc3RzIC0tIGNyZWF0ZSBhIHNvbmdSZXF1ZXN0IHdpdGggcHJvcGVyIHNvbmdfaWQgYW5kIHN0YXR1cycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG5cbiAgICBmaXQgKCdjcmVhdGVzIGEgc29uZ1JlcXVlc3QgaWYgaXQgZG9lcyBub3QgYWxyZWFkeSBleGlzdCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG4gIH0pXG5cbiAgZGVzY3JpYmUub25seSAoJ2NyZWF0ZVNvbmdSZXF1ZXN0JywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBjcmVhdGVkU29uZ1JlcXVlc3RcbiAgICB2YXIgcHVibGlzaFN0dWJcbiAgICAvLyBzdHViIHNlcnZpY2VzXG4gICAgYmVmb3JlRWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICBwdWJsaXNoU3R1YiA9IHNpbm9uLnN0dWIoc2VydmljZXMuc29uZ1JlcXVlc3QsICdwdWJsaXNoJylcbiAgICB9KVxuXG4gICAgYWZ0ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgcHVibGlzaFN0dWIucmVzdG9yZSgpXG4gICAgfSlcblxuICAgIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoY3JlYXRlZFNvbmdSZXF1ZXN0KSB7XG4gICAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKGNyZWF0ZWRTb25nUmVxdWVzdC5pZClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgaXQgKCdjcmVhdGVzIGEgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBjcmVhdGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY3JlYXRlU29uZ1JlcXVlc3QoJ215U3BvdGlmeUlEJylcbiAgICAgIGFzc2VydC5lcXVhbChzb25nUmVxdWVzdC5zcG90aWZ5X2lkLCBzcG90aWZ5SUQpXG4gICAgICBhc3NlcnQuZXF1YWwoc29uZ1JlcXVlc3Quc3RhdHVzLiBzdGF0dXMuR0VUVElOR19TUE9USUZZX0lORk8pXG4gICAgICBhc3NlcnQuZXF1YWwoc29uZ1JlcXVlc3QuaXNfcHJvY2Vzc2luZywgdHJ1ZSlcbiAgICB9KVxuXG4gICAgaXQgKCdicm9hZGNhc3RzIHRoYXQgaXQgd2FzIGNyZWF0ZWQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY3JlYXRlU29uZ1JlcXVlc3QoJ215U3BvdGlmeUlEJylcbiAgICAgIHNpbm9uLmFzc2VydC5jYWxsZWRXaXRoKHB1Ymxpc2hTdHViLCBldmVudHMuU09OR1JFUVVFU1RfQ1JFQVRFRCwgc29uZ1JlcXVlc3QpXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSAoJ2NvbXBsZXRlUmVwbGFjZUF1ZGlvRm9yU29uZycsIGZ1bmN0aW9uICgpIHtcbiAgICBmaXQgKCd1cGRhdGVzIHRoZSBzb25nIHdpdGggdGhlIG5ldyBrZXknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICB9KVxuXG4gIGRlc2NyaWJlICgnY29tcGxldGVTb25nQWNxdWlzaXRpb24nLCBmdW5jdGlvbiAoKSB7XG4gICAgZml0ICgnYWRkcyB0aGUgbmV3IHNvbmcgdG8gdGhlIGRiJywgZnVuY3Rpb24gKCkge1xuXG4gICAgfSlcblxuICAgIGZpdCAoJ3VwZGF0ZXMgdGhlIG9sZCBzb25nUmVxdWVzdCB3aXRoIHRoZSBuZXcgc29uZ19pZCcsIGZ1bmN0aW9uICgpIHtcblxuICAgIH0pXG4gICAgXG4gICAgZml0KCdvbmx5IHVwZGF0ZXMgdGhlIHNvbmdSZXF1ZXN0IGFuZCBrZXkgaWYgdGhlIHNvbmcgYWxyZWFkeSBleGlzdHMnLCBmdW5jdGlvbiAoKSB7XG5cbiAgICB9KVxuICB9KVxuXG4gIGRlc2NyaWJlICgnJylcblxuXG5cbn0pXG5cblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "sinon",
        "services",
        "lib",
        "errors",
        "fit",
        "only",
        "createdSongRequest",
        "publishStub",
        "stub",
        "songRequest",
        "restore",
        "db",
        "removeSongRequestWithID",
        "id",
        "createSongRequest",
        "equal",
        "spotify_id",
        "spotifyID",
        "status",
        "GETTING_SPOTIFY_INFO",
        "is_processing",
        "calledWith",
        "events",
        "SONGREQUEST_CREATED"
      ],
      "mappings": "AAAA,MAAM,EAAEA,MAAF,KAAaC,QAAQ,MAAR,CAAnB;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,MAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,MAAMG,QAAQD,MAAMC,KAApB;AACA,MAAMC,SAASF,MAAME,MAArB;AACA,MAAMC,aAAaH,MAAMG,UAAzB;AACA,MAAMC,YAAYJ,MAAMI,SAAxB;AACA,MAAMC,WAAWL,MAAMK,QAAvB;AACA,MAAMC,KAAKN,MAAMM,EAAjB;AACA,MAAMC,QAAQT,QAAQ,OAAR,CAAd;;AAEA,MAAMU,WAAWV,QAAQ,iBAAR,CAAjB;AACA,MAAMW,MAAMX,QAAQ,YAAR,CAAZ;AACA,MAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEAO,SAAU,KAAV,EAAiB,YAAY;;AAE3BA,WAAU,wBAAV,EAAoC,YAAY;AAC9CM,QAAK,8BAAL,EAAqC,kBAAkB,CAEtD,CAFD;AAGAA,QAAK,oEAAL,EAA2E,kBAAkB,CAE5F,CAFD;;AAIAA,QAAK,oDAAL,EAA2D,kBAAkB,CAE5E,CAFD;AAGD,GAXD;;AAaAN,WAASO,IAAT,CAAe,mBAAf,EAAoC,YAAY;AAC9C,QAAIC,kBAAJ;AACA,QAAIC,WAAJ;AACA;AACAX,eAAW,YAAY;AACrBW,oBAAcP,MAAMQ,IAAN,CAAWP,SAASQ,WAApB,EAAiC,SAAjC,CAAd;AACD,KAFD;;AAIAf,UAAM,YAAY;AAChBa,kBAAYG,OAAZ;AACD,KAFD;;AAIAb,cAAU,kBAAkB;AAC1B,UAAIS,kBAAJ,EAAwB;AACtB,cAAMK,GAAGC,uBAAH,CAA2BN,mBAAmBO,EAA9C,CAAN;AACD;AACF,KAJD;;AAMAd,OAAI,uBAAJ,EAA6B,kBAAkB;AAC7CO,2BAAqB,MAAMJ,IAAIY,iBAAJ,CAAsB,aAAtB,CAA3B;AACAxB,aAAOyB,KAAP,CAAaN,YAAYO,UAAzB,EAAqCC,SAArC;AACA3B,aAAOyB,KAAP,CAAaN,YAAYS,MAAZ,CAAoBA,MAApB,CAA2BC,oBAAxC;AACA7B,aAAOyB,KAAP,CAAaN,YAAYW,aAAzB,EAAwC,IAAxC;AACD,KALD;;AAOArB,OAAI,gCAAJ,EAAsC,kBAAkB;AACtD,UAAIU,cAAc,MAAMP,IAAIY,iBAAJ,CAAsB,aAAtB,CAAxB;AACAd,YAAMV,MAAN,CAAa+B,UAAb,CAAwBd,WAAxB,EAAqCe,OAAOC,mBAA5C,EAAiEd,WAAjE;AACD,KAHD;AAID,GA7BD;;AA+BAX,WAAU,6BAAV,EAAyC,YAAY;AACnDM,QAAK,mCAAL,EAA0C,kBAAkB,CAE3D,CAFD;AAGD,GAJD;;AAMAN,WAAU,yBAAV,EAAqC,YAAY;AAC/CM,QAAK,6BAAL,EAAoC,YAAY,CAE/C,CAFD;;AAIAA,QAAK,kDAAL,EAAyD,YAAY,CAEpE,CAFD;;AAIAA,QAAI,iEAAJ,EAAuE,YAAY,CAElF,CAFD;AAGD,GAZD;;AAcAN,WAAU,EAAV;AAID,CAtED",
      "file": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\nconst sinon = require('sinon')\n\nconst services = require('../lib/services')\nconst lib = require('../lib/lib')\nconst errors = require('../lib/errors')\n\ndescribe ('lib', function () {\n\n  describe ('getOrCreateSongRequest', function () {\n    fit ('gets an existing songRequest', async function () {\n\n    })\n    fit ('song exists -- create a songRequest with proper song_id and status', async function () {\n\n    })\n\n    fit ('creates a songRequest if it does not already exist', async function () {\n\n    })\n  })\n\n  describe.only ('createSongRequest', function () {\n    var createdSongRequest\n    var publishStub\n    // stub services\n    beforeEach(function () {\n      publishStub = sinon.stub(services.songRequest, 'publish')\n    })\n\n    after(function () {\n      publishStub.restore()\n    })\n\n    afterEach(async function () {\n      if (createdSongRequest) {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      }\n    })\n\n    it ('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      assert.equal(songRequest.spotify_id, spotifyID)\n      assert.equal(songRequest.status. status.GETTING_SPOTIFY_INFO)\n      assert.equal(songRequest.is_processing, true)\n    })\n\n    it ('broadcasts that it was created', async function () {\n      var songRequest = await lib.createSongRequest('mySpotifyID')\n      sinon.assert.calledWith(publishStub, events.SONGREQUEST_CREATED, songRequest)\n    })\n  })\n\n  describe ('completeReplaceAudioForSong', function () {\n    fit ('updates the song with the new key', async function () {\n\n    })\n  })\n\n  describe ('completeSongAcquisition', function () {\n    fit ('adds the new song to the db', function () {\n\n    })\n\n    fit ('updates the old songRequest with the new song_id', function () {\n\n    })\n    \n    fit('only updates the songRequest and key if the song already exists', function () {\n\n    })\n  })\n\n  describe ('')\n\n\n\n})\n\n\n"
      ]
    },
    "mtime": 1523745263000
  },
  "{\"filename\":\"/home/playola/lib/services.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services.js",
      "filenameRelative": "/home/playola/lib/services.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "services.js",
      "sourceFileName": "services.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "services"
    },
    "ignored": false,
    "code": "const EventStream = require('../deps/event-stream/EventStream');\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup');\n\nconst instance = new EventStreamGroup([new EventStream('songRequest', process.env.CLOUDAMQP_URL), new EventStream('song', process.env.CLOUDAMQP_URL)]);\n\nObject.freeze(instance);\nmodule.exports = instance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzLmpzIl0sIm5hbWVzIjpbIkV2ZW50U3RyZWFtIiwicmVxdWlyZSIsIkV2ZW50U3RyZWFtR3JvdXAiLCJpbnN0YW5jZSIsInByb2Nlc3MiLCJlbnYiLCJDTE9VREFNUVBfVVJMIiwiT2JqZWN0IiwiZnJlZXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsY0FBY0MsUUFBUSxrQ0FBUixDQUFwQjtBQUNBLE1BQU1DLG1CQUFtQkQsUUFBUSx1Q0FBUixDQUF6Qjs7QUFFQSxNQUFNRSxXQUFXLElBQUlELGdCQUFKLENBQXFCLENBQ3BDLElBQUlGLFdBQUosQ0FBZ0IsYUFBaEIsRUFBK0JJLFFBQVFDLEdBQVIsQ0FBWUMsYUFBM0MsQ0FEb0MsRUFFcEMsSUFBSU4sV0FBSixDQUFnQixNQUFoQixFQUF3QkksUUFBUUMsR0FBUixDQUFZQyxhQUFwQyxDQUZvQyxDQUFyQixDQUFqQjs7QUFLQUMsT0FBT0MsTUFBUCxDQUFjTCxRQUFkO0FBQ0FNLE9BQU9DLE9BQVAsR0FBaUJQLFFBQWpCIiwiZmlsZSI6InNlcnZpY2VzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRTdHJlYW0gPSByZXF1aXJlKCcuLi9kZXBzL2V2ZW50LXN0cmVhbS9FdmVudFN0cmVhbScpXG5jb25zdCBFdmVudFN0cmVhbUdyb3VwID0gcmVxdWlyZSgnLi4vZGVwcy9ldmVudC1zdHJlYW0vRXZlbnRTdHJlYW1Hcm91cCcpXG5cbmNvbnN0IGluc3RhbmNlID0gbmV3IEV2ZW50U3RyZWFtR3JvdXAoW1xuICBuZXcgRXZlbnRTdHJlYW0oJ3NvbmdSZXF1ZXN0JywgcHJvY2Vzcy5lbnYuQ0xPVURBTVFQX1VSTCksXG4gIG5ldyBFdmVudFN0cmVhbSgnc29uZycsIHByb2Nlc3MuZW52LkNMT1VEQU1RUF9VUkwpLFxuXSlcblxuT2JqZWN0LmZyZWV6ZShpbnN0YW5jZSlcbm1vZHVsZS5leHBvcnRzID0gaW5zdGFuY2UiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "services.js"
      ],
      "names": [
        "EventStream",
        "require",
        "EventStreamGroup",
        "instance",
        "process",
        "env",
        "CLOUDAMQP_URL",
        "Object",
        "freeze",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,cAAcC,QAAQ,kCAAR,CAApB;AACA,MAAMC,mBAAmBD,QAAQ,uCAAR,CAAzB;;AAEA,MAAME,WAAW,IAAID,gBAAJ,CAAqB,CACpC,IAAIF,WAAJ,CAAgB,aAAhB,EAA+BI,QAAQC,GAAR,CAAYC,aAA3C,CADoC,EAEpC,IAAIN,WAAJ,CAAgB,MAAhB,EAAwBI,QAAQC,GAAR,CAAYC,aAApC,CAFoC,CAArB,CAAjB;;AAKAC,OAAOC,MAAP,CAAcL,QAAd;AACAM,OAAOC,OAAP,GAAiBP,QAAjB",
      "file": "services.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "const EventStream = require('../deps/event-stream/EventStream')\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup')\n\nconst instance = new EventStreamGroup([\n  new EventStream('songRequest', process.env.CLOUDAMQP_URL),\n  new EventStream('song', process.env.CLOUDAMQP_URL),\n])\n\nObject.freeze(instance)\nmodule.exports = instance"
      ]
    },
    "mtime": 1523631585000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStream.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStream.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStream.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStream.js",
      "sourceFileName": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStream"
    },
    "ignored": false,
    "code": "let amqp = require('amqplib/callback_api');\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n    this.channel = null;\n    this.queue = null;\n    this.handlers = {};\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = connection => {\n        this._createChannel(connection).then(() => createQueue()).catch(error => reject(error));\n      };\n\n      const createQueue = () => {\n        this._createQueue().then(() => resolve()).catch(error => reject(error));\n      };\n\n      amqp.connect(this.url, (error, connection) => {\n        if (error) {\n          reject(error);\n        } else {\n          createChannel(connection);\n        }\n      });\n    });\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel((error, channel) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.channel = channel;\n          resolve();\n        }\n      });\n    });\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue('', { exclusive: true }, (error, queue) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.queue = queue;\n          resolve();\n        }\n      });\n    });\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)));\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler;\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.bindQueue(this.queue.queue, event, '');\n    this.channel.consume(this.queue.queue, msg => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content));\n    });\n  }\n\n}\n\nmodule.exports = EventStream;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtLmpzIl0sIm5hbWVzIjpbImFtcXAiLCJyZXF1aXJlIiwiRXZlbnRTdHJlYW0iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJ1cmwiLCJjaGFubmVsIiwicXVldWUiLCJoYW5kbGVycyIsImNvbm5lY3QiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNyZWF0ZUNoYW5uZWwiLCJjb25uZWN0aW9uIiwiX2NyZWF0ZUNoYW5uZWwiLCJ0aGVuIiwiY3JlYXRlUXVldWUiLCJjYXRjaCIsImVycm9yIiwiX2NyZWF0ZVF1ZXVlIiwiYXNzZXJ0UXVldWUiLCJleGNsdXNpdmUiLCJwdWJsaXNoIiwiZXZlbnQiLCJkYXRhIiwiYXNzZXJ0RXhjaGFuZ2UiLCJkdXJhYmxlIiwiQnVmZmVyIiwiSlNPTiIsInN0cmluZ2lmeSIsInN1YnNjcmliZSIsImhhbmRsZXIiLCJiaW5kUXVldWUiLCJjb25zdW1lIiwibXNnIiwiZmllbGRzIiwiZXhjaGFuZ2UiLCJwYXJzZSIsImNvbnRlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxRQUFRLHNCQUFSLENBQVg7O0FBRUEsTUFBTUMsV0FBTixDQUFrQjs7QUFFaEJDLGNBQVlDLElBQVosRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3JCLFNBQUtELElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLElBQWI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0Q7O0FBRURDLFlBQVU7QUFDUixXQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsWUFBTUMsZ0JBQWlCQyxVQUFELElBQWdCO0FBQ3BDLGFBQUtDLGNBQUwsQ0FBb0JELFVBQXBCLEVBQ0dFLElBREgsQ0FDUSxNQUFNQyxhQURkLEVBRUdDLEtBRkgsQ0FFU0MsU0FBU1AsT0FBT08sS0FBUCxDQUZsQjtBQUdELE9BSkQ7O0FBTUEsWUFBTUYsY0FBYyxNQUFNO0FBQ3hCLGFBQUtHLFlBQUwsR0FDR0osSUFESCxDQUNRLE1BQU1MLFNBRGQsRUFFR08sS0FGSCxDQUVTQyxTQUFTUCxPQUFPTyxLQUFQLENBRmxCO0FBR0QsT0FKRDs7QUFNQW5CLFdBQUtTLE9BQUwsQ0FDRSxLQUFLSixHQURQLEVBRUUsQ0FBQ2MsS0FBRCxFQUFRTCxVQUFSLEtBQXVCO0FBQ3JCLFlBQUlLLEtBQUosRUFBVztBQUNUUCxpQkFBT08sS0FBUDtBQUNELFNBRkQsTUFFTztBQUNMTix3QkFBY0MsVUFBZDtBQUNEO0FBQ0YsT0FSSDtBQVNELEtBdEJNLENBQVA7QUF1QkQ7O0FBRURDLGlCQUFlRCxVQUFmLEVBQTJCO0FBQ3pCLFdBQU8sSUFBSUosT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q0UsaUJBQVdELGFBQVgsQ0FDRSxDQUFDTSxLQUFELEVBQVFiLE9BQVIsS0FBb0I7QUFDbEIsWUFBSWEsS0FBSixFQUFXO0FBQ1RQLGlCQUFPTyxLQUFQO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsZUFBS2IsT0FBTCxHQUFlQSxPQUFmO0FBQ0FLO0FBQ0Q7QUFDRixPQVJIO0FBU0QsS0FWTSxDQUFQO0FBV0Q7O0FBRURTLGlCQUFlO0FBQ2IsV0FBTyxJQUFJVixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFdBQUtOLE9BQUwsQ0FBYWUsV0FBYixDQUNFLEVBREYsRUFFRSxFQUFDQyxXQUFXLElBQVosRUFGRixFQUdFLENBQUNILEtBQUQsRUFBUVosS0FBUixLQUFrQjtBQUNoQixZQUFJWSxLQUFKLEVBQVc7QUFDVFAsaUJBQU9PLEtBQVA7QUFDRCxTQUZELE1BRU87QUFDTCxlQUFLWixLQUFMLEdBQWFBLEtBQWI7QUFDQUk7QUFDRDtBQUNGLE9BVkg7QUFXRCxLQVpNLENBQVA7QUFhRDs7QUFFRFksVUFBUUMsS0FBUixFQUFlQyxJQUFmLEVBQXFCO0FBQ25CLFNBQUtuQixPQUFMLENBQWFvQixjQUFiLENBQTRCRixLQUE1QixFQUFtQyxRQUFuQyxFQUE2QyxFQUFDRyxTQUFTLEtBQVYsRUFBN0M7QUFDQSxTQUFLckIsT0FBTCxDQUFhaUIsT0FBYixDQUFxQkMsS0FBckIsRUFBNEIsRUFBNUIsRUFBZ0MsSUFBSUksTUFBSixDQUFXQyxLQUFLQyxTQUFMLENBQWVMLElBQWYsQ0FBWCxDQUFoQztBQUNEOztBQUVETSxZQUFVUCxLQUFWLEVBQWlCUSxPQUFqQixFQUEwQjtBQUN4QixTQUFLeEIsUUFBTCxDQUFjZ0IsS0FBZCxJQUF1QlEsT0FBdkI7QUFDQSxTQUFLMUIsT0FBTCxDQUFhb0IsY0FBYixDQUE0QkYsS0FBNUIsRUFBbUMsUUFBbkMsRUFBNkMsRUFBQ0csU0FBUyxLQUFWLEVBQTdDO0FBQ0EsU0FBS3JCLE9BQUwsQ0FBYTJCLFNBQWIsQ0FBdUIsS0FBSzFCLEtBQUwsQ0FBV0EsS0FBbEMsRUFBeUNpQixLQUF6QyxFQUFnRCxFQUFoRDtBQUNBLFNBQUtsQixPQUFMLENBQWE0QixPQUFiLENBQXFCLEtBQUszQixLQUFMLENBQVdBLEtBQWhDLEVBQXdDNEIsR0FBRCxJQUFTO0FBQzlDLFdBQUszQixRQUFMLENBQWMyQixJQUFJQyxNQUFKLENBQVdDLFFBQXpCLEVBQW1DUixLQUFLUyxLQUFMLENBQVdILElBQUlJLE9BQWYsQ0FBbkM7QUFDRCxLQUZEO0FBR0Q7O0FBOUVlOztBQWtGbEJDLE9BQU9DLE9BQVAsR0FBaUJ2QyxXQUFqQiIsImZpbGUiOiJFdmVudFN0cmVhbS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFtcXAgPSByZXF1aXJlKCdhbXFwbGliL2NhbGxiYWNrX2FwaScpXG5cbmNsYXNzIEV2ZW50U3RyZWFtIHtcblxuICBjb25zdHJ1Y3RvcihuYW1lLCB1cmwpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy51cmwgPSB1cmxcbiAgICB0aGlzLmNoYW5uZWwgPSBudWxsXG4gICAgdGhpcy5xdWV1ZSA9IG51bGxcbiAgICB0aGlzLmhhbmRsZXJzID0ge31cbiAgfVxuXG4gIGNvbm5lY3QoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGNyZWF0ZUNoYW5uZWwgPSAoY29ubmVjdGlvbikgPT4ge1xuICAgICAgICB0aGlzLl9jcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgLnRoZW4oKCkgPT4gY3JlYXRlUXVldWUoKSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgY3JlYXRlUXVldWUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NyZWF0ZVF1ZXVlKClcbiAgICAgICAgICAudGhlbigoKSA9PiByZXNvbHZlKCkpXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gICAgICB9XG5cbiAgICAgIGFtcXAuY29ubmVjdChcbiAgICAgICAgdGhpcy51cmwsXG4gICAgICAgIChlcnJvciwgY29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBfY3JlYXRlQ2hhbm5lbChjb25uZWN0aW9uKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbm5lY3Rpb24uY3JlYXRlQ2hhbm5lbChcbiAgICAgICAgKGVycm9yLCBjaGFubmVsKSA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbCA9IGNoYW5uZWxcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgX2NyZWF0ZVF1ZXVlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLmNoYW5uZWwuYXNzZXJ0UXVldWUoXG4gICAgICAgICcnLFxuICAgICAgICB7ZXhjbHVzaXZlOiB0cnVlfSxcbiAgICAgICAgKGVycm9yLCBxdWV1ZSkgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXVlID0gcXVldWVcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgcHVibGlzaChldmVudCwgZGF0YSkge1xuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLnB1Ymxpc2goZXZlbnQsICcnLCBuZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KGRhdGEpKSlcbiAgfVxuXG4gIHN1YnNjcmliZShldmVudCwgaGFuZGxlcikge1xuICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlclxuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLmJpbmRRdWV1ZSh0aGlzLnF1ZXVlLnF1ZXVlLCBldmVudCwgJycpXG4gICAgdGhpcy5jaGFubmVsLmNvbnN1bWUodGhpcy5xdWV1ZS5xdWV1ZSwgKG1zZykgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVyc1ttc2cuZmllbGRzLmV4Y2hhbmdlXShKU09OLnBhcnNlKG1zZy5jb250ZW50KSlcbiAgICB9KVxuICB9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFN0cmVhbVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStream.js"
      ],
      "names": [
        "amqp",
        "require",
        "EventStream",
        "constructor",
        "name",
        "url",
        "channel",
        "queue",
        "handlers",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "createChannel",
        "connection",
        "_createChannel",
        "then",
        "createQueue",
        "catch",
        "error",
        "_createQueue",
        "assertQueue",
        "exclusive",
        "publish",
        "event",
        "data",
        "assertExchange",
        "durable",
        "Buffer",
        "JSON",
        "stringify",
        "subscribe",
        "handler",
        "bindQueue",
        "consume",
        "msg",
        "fields",
        "exchange",
        "parse",
        "content",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAOC,QAAQ,sBAAR,CAAX;;AAEA,MAAMC,WAAN,CAAkB;;AAEhBC,cAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AACrB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,gBAAiBC,UAAD,IAAgB;AACpC,aAAKC,cAAL,CAAoBD,UAApB,EACGE,IADH,CACQ,MAAMC,aADd,EAEGC,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMA,YAAMF,cAAc,MAAM;AACxB,aAAKG,YAAL,GACGJ,IADH,CACQ,MAAML,SADd,EAEGO,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMAnB,WAAKS,OAAL,CACE,KAAKJ,GADP,EAEE,CAACc,KAAD,EAAQL,UAAR,KAAuB;AACrB,YAAIK,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACLN,wBAAcC,UAAd;AACD;AACF,OARH;AASD,KAtBM,CAAP;AAuBD;;AAEDC,iBAAeD,UAAf,EAA2B;AACzB,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCE,iBAAWD,aAAX,CACE,CAACM,KAAD,EAAQb,OAAR,KAAoB;AAClB,YAAIa,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKb,OAAL,GAAeA,OAAf;AACAK;AACD;AACF,OARH;AASD,KAVM,CAAP;AAWD;;AAEDS,iBAAe;AACb,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKN,OAAL,CAAae,WAAb,CACE,EADF,EAEE,EAACC,WAAW,IAAZ,EAFF,EAGE,CAACH,KAAD,EAAQZ,KAAR,KAAkB;AAChB,YAAIY,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKZ,KAAL,GAAaA,KAAb;AACAI;AACD;AACF,OAVH;AAWD,KAZM,CAAP;AAaD;;AAEDY,UAAQC,KAAR,EAAeC,IAAf,EAAqB;AACnB,SAAKnB,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAaiB,OAAb,CAAqBC,KAArB,EAA4B,EAA5B,EAAgC,IAAII,MAAJ,CAAWC,KAAKC,SAAL,CAAeL,IAAf,CAAX,CAAhC;AACD;;AAEDM,YAAUP,KAAV,EAAiBQ,OAAjB,EAA0B;AACxB,SAAKxB,QAAL,CAAcgB,KAAd,IAAuBQ,OAAvB;AACA,SAAK1B,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAa2B,SAAb,CAAuB,KAAK1B,KAAL,CAAWA,KAAlC,EAAyCiB,KAAzC,EAAgD,EAAhD;AACA,SAAKlB,OAAL,CAAa4B,OAAb,CAAqB,KAAK3B,KAAL,CAAWA,KAAhC,EAAwC4B,GAAD,IAAS;AAC9C,WAAK3B,QAAL,CAAc2B,IAAIC,MAAJ,CAAWC,QAAzB,EAAmCR,KAAKS,KAAL,CAAWH,IAAII,OAAf,CAAnC;AACD,KAFD;AAGD;;AA9Ee;;AAkFlBC,OAAOC,OAAP,GAAiBvC,WAAjB",
      "file": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        "let amqp = require('amqplib/callback_api')\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name\n    this.url = url\n    this.channel = null\n    this.queue = null\n    this.handlers = {}\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = (connection) => {\n        this._createChannel(connection)\n          .then(() => createQueue())\n          .catch(error => reject(error))\n      }\n\n      const createQueue = () => {\n        this._createQueue()\n          .then(() => resolve())\n          .catch(error => reject(error))\n      }\n\n      amqp.connect(\n        this.url,\n        (error, connection) => {\n          if (error) {\n            reject(error)\n          } else {\n            createChannel(connection)\n          }\n        })\n    })\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel(\n        (error, channel) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.channel = channel\n            resolve()\n          }\n        })\n    })\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue(\n        '',\n        {exclusive: true},\n        (error, queue) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.queue = queue\n            resolve()\n          }\n        })\n    })\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)))\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.bindQueue(this.queue.queue, event, '')\n    this.channel.consume(this.queue.queue, (msg) => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content))\n    })\n  }\n\n}\n\nmodule.exports = EventStream\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStreamGroup.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStreamGroup.js",
      "sourceFileName": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStreamGroup"
    },
    "ignored": false,
    "code": "class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream;\n    }\n\n    this.streams = streams;\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'));\n        return;\n      }\n\n      let promises = [];\n      for (let stream of this.streams) {\n        promises.push(stream.connect());\n      }\n\n      Promise.all(promises).then(connections => resolve()).catch(error => reject(error));\n    });\n  }\n\n}\n\nmodule.exports = EventStreamGroup;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtR3JvdXAuanMiXSwibmFtZXMiOlsiRXZlbnRTdHJlYW1Hcm91cCIsImNvbnN0cnVjdG9yIiwic3RyZWFtcyIsInN0cmVhbSIsIm5hbWUiLCJjb25uZWN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsZW5ndGgiLCJFcnJvciIsInByb21pc2VzIiwicHVzaCIsImFsbCIsInRoZW4iLCJjb25uZWN0aW9ucyIsImNhdGNoIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQyxNQUFNQSxnQkFBTixDQUF1Qjs7QUFFdEJDLGNBQVlDLE9BQVosRUFBcUI7QUFDbkIsU0FBSyxJQUFJQyxNQUFULElBQW1CRCxPQUFuQixFQUE0QjtBQUMxQixXQUFLQyxPQUFPQyxJQUFaLElBQW9CRCxNQUFwQjtBQUNEOztBQUVELFNBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNEOztBQUVERyxZQUFVO0FBQ1IsV0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFVBQUksS0FBS04sT0FBTCxDQUFhTyxNQUFiLEtBQXdCLENBQTVCLEVBQStCO0FBQzdCRCxlQUFPLElBQUlFLEtBQUosQ0FBVSwrQ0FBVixDQUFQO0FBQ0E7QUFDRDs7QUFFRCxVQUFJQyxXQUFXLEVBQWY7QUFDQSxXQUFLLElBQUlSLE1BQVQsSUFBbUIsS0FBS0QsT0FBeEIsRUFBaUM7QUFDL0JTLGlCQUFTQyxJQUFULENBQWVULE9BQU9FLE9BQVAsRUFBZjtBQUNEOztBQUVEQyxjQUFRTyxHQUFSLENBQVlGLFFBQVosRUFDR0csSUFESCxDQUNTQyxXQUFELElBQWlCUixTQUR6QixFQUVHUyxLQUZILENBRVNDLFNBQVNULE9BQU9TLEtBQVAsQ0FGbEI7QUFHRCxLQWRNLENBQVA7QUFlRDs7QUExQnFCOztBQThCeEJDLE9BQU9DLE9BQVAsR0FBaUJuQixnQkFBakIiLCJmaWxlIjoiRXZlbnRTdHJlYW1Hcm91cC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsiIGNsYXNzIEV2ZW50U3RyZWFtR3JvdXAge1xuXG4gIGNvbnN0cnVjdG9yKHN0cmVhbXMpIHtcbiAgICBmb3IgKGxldCBzdHJlYW0gb2Ygc3RyZWFtcykge1xuICAgICAgdGhpc1tzdHJlYW0ubmFtZV0gPSBzdHJlYW1cbiAgICB9XG5cbiAgICB0aGlzLnN0cmVhbXMgPSBzdHJlYW1zXG4gIH1cblxuICBjb25uZWN0KCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpZiAodGhpcy5zdHJlYW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKCdFdmVudFN0cmVhbUdyb3VwIHNob3VsZCBub3QgY29udGFpbiAwIHN0cmVhbXMnKSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGxldCBwcm9taXNlcyA9IFtdXG4gICAgICBmb3IgKGxldCBzdHJlYW0gb2YgdGhpcy5zdHJlYW1zKSB7XG4gICAgICAgIHByb21pc2VzLnB1c2goIHN0cmVhbS5jb25uZWN0KCkgKVxuICAgICAgfVxuXG4gICAgICBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgICAgICAgLnRoZW4oKGNvbm5lY3Rpb25zKSA9PiByZXNvbHZlKCkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxuICAgIH0pXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U3RyZWFtR3JvdXAiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStreamGroup.js"
      ],
      "names": [
        "EventStreamGroup",
        "constructor",
        "streams",
        "stream",
        "name",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "length",
        "Error",
        "promises",
        "push",
        "all",
        "then",
        "connections",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAC,MAAMA,gBAAN,CAAuB;;AAEtBC,cAAYC,OAAZ,EAAqB;AACnB,SAAK,IAAIC,MAAT,IAAmBD,OAAnB,EAA4B;AAC1B,WAAKC,OAAOC,IAAZ,IAAoBD,MAApB;AACD;;AAED,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEDG,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI,KAAKN,OAAL,CAAaO,MAAb,KAAwB,CAA5B,EAA+B;AAC7BD,eAAO,IAAIE,KAAJ,CAAU,+CAAV,CAAP;AACA;AACD;;AAED,UAAIC,WAAW,EAAf;AACA,WAAK,IAAIR,MAAT,IAAmB,KAAKD,OAAxB,EAAiC;AAC/BS,iBAASC,IAAT,CAAeT,OAAOE,OAAP,EAAf;AACD;;AAEDC,cAAQO,GAAR,CAAYF,QAAZ,EACGG,IADH,CACSC,WAAD,IAAiBR,SADzB,EAEGS,KAFH,CAESC,SAAST,OAAOS,KAAP,CAFlB;AAGD,KAdM,CAAP;AAeD;;AA1BqB;;AA8BxBC,OAAOC,OAAP,GAAiBnB,gBAAjB",
      "file": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        " class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream\n    }\n\n    this.streams = streams\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'))\n        return\n      }\n\n      let promises = []\n      for (let stream of this.streams) {\n        promises.push( stream.connect() )\n      }\n\n      Promise.all(promises)\n        .then((connections) => resolve())\n        .catch(error => reject(error))\n    })\n  }\n\n}\n\nmodule.exports = EventStreamGroup"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/test/db.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/db.test.js",
      "filenameRelative": "/home/playola/test/db.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "db.test.js",
      "sourceFileName": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "db.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\n\nconst db = require('../lib/db');\nconst errors = require('../lib/errors');\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null;\n    let fakeSongRequest = null;\n    let fakeSongRequests = [];\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        };\n        fakeSongRequests.push((await db.createSongRequest({ spotify_info: spotifyInfo })));\n      }\n    });\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n        id: faker.random.uuid(),\n        title: faker.random.words(),\n        artists: [{ name: faker.random.words() }],\n        album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n        external_ids: { isrc: faker.lorem.word() },\n        duration_ms: faker.random.number()\n      };\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo });\n    });\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id);\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id);\n      } catch (error) {}\n    });\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id);\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      } catch (error) {}\n    });\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n    });\n\n    describe('Put', function () {\n      it('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND);\n      });\n\n      it('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }]);\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave);\n      });\n\n      it('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' });\n        console.log(savedSongRequest.completed);\n      });\n    });\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "db.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "db",
        "errors",
        "createdSongRequest",
        "fakeSongRequest",
        "fakeSongRequests",
        "i",
        "spotifyInfo",
        "id",
        "random",
        "uuid",
        "title",
        "words",
        "artists",
        "name",
        "album",
        "image",
        "url",
        "internet",
        "external_ids",
        "isrc",
        "lorem",
        "word",
        "duration_ms",
        "number",
        "push",
        "createSongRequest",
        "spotify_info",
        "songRequest",
        "removeSongRequestWithID",
        "error",
        "getSongRequestWithID",
        "notEqual",
        "deepEqual",
        "getSongRequestWithSpotifyID",
        "spotify_id",
        "savedSongRequest",
        "updateSongRequestWithID",
        "status",
        "MATCH_NOT_FOUND",
        "equal",
        "jsonArrayToSave",
        "JSON",
        "stringify",
        "this",
        "youtube_matches",
        "completed",
        "console",
        "log"
      ],
      "mappings": "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",
      "file": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\n\nconst db = require('../lib/db')\nconst errors = require('../lib/errors')\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null\n    let fakeSongRequest = null\n    let fakeSongRequests = []\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n        fakeSongRequests.push(await db.createSongRequest({ spotify_info: spotifyInfo })) \n      }\n    })\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo })\n    })\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id)\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id)\n      } catch (error) {}\n    })\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id)\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      } catch (error) {}\n    })\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n    })\n\n    describe('Put', function () {\n      it ('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND)\n      })\n      \n      it ('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }])\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave)\n      })\n\n      it ('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' })\n        console.log(savedSongRequest.completed)\n      })\n    })\n\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  })\n})"
      ]
    },
    "mtime": 1523745772000
  },
  "{\"filename\":\"/home/playola/lib/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/index.js",
      "filenameRelative": "/home/playola/lib/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const pgp = require('pg-promise')();\nconst db = pgp(process.env.DATABASE_URL);\nconst songRequests = require('./songRequests');\nconst errors = require('../errors');\nconst utils = require('../../deps/db-utils');\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: data => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id;\n    }\n    return songRequests.create(db, data);\n  },\n  getAllSongRequests: () => {\n    return utils.getMany(db, songRequests.columns, songRequests.table, 'id');\n  },\n  getSongRequestWithID: songRequestID => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestWithIDs: songRequestIDs => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table);\n  },\n  removeSongRequestWithID: songRequestID => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data);\n  },\n  getSongRequestWithSpotifyID: spotifyID => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestsMatchingQuery: query => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` + 'where (spotify_id) ilike ${query} ' + 'or status ilike ${query} ' +\n    // 'or song_id ilike ${query} ' +\n    // 'or is_processing ilike ${query} ' +\n    `limit 10`, { query: `%${query}%` });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBncCIsInJlcXVpcmUiLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJzb25nUmVxdWVzdHMiLCJlcnJvcnMiLCJ1dGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVTb25nUmVxdWVzdCIsImRhdGEiLCJzcG90aWZ5X2luZm8iLCJzcG90aWZ5X2lkIiwiaWQiLCJjcmVhdGUiLCJnZXRBbGxTb25nUmVxdWVzdHMiLCJnZXRNYW55IiwiY29sdW1ucyIsInRhYmxlIiwiZ2V0U29uZ1JlcXVlc3RXaXRoSUQiLCJzb25nUmVxdWVzdElEIiwiZ2V0V2l0aElEIiwiU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUIiwiZ2V0U29uZ1JlcXVlc3RXaXRoSURzIiwic29uZ1JlcXVlc3RJRHMiLCJyZW1vdmVTb25nUmVxdWVzdFdpdGhJRCIsInJlbW92ZVdpdGhJRCIsInVwZGF0ZVNvbmdSZXF1ZXN0V2l0aElEIiwidXBkYXRlV2l0aElEIiwiZ2V0U29uZ1JlcXVlc3RXaXRoU3BvdGlmeUlEIiwic3BvdGlmeUlEIiwiZ2V0V2l0aEZpZWxkSUQiLCJnZXRTb25nUmVxdWVzdHNNYXRjaGluZ1F1ZXJ5IiwicXVlcnkiLCJtYW55T3JOb25lIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNQyxRQUFRLFlBQVIsR0FBWjtBQUNBLE1BQU1DLEtBQUtGLElBQUlHLFFBQVFDLEdBQVIsQ0FBWUMsWUFBaEIsQ0FBWDtBQUNBLE1BQU1DLGVBQWVMLFFBQVEsZ0JBQVIsQ0FBckI7QUFDQSxNQUFNTSxTQUFTTixRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1PLFFBQVFQLFFBQVEscUJBQVIsQ0FBZDs7QUFFQVEsT0FBT0MsT0FBUCxHQUFpQjtBQUNmO0FBQ0E7QUFDQTtBQUNBQyxxQkFBb0JDLElBQUQsSUFBVTtBQUMzQixRQUFJQSxLQUFLQyxZQUFULEVBQXVCO0FBQ3JCRCxXQUFLRSxVQUFMLEdBQWtCRixLQUFLQyxZQUFMLENBQWtCRSxFQUFwQztBQUNEO0FBQ0QsV0FBT1QsYUFBYVUsTUFBYixDQUFvQmQsRUFBcEIsRUFBd0JVLElBQXhCLENBQVA7QUFDRCxHQVRjO0FBVWZLLHNCQUFvQixNQUFNO0FBQ3hCLFdBQU9ULE1BQU1VLE9BQU4sQ0FBY2hCLEVBQWQsRUFBa0JJLGFBQWFhLE9BQS9CLEVBQXdDYixhQUFhYyxLQUFyRCxFQUE0RCxJQUE1RCxDQUFQO0FBQ0QsR0FaYztBQWFmQyx3QkFBdUJDLGFBQUQsSUFBbUI7QUFDdkMsV0FBT2QsTUFBTWUsU0FBTixDQUFnQnJCLEVBQWhCLEVBQW9Cb0IsYUFBcEIsRUFBbUNoQixhQUFhYSxPQUFoRCxFQUF5RGIsYUFBYWMsS0FBdEUsRUFBNkViLE9BQU9pQiwyQkFBcEYsQ0FBUDtBQUNELEdBZmM7QUFnQmZDLHlCQUF3QkMsY0FBRCxJQUFvQjtBQUN6QyxXQUFPbEIsTUFBTWUsU0FBTixDQUFnQnJCLEVBQWhCLEVBQW9Cd0IsY0FBcEIsRUFBb0NwQixhQUFhYSxPQUFqRCxFQUEwRGIsYUFBYWMsS0FBdkUsQ0FBUDtBQUNELEdBbEJjO0FBbUJmTywyQkFBMEJMLGFBQUQsSUFBbUI7QUFDMUMsV0FBT2QsTUFBTW9CLFlBQU4sQ0FBbUIxQixFQUFuQixFQUF1Qm9CLGFBQXZCLEVBQXNDaEIsYUFBYWMsS0FBbkQsRUFBMERiLE9BQU9pQiwyQkFBakUsQ0FBUDtBQUNELEdBckJjO0FBc0JmSywyQkFBeUIsQ0FBQ1AsYUFBRCxFQUFnQlYsSUFBaEIsS0FBeUI7QUFDaEQsV0FBT04sYUFBYXdCLFlBQWIsQ0FBMEI1QixFQUExQixFQUE4Qm9CLGFBQTlCLEVBQTZDVixJQUE3QyxDQUFQO0FBQ0QsR0F4QmM7QUF5QmZtQiwrQkFBOEJDLFNBQUQsSUFBZTtBQUMxQyxXQUFPeEIsTUFBTXlCLGNBQU4sQ0FBcUIvQixFQUFyQixFQUF5QjhCLFNBQXpCLEVBQW9DLFlBQXBDLEVBQWtEMUIsYUFBYWEsT0FBL0QsRUFBd0ViLGFBQWFjLEtBQXJGLEVBQTRGYixPQUFPaUIsMkJBQW5HLENBQVA7QUFDRCxHQTNCYztBQTRCZlUsZ0NBQStCQyxLQUFELElBQVc7QUFDdkMsV0FBT2pDLEdBQUdrQyxVQUFILENBQWUsVUFBUzlCLGFBQWFhLE9BQVEsU0FBUWIsYUFBYWMsS0FBTSxHQUExRCxHQUNuQixvQ0FEbUIsR0FFbkIsMkJBRm1CO0FBR25CO0FBQ0E7QUFDQyxjQUxJLEVBS08sRUFBRWUsT0FBUSxJQUFHQSxLQUFNLEdBQW5CLEVBTFAsQ0FBUDtBQU1EO0FBbkNjLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL2RiIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGdwID0gcmVxdWlyZSgncGctcHJvbWlzZScpKClcbmNvbnN0IGRiID0gcGdwKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTClcbmNvbnN0IHNvbmdSZXF1ZXN0cyA9IHJlcXVpcmUoJy4vc29uZ1JlcXVlc3RzJylcbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gU29uZyBSZXF1ZXN0c1xuICAvL1xuICBjcmVhdGVTb25nUmVxdWVzdDogKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YS5zcG90aWZ5X2luZm8pIHtcbiAgICAgIGRhdGEuc3BvdGlmeV9pZCA9IGRhdGEuc3BvdGlmeV9pbmZvLmlkXG4gICAgfVxuICAgIHJldHVybiBzb25nUmVxdWVzdHMuY3JlYXRlKGRiLCBkYXRhKVxuICB9LFxuICBnZXRBbGxTb25nUmVxdWVzdHM6ICgpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0TWFueShkYiwgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgJ2lkJylcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoSUQ6IChzb25nUmVxdWVzdElEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLmdldFdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgZXJyb3JzLlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVClcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoSURzOiAoc29uZ1JlcXVlc3RJRHMpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aElEKGRiLCBzb25nUmVxdWVzdElEcywgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSlcbiAgfSxcbiAgcmVtb3ZlU29uZ1JlcXVlc3RXaXRoSUQ6IChzb25nUmVxdWVzdElEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLnJlbW92ZVdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICB1cGRhdGVTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQsIGRhdGEpID0+IHtcbiAgICByZXR1cm4gc29uZ1JlcXVlc3RzLnVwZGF0ZVdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgZGF0YSlcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoU3BvdGlmeUlEOiAoc3BvdGlmeUlEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLmdldFdpdGhGaWVsZElEKGRiLCBzcG90aWZ5SUQsICdzcG90aWZ5X2lkJywgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgZXJyb3JzLlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVClcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RzTWF0Y2hpbmdRdWVyeTogKHF1ZXJ5KSA9PiB7XG4gICAgcmV0dXJuIGRiLm1hbnlPck5vbmUoYHNlbGVjdCAke3NvbmdSZXF1ZXN0cy5jb2x1bW5zfSBmcm9tICR7c29uZ1JlcXVlc3RzLnRhYmxlfSBgICtcbiAgICAgICd3aGVyZSAoc3BvdGlmeV9pZCkgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAnb3Igc3RhdHVzIGlsaWtlICR7cXVlcnl9ICcgK1xuICAgICAgLy8gJ29yIHNvbmdfaWQgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAvLyAnb3IgaXNfcHJvY2Vzc2luZyBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgIGBsaW1pdCAxMGAsIHsgcXVlcnk6IGAlJHtxdWVyeX0lYCB9KVxuICB9XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "pgp",
        "require",
        "db",
        "process",
        "env",
        "DATABASE_URL",
        "songRequests",
        "errors",
        "utils",
        "module",
        "exports",
        "createSongRequest",
        "data",
        "spotify_info",
        "spotify_id",
        "id",
        "create",
        "getAllSongRequests",
        "getMany",
        "columns",
        "table",
        "getSongRequestWithID",
        "songRequestID",
        "getWithID",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "getSongRequestWithIDs",
        "songRequestIDs",
        "removeSongRequestWithID",
        "removeWithID",
        "updateSongRequestWithID",
        "updateWithID",
        "getSongRequestWithSpotifyID",
        "spotifyID",
        "getWithFieldID",
        "getSongRequestsMatchingQuery",
        "query",
        "manyOrNone"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,YAAR,GAAZ;AACA,MAAMC,KAAKF,IAAIG,QAAQC,GAAR,CAAYC,YAAhB,CAAX;AACA,MAAMC,eAAeL,QAAQ,gBAAR,CAArB;AACA,MAAMM,SAASN,QAAQ,WAAR,CAAf;AACA,MAAMO,QAAQP,QAAQ,qBAAR,CAAd;;AAEAQ,OAAOC,OAAP,GAAiB;AACf;AACA;AACA;AACAC,qBAAoBC,IAAD,IAAU;AAC3B,QAAIA,KAAKC,YAAT,EAAuB;AACrBD,WAAKE,UAAL,GAAkBF,KAAKC,YAAL,CAAkBE,EAApC;AACD;AACD,WAAOT,aAAaU,MAAb,CAAoBd,EAApB,EAAwBU,IAAxB,CAAP;AACD,GATc;AAUfK,sBAAoB,MAAM;AACxB,WAAOT,MAAMU,OAAN,CAAchB,EAAd,EAAkBI,aAAaa,OAA/B,EAAwCb,aAAac,KAArD,EAA4D,IAA5D,CAAP;AACD,GAZc;AAafC,wBAAuBC,aAAD,IAAmB;AACvC,WAAOd,MAAMe,SAAN,CAAgBrB,EAAhB,EAAoBoB,aAApB,EAAmChB,aAAaa,OAAhD,EAAyDb,aAAac,KAAtE,EAA6Eb,OAAOiB,2BAApF,CAAP;AACD,GAfc;AAgBfC,yBAAwBC,cAAD,IAAoB;AACzC,WAAOlB,MAAMe,SAAN,CAAgBrB,EAAhB,EAAoBwB,cAApB,EAAoCpB,aAAaa,OAAjD,EAA0Db,aAAac,KAAvE,CAAP;AACD,GAlBc;AAmBfO,2BAA0BL,aAAD,IAAmB;AAC1C,WAAOd,MAAMoB,YAAN,CAAmB1B,EAAnB,EAAuBoB,aAAvB,EAAsChB,aAAac,KAAnD,EAA0Db,OAAOiB,2BAAjE,CAAP;AACD,GArBc;AAsBfK,2BAAyB,CAACP,aAAD,EAAgBV,IAAhB,KAAyB;AAChD,WAAON,aAAawB,YAAb,CAA0B5B,EAA1B,EAA8BoB,aAA9B,EAA6CV,IAA7C,CAAP;AACD,GAxBc;AAyBfmB,+BAA8BC,SAAD,IAAe;AAC1C,WAAOxB,MAAMyB,cAAN,CAAqB/B,EAArB,EAAyB8B,SAAzB,EAAoC,YAApC,EAAkD1B,aAAaa,OAA/D,EAAwEb,aAAac,KAArF,EAA4Fb,OAAOiB,2BAAnG,CAAP;AACD,GA3Bc;AA4BfU,gCAA+BC,KAAD,IAAW;AACvC,WAAOjC,GAAGkC,UAAH,CAAe,UAAS9B,aAAaa,OAAQ,SAAQb,aAAac,KAAM,GAA1D,GACnB,oCADmB,GAEnB,2BAFmB;AAGnB;AACA;AACC,cALI,EAKO,EAAEe,OAAQ,IAAGA,KAAM,GAAnB,EALP,CAAP;AAMD;AAnCc,CAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const pgp = require('pg-promise')()\nconst db = pgp(process.env.DATABASE_URL)\nconst songRequests = require('./songRequests')\nconst errors = require('../errors')\nconst utils = require('../../deps/db-utils')\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: (data) => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id\n    }\n    return songRequests.create(db, data)\n  },\n  getAllSongRequests: () => {\n    return utils.getMany(db, songRequests.columns, songRequests.table, 'id')\n  },\n  getSongRequestWithID: (songRequestID) => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestWithIDs: (songRequestIDs) => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table)\n  },\n  removeSongRequestWithID: (songRequestID) => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data)\n  },\n  getSongRequestWithSpotifyID: (spotifyID) => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestsMatchingQuery: (query) => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` +\n      'where (spotify_id) ilike ${query} ' +\n      'or status ilike ${query} ' +\n      // 'or song_id ilike ${query} ' +\n      // 'or is_processing ilike ${query} ' +\n      `limit 10`, { query: `%${query}%` })\n  }\n}"
      ]
    },
    "mtime": 1523745738000
  },
  "{\"filename\":\"/home/playola/lib/db/songRequests.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/songRequests.js",
      "filenameRelative": "/home/playola/lib/db/songRequests.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequests.js",
      "sourceFileName": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequests"
    },
    "ignored": false,
    "code": "const errors = require('../errors');\nconst utils = require('../../deps/db-utils');\nconst songRequestCache = require('../cache/songRequest');\n\nconst SONG_REQUESTS_TABLE = 'song_requests';\nconst SONG_REQUESTS_PUBLIC_COLUMNS = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ');\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  };\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS));\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID));\n        }\n        return reject(err);\n      } else {\n        songRequestCache.setSongRequest(songRequest);\n        return resolve(songRequest);\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(songRequest => finish(null, songRequest)).catch(err => finish(err));\n  });\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'];\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      songRequestCache.setSongRequest(songRequest);\n      resolve(songRequest);\n    }\n\n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(segment => finish(null, segment)).catch(err => finish(err));\n  });\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0cy5qcyJdLCJuYW1lcyI6WyJlcnJvcnMiLCJyZXF1aXJlIiwidXRpbHMiLCJzb25nUmVxdWVzdENhY2hlIiwiU09OR19SRVFVRVNUU19UQUJMRSIsIlNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMiLCJtYXAiLCJjIiwiam9pbiIsImNyZWF0ZSIsImRiIiwiZGF0YSIsImRlZmF1bHRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmaW5pc2giLCJlcnIiLCJzb25nUmVxdWVzdCIsImNvbnN0cmFpbnQiLCJFcnJvciIsImVycnMiLCJTT05HX1JFUVVFU1RfQUxSRUFEWV9FWElTVFMiLCJwYXJzZUludCIsImNvZGUiLCJUUkFOU0NSSVBUX0lEX0lOVkFMSUQiLCJzZXRTb25nUmVxdWVzdCIsInRoZW4iLCJjYXRjaCIsInVwZGF0ZVdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJhbGxvd2VkRmllbGRzIiwiY29uc29sZSIsImxvZyIsInNlZ21lbnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29sdW1ucyIsInRhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1DLFFBQVFELFFBQVEscUJBQVIsQ0FBZDtBQUNBLE1BQU1FLG1CQUFtQkYsUUFBUSxzQkFBUixDQUF6Qjs7QUFFQSxNQUFNRyxzQkFBc0IsZUFBNUI7QUFDQSxNQUFNQywrQkFBK0IsQ0FDbkMsSUFEbUMsRUFFbkMsWUFGbUMsRUFHbkMsY0FIbUMsRUFJbkMsb0JBSm1DLEVBS25DLGlCQUxtQyxFQU1uQyx1QkFObUMsRUFPbkMsS0FQbUMsRUFRbkMsZ0JBUm1DLEVBU25DLFFBVG1DLEVBVW5DLFNBVm1DLEVBV25DLGVBWG1DLEVBWW5DLFdBWm1DLEVBYW5DLFlBYm1DLEVBY25DQyxHQWRtQyxDQWMvQkMsS0FBTSxHQUFFSCxtQkFBb0IsSUFBR0csQ0FBRSxFQWRGLEVBY0tDLElBZEwsQ0FjVSxJQWRWLENBQXJDOztB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ZXNDb250ZW50IjpbImNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuY29uc3Qgc29uZ1JlcXVlc3RDYWNoZSA9IHJlcXVpcmUoJy4uL2NhY2hlL3NvbmdSZXF1ZXN0JylcblxuY29uc3QgU09OR19SRVFVRVNUU19UQUJMRSA9ICdzb25nX3JlcXVlc3RzJ1xuY29uc3QgU09OR19SRVFVRVNUU19QVUJMSUNfQ09MVU1OUyA9IFtcbiAgJ2lkJyxcbiAgJ3Nwb3RpZnlfaWQnLFxuICAnc3BvdGlmeV9pbmZvJyxcbiAgJ3Nwb3RpZnlfaW5mb19lcnJvcicsXG4gICd5b3V0dWJlX21hdGNoZXMnLFxuICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgJ2tleScsXG4gICdkb3dubG9hZF9lcnJvcicsXG4gICdzdGF0dXMnLFxuICAnc29uZ19pZCcsXG4gICdpc19wcm9jZXNzaW5nJyxcbiAgJ2NvbXBsZXRlZCcsXG4gICdjcmVhdGVkX2F0J1xuXS5tYXAoYyA9PiBgJHtTT05HX1JFUVVFU1RTX1RBQkxFfS4ke2N9YCkuam9pbignLCAnKVxuXG5mdW5jdGlvbiBjcmVhdGUoZGIsIGRhdGEgPSB7fSkge1xuICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAnc3BvdGlmeV9pZCc6ICcnLFxuICAgICdzcG90aWZ5X2luZm8nOiB7fSxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJzoge30sXG4gICAgJ3lvdXR1YmVfbWF0Y2hlcyc6IHt9LFxuICAgICd5b3V0dWJlX21hdGNoZXNfZXJyb3InOiB7fSxcbiAgICAna2V5JzogJycsXG4gICAgJ2Rvd25sb2FkX2Vycm9yJzoge30sXG4gICAgJ3N0YXR1cyc6ICcnLFxuICAgICdzb25nX2lkJzogJycsXG4gICAgJ2lzX3Byb2Nlc3NpbmcnOiB0cnVlXG4gIH1cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBmdW5jdGlvbiBmaW5pc2goZXJyLCBzb25nUmVxdWVzdCkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvbnN0cmFpbnQgPT09ICdzcG90aWZ5X2lkX3VuaXF1ZV9pbmRleCcpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihlcnJzLlNPTkdfUkVRVUVTVF9BTFJFQURZX0VYSVNUUykpXG4gICAgICAgIH0gZWxzZSBpZiAocGFyc2VJbnQoZXJyLmNvZGUpID09PSAyMzUwMikge1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGVycnMuVFJBTlNDUklQVF9JRF9JTlZBTElEKSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvbmdSZXF1ZXN0Q2FjaGUuc2V0U29uZ1JlcXVlc3Qoc29uZ1JlcXVlc3QpXG4gICAgICAgIHJldHVybiByZXNvbHZlKHNvbmdSZXF1ZXN0KVxuICAgICAgfVxuICAgIH1cblxuICAgIHV0aWxzLmNyZWF0ZShkYiwgZGVmYXVsdHMsIGRhdGEsIFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsIFNPTkdfUkVRVUVTVFNfVEFCTEUpXG4gICAgICAudGhlbihzb25nUmVxdWVzdCA9PiBmaW5pc2gobnVsbCwgc29uZ1JlcXVlc3QpKVxuICAgICAgLmNhdGNoKGVyciA9PiBmaW5pc2goZXJyKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhID0ge30pIHtcbiAgY29uc3QgYWxsb3dlZEZpZWxkcyA9IFtcbiAgICAnaWQnLFxuICAgICdzcG90aWZ5X2lkJyxcbiAgICAnc3BvdGlmeV9pbmZvJyxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJyxcbiAgICAneW91dHViZV9tYXRjaGVzJyxcbiAgICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgICAna2V5JyxcbiAgICAnZG93bmxvYWRfZXJyb3InLFxuICAgICdzdGF0dXMnLFxuICAgICdzb25nX2lkJyxcbiAgICAnaXNfcHJvY2Vzc2luZycsXG4gICAgJ2NvbXBsZXRlZCcsXG4gICAgJ2NyZWF0ZWRfYXQnXG4gIF1cblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZ1bmN0aW9uIGZpbmlzaChlcnIsIHNvbmdSZXF1ZXN0KSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpXG4gICAgICB9XG4gICAgICBzb25nUmVxdWVzdENhY2hlLnNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KVxuICAgICAgcmVzb2x2ZShzb25nUmVxdWVzdClcbiAgICB9XG4gICAgXG4gICAgdXRpbHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBhbGxvd2VkRmllbGRzLCBkYXRhLCBTT05HX1JFUVVFU1RTX1BVQkxJQ19DT0xVTU5TLCBTT05HX1JFUVVFU1RTX1RBQkxFKVxuICAgICAgLnRoZW4oc2VnbWVudCA9PiBmaW5pc2gobnVsbCwgc2VnbWVudCkpXG4gICAgICAuY2F0Y2goZXJyID0+IGZpbmlzaChlcnIpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gQ29uc3RhbnRzXG4gIC8vXG4gIGNvbHVtbnM6IFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsXG4gIHRhYmxlOiBTT05HX1JFUVVFU1RTX1RBQkxFLFxuXG4gIC8vXG4gIC8vIE1ldGhvZHNcbiAgLy9cbiAgY3JlYXRlLFxuICB1cGRhdGVXaXRoSURcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequests.js"
      ],
      "names": [
        "errors",
        "require",
        "utils",
        "songRequestCache",
        "SONG_REQUESTS_TABLE",
        "SONG_REQUESTS_PUBLIC_COLUMNS",
        "map",
        "c",
        "join",
        "create",
        "db",
        "data",
        "defaults",
        "Promise",
        "resolve",
        "reject",
        "finish",
        "err",
        "songRequest",
        "constraint",
        "Error",
        "errs",
        "SONG_REQUEST_ALREADY_EXISTS",
        "parseInt",
        "code",
        "TRANSCRIPT_ID_INVALID",
        "setSongRequest",
        "then",
        "catch",
        "updateWithID",
        "songRequestID",
        "allowedFields",
        "console",
        "log",
        "segment",
        "module",
        "exports",
        "columns",
        "table"
      ],
      "mappings": "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",
      "file": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const errors = require('../errors')\nconst utils = require('../../deps/db-utils')\nconst songRequestCache = require('../cache/songRequest')\n\nconst SONG_REQUESTS_TABLE = 'song_requests'\nconst SONG_REQUESTS_PUBLIC_COLUMNS = [\n  'id',\n  'spotify_id',\n  'spotify_info',\n  'spotify_info_error',\n  'youtube_matches',\n  'youtube_matches_error',\n  'key',\n  'download_error',\n  'status',\n  'song_id',\n  'is_processing',\n  'completed',\n  'created_at'\n].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ')\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  }\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS))\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID))\n        }\n        return reject(err)\n      } else {\n        songRequestCache.setSongRequest(songRequest)\n        return resolve(songRequest)\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(songRequest => finish(null, songRequest))\n      .catch(err => finish(err))\n  })\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = [\n    'id',\n    'spotify_id',\n    'spotify_info',\n    'spotify_info_error',\n    'youtube_matches',\n    'youtube_matches_error',\n    'key',\n    'download_error',\n    'status',\n    'song_id',\n    'is_processing',\n    'completed',\n    'created_at'\n  ]\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err)\n        return reject(err)\n      }\n      songRequestCache.setSongRequest(songRequest)\n      resolve(songRequest)\n    }\n    \n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(segment => finish(null, segment))\n      .catch(err => finish(err))\n  })\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/errors.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/errors.js",
      "filenameRelative": "/home/playola/lib/errors.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "errors.js",
      "sourceFileName": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "errors"
    },
    "ignored": false,
    "code": "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ09OVEFJTlNfSU5WQUxJRF9BUkdVTUVOVCIsIlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVCIsIklOVkFMSURfQlVDS0VUX05BTUUiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLDZCQUEyQixtRUFEWjtBQUVmQywrQkFBNkIsMkNBRmQ7QUFHZkMsdUJBQXFCO0FBSE4sQ0FBakIiLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIENPTlRBSU5TX0lOVkFMSURfQVJHVU1FTlQ6ICdUaGUgcXVlcnkgY29udGFpbmVkIGFuIGludmFsaWQgdmFsdWUgKHVuYWJsZSB0byBiZSBtb3JlIHNwZWNpZmljKScsXG4gIFNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVDogJ0Egc29uZ1JlcXVlc3Qgd2l0aCB0aGF0IGlkIGRvZXMgbm90IGV4aXN0JyxcbiAgSU5WQUxJRF9CVUNLRVRfTkFNRTogJ2ludmFsaWQgYnVja2V0TmFtZSdcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "module",
        "exports",
        "CONTAINS_INVALID_ARGUMENT",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "INVALID_BUCKET_NAME"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,6BAA2B,mEADZ;AAEfC,+BAA6B,2CAFd;AAGfC,uBAAqB;AAHN,CAAjB",
      "file": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/index.js",
      "filenameRelative": "/home/playola/deps/db-utils/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const utils = require('./utils');\nmodule.exports = utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLFFBQVEsU0FBUixDQUFkO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUJILEtBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvZGVwcy9kYi11dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5tb2R1bGUuZXhwb3J0cyA9IHV0aWxzXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "utils",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,SAAR,CAAd;AACAC,OAAOC,OAAP,GAAiBH,KAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const utils = require('./utils')\nmodule.exports = utils\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/utils.js",
      "filenameRelative": "/home/playola/deps/db-utils/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified'\n};\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual;\n    this.table1JoinField = table1JoinField;\n    this.table2JoinField = table2JoinField;\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(db, fieldID, field, entityID, entity, columns, table, fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS, entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    db.oneOrNone(`insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` + `where not exists ` + `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` + `returning ${columns}`).then(row => {\n      if (!row) {\n        reject(new Error(fieldAlreadyExistsError));\n      } else {\n        resolve(row);\n      }\n    }).catch(error => {\n      if (parseInt(error.code) === 23503) {\n        reject(new Error(entityNotFoundError));\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY));\n      return;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const defaultFields = Object.keys(defaults);\n    const fields = defaultFields.join(', ');\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ');\n    data = Object.assign(defaults, data);\n    db.one(`insert into ${table} (${fields}) values (${values}) returning ${columns}`, data).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nfunction getWithID(db, id, columns = 'id', table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError);\n}\n\nfunction getMany(db, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table);\n}\n\nfunction getWithFieldID(db, fieldID, field, columns, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const data = {};\n    data[field] = fieldID;\n    db.oneOrNone(`select ${columns} from ${table} where ${field}=\\${${field}}`, data).then(row => row ? resolve(row) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([]);\n      return;\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '');\n    const columnsWithoutTable = columns.replace(new RegExp(`${table}.`, 'g'), '');\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter((elem, index, self) => index === self.indexOf(elem));\n    db.manyOrNone(`select ${columnsWithoutTable} ` + `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` + `on field_id = ${fieldWithoutTable} order by idx`, [uniqueIDs]).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyInnerJoinedByFieldID(db, fieldID, table1, table1Field, table1JoinField, table2, table2JoinField, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  const joinConditions = [new JoinCondition(table1JoinField, table2JoinField, true)];\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder, offset, limit);\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  let joins = '';\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField;\n    const table2JoinField = condition.table2JoinField;\n    const isEqual = condition.isEqual;\n    joins += `${table1JoinField} ${isEqual ? '=' : '!='} ${table2JoinField} and `;\n  }\n  joins = joins.slice(0, -5);\n  return db.manyOrNone(`select ${table2Columns} from ${table1} ` + `inner join ${table2} on (${joins}) ` + `where ${table1Field} = ${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`);\n}\n\nfunction getManyWithFieldID(db, fieldID, field, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `where ${field}=${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(db, fieldIDs, field, entityID, entityField, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([]);\n      return;\n    }\n\n    db.tx(t => {\n      let queries = [];\n\n      /**\n       * Delete all existing fields matching ID\n       */\n      queries.push(t.result(`delete from ${table} where ${entityField} = ${entityID}`));\n\n      /**\n       * Add these new fields\n       */\n      if (fieldIDs && fieldIDs.length) {\n        queries.push(t.manyOrNone(`insert into ${table} (${entityField}, ${field}) ` + `values(${entityID}, unnest($1)) on conflict do nothing ` + `returning ${columns}`, [fieldIDs]));\n      }\n\n      return t.batch(queries);\n    }).then(data => !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1])).catch(error => reject(error.first));\n  });\n}\n\nfunction removeWithFieldID(db, fieldID, field, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  const fields = {};\n  fields[field] = fieldID;\n  return removeWithFieldIDs(db, fields, table, notFoundError);\n}\n\nfunction removeWithFieldIDs(db, fields, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    let where = '';\n    Object.keys(fields).map(key => where += `${key} = \\${${key}} and `);where = where.slice(0, -5), db.result(`delete from ${table} where ${where}`, fields).then(data => data.rowCount !== 0 ? resolve(data) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction removeWithID(db, id, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError);\n}\n\nfunction updateWithID(db, id, allowedFields = [], data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const allowedData = {};\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()';\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField];\n      }\n    }\n\n    let updates = '';\n    Object.keys(allowedData).map(key => updates += `${key} = \\${${key}}, `);\n    updates = updates.slice(0, -2);\n    db.one(`update ${table} set ${updates} where id = ${id} returning ${columns}`, allowedData).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImVycm9ycyIsIkRFRkFVTFRTX0VNUFRZIiwiREFUQV9FTVBUWSIsIkVOVElUWV9ET0VTX05PVF9FWElTVCIsIkZJRUxEX0FMUkVBRFlfRVhJU1RTIiwiVEFCTEVfTk9UX1NQRUNJRklFRCIsIkpvaW5Db25kaXRpb24iLCJjb25zdHJ1Y3RvciIsInRhYmxlMUpvaW5GaWVsZCIsInRhYmxlMkpvaW5GaWVsZCIsImlzRXF1YWwiLCJhZGRGaWVsZFdpdGhJRFRvRW50aXR5V2l0aElEIiwiZGIiLCJmaWVsZElEIiwiZmllbGQiLCJlbnRpdHlJRCIsImVudGl0eSIsImNvbHVtbnMiLCJ0YWJsZSIsImZpZWxkQWxyZWFkeUV4aXN0c0Vycm9yIiwiZW50aXR5Tm90Rm91bmRFcnJvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25lT3JOb25lIiwidGhlbiIsInJvdyIsIkVycm9yIiwiY2F0Y2giLCJlcnJvciIsInBhcnNlSW50IiwiY29kZSIsImNyZWF0ZSIsImRlZmF1bHRzIiwiZGF0YSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJkZWZhdWx0RmllbGRzIiwiZmllbGRzIiwiam9pbiIsInZhbHVlcyIsIm1hcCIsImYiLCJhc3NpZ24iLCJvbmUiLCJnZXRXaXRoSUQiLCJpZCIsIm5vdEZvdW5kRXJyb3IiLCJnZXRXaXRoRmllbGRJRCIsImdldE1hbnkiLCJvcmRlckJ5RmllbGQiLCJzb3J0T3JkZXIiLCJvZmZzZXQiLCJsaW1pdCIsIm1hbnlPck5vbmUiLCJyb3dzIiwiZ2V0TWFueVdpdGhJRHMiLCJpZHMiLCJnZXRNYW55V2l0aEZpZWxkSURzIiwiZmllbGRJRHMiLCJmaWVsZFdpdGhvdXRUYWJsZSIsInJlcGxhY2UiLCJSZWdFeHAiLCJjb2x1bW5zV2l0aG91dFRhYmxlIiwidW5pcXVlSURzIiwiZmlsdGVyIiwiZWxlbSIsImluZGV4Iiwic2VsZiIsImluZGV4T2YiLCJnZXRNYW55SW5uZXJKb2luZWRCeUZpZWxkSUQiLCJ0YWJsZTEiLCJ0YWJsZTFGaWVsZCIsInRhYmxlMiIsInRhYmxlMkNvbHVtbnMiLCJqb2luQ29uZGl0aW9ucyIsImdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRFVzaW5nSm9pbkNvbmRpdGlvbnMiLCJqb2lucyIsImNvbmRpdGlvbiIsInNsaWNlIiwiZ2V0TWFueVdpdGhGaWVsZElEIiwicmVwbGFjZUZpZWxkc1dpdGhJRHNGb3JFbnRpdHlXaXRoSUQiLCJlbnRpdHlGaWVsZCIsInR4IiwidCIsInF1ZXJpZXMiLCJwdXNoIiwicmVzdWx0IiwiYmF0Y2giLCJmaXJzdCIsInJlbW92ZVdpdGhGaWVsZElEIiwicmVtb3ZlV2l0aEZpZWxkSURzIiwid2hlcmUiLCJrZXkiLCJyb3dDb3VudCIsInJlbW92ZVdpdGhJRCIsInVwZGF0ZVdpdGhJRCIsImFsbG93ZWRGaWVsZHMiLCJhbGxvd2VkRGF0YSIsImFsbG93ZWRGaWVsZCIsImhhc093blByb3BlcnR5IiwidXBkYXRlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVM7QUFDYkMsa0JBQWdCLDBCQURIO0FBRWJDLGNBQVksc0JBRkM7QUFHYkMseUJBQXVCLG9CQUhWO0FBSWJDLHdCQUFzQixzQkFKVDtBQUtiQyx1QkFBcUI7QUFMUixDQUFmOztBQVFBLE1BQU1DLGFBQU4sQ0FBb0I7QUFDbEJDLGNBQVlDLGVBQVosRUFBNkJDLGVBQTdCLEVBQThDQyxPQUE5QyxFQUF1RDtBQUNyRCxTQUFLQSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLRixlQUFMLEdBQXVCQSxlQUF2QjtBQUNBLFNBQUtDLGVBQUwsR0FBdUJBLGVBQXZCO0FBQ0Q7QUFMaUI7O0FBUXBCLFNBQVNFLDRCQUFULENBQ0VDLEVBREYsRUFFRUMsT0FGRixFQUdFQyxLQUhGLEVBSUVDLFFBSkYsRUFLRUMsTUFMRixFQU1FQyxPQU5GLEVBT0VDLEtBUEYsRUFRRUMsMEJBQTBCbkIsT0FBT0ksb0JBUm5DLEVBU0VnQixzQkFBc0JwQixPQUFP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QUcsY0FBYTlCLE9BQVEsRUFGekUsRUFHSWtGLFdBSEosRUFLRzFFLElBTEgsQ0FLUUMsT0FBT0osUUFBUUksR0FBUixDQUxmLEVBTUdFLEtBTkgsQ0FNU0MsU0FBU04sT0FBT00sS0FBUCxDQU5sQjtBQU9ELEdBOUJNLENBQVA7QUErQkQ7O0FBRUQwRSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0F4RyxRQUplOztBQU1mO0FBQ0E7QUFDQTtBQUNBVyw4QkFUZTtBQVVmcUIsUUFWZTtBQVdmYyxXQVhlO0FBWWZJLFNBWmU7QUFhZk8sZ0JBYmU7QUFjZlIsZ0JBZGU7QUFlZlUscUJBZmU7QUFnQmZZLDZCQWhCZTtBQWlCZk0sZ0RBakJlO0FBa0JmSSxvQkFsQmU7QUFtQmZDLHFDQW5CZTtBQW9CZlMsbUJBcEJlO0FBcUJmQyxvQkFyQmU7QUFzQmZJLGNBdEJlO0FBdUJmQyxjQXZCZTs7QUF5QmY7QUFDQTtBQUNBO0FBQ0EzRjtBQTVCZSxDQUFqQiIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZGItdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlcnJvcnMgPSB7XG4gIERFRkFVTFRTX0VNUFRZOiAnRGVmYXVsdHMgY2Fubm90IGJlIGVtcHR5JyxcbiAgREFUQV9FTVBUWTogJ0RhdGEgY2Fubm90IGJlIGVtcHR5JyxcbiAgRU5USVRZX0RPRVNfTk9UX0VYSVNUOiAnUm93IGRvZXMgbm90IGV4aXN0JyxcbiAgRklFTERfQUxSRUFEWV9FWElTVFM6ICdGaWVsZCBhbHJlYWR5IGV4aXN0cycsXG4gIFRBQkxFX05PVF9TUEVDSUZJRUQ6ICdUYWJsZSBub3Qgc3BlY2lmaWVkJyxcbn1cblxuY2xhc3MgSm9pbkNvbmRpdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHRhYmxlMUpvaW5GaWVsZCwgdGFibGUySm9pbkZpZWxkLCBpc0VxdWFsKSB7XG4gICAgdGhpcy5pc0VxdWFsID0gaXNFcXVhbFxuICAgIHRoaXMudGFibGUxSm9pbkZpZWxkID0gdGFibGUxSm9pbkZpZWxkXG4gICAgdGhpcy50YWJsZTJKb2luRmllbGQgPSB0YWJsZTJKb2luRmllbGRcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRGaWVsZFdpdGhJRFRvRW50aXR5V2l0aElEKFxuICBkYixcbiAgZmllbGRJRCxcbiAgZmllbGQsXG4gIGVudGl0eUlELFxuICBlbnRpdHksXG4gIGNvbHVtbnMsXG4gIHRhYmxlLFxuICBmaWVsZEFscmVhZHlFeGlzdHNFcnJvciA9IGVycm9ycy5GSUVMRF9BTFJFQURZX0VYSVNUUyxcbiAgZW50aXR5Tm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBkYlxuICAgICAgLm9uZU9yTm9uZShcbiAgICAgICAgYGluc2VydCBpbnRvICR7dGFibGV9ICgke2VudGl0eX0sICR7ZmllbGR9KSBzZWxlY3QgJHtlbnRpdHlJRH0sICR7ZmllbGRJRH0gYCArXG4gICAgICAgICAgYHdoZXJlIG5vdCBleGlzdHMgYCArXG4gICAgICAgICAgYChzZWxlY3QgaWQgZnJvbSAke3RhYmxlfSB3aGVyZSAke2VudGl0eX0gPSAke2VudGl0eUlEfSBhbmQgJHtmaWVsZH0gPSAke2ZpZWxkSUR9KSBgICtcbiAgICAgICAgICBgcmV0dXJuaW5nICR7Y29sdW1uc31gLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93ID0+IHtcbiAgICAgICAgaWYgKCFyb3cpIHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKGZpZWxkQWxyZWFkeUV4aXN0c0Vycm9yKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJvdylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGlmIChwYXJzZUludChlcnJvci5jb2RlKSA9PT0gMjM1MDMpIHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVudGl0eU5vdEZvdW5kRXJyb3IpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlKGRiLCBkZWZhdWx0cyA9IHt9LCBkYXRhID0ge30sIGNvbHVtbnMgPSAnaWQnLCB0YWJsZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghZGVmYXVsdHMgfHwgT2JqZWN0LmtleXMoZGVmYXVsdHMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuREVGQVVMVFNfRU1QVFkpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKCFkYXRhIHx8IE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuREFUQV9FTVBUWSkpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoIXRhYmxlIHx8IHRhYmxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuVEFCTEVfTk9UX1NQRUNJRklFRCkpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBkZWZhdWx0RmllbGRzID0gT2JqZWN0LmtleXMoZGVmYXVsdHMpXG4gICAgY29uc3QgZmllbGRzID0gZGVmYXVsdEZpZWxkcy5qb2luKCcsICcpXG4gICAgY29uc3QgdmFsdWVzID0gZGVmYXVsdEZpZWxkcy5tYXAoZiA9PiBgXFwkeyR7Zn19YCkuam9pbignLCAnKVxuICAgIGRhdGEgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRzLCBkYXRhKVxuICAgIGRiXG4gICAgICAub25lKFxuICAgICAgICBgaW5zZXJ0IGludG8gJHt0YWJsZX0gKCR7ZmllbGRzfSkgdmFsdWVzICgke3ZhbHVlc30pIHJldHVybmluZyAke2NvbHVtbnN9YCxcbiAgICAgICAgZGF0YSxcbiAgICAgIClcbiAgICAgIC50aGVuKHJvdyA9PiByZXNvbHZlKHJvdykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2V0V2l0aElEKFxuICBkYixcbiAgaWQsXG4gIGNvbHVtbnMgPSAnaWQnLFxuICB0YWJsZSxcbiAgbm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIGdldFdpdGhGaWVsZElEKGRiLCBpZCwgJ2lkJywgY29sdW1ucywgdGFibGUsIG5vdEZvdW5kRXJyb3IpXG59XG5cbmZ1bmN0aW9uIGdldE1hbnkoXG4gIGRiLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgb3JkZXJCeUZpZWxkLFxuICBzb3J0T3JkZXIgPSAnYXNjJyxcbiAgb2Zmc2V0ID0gMCxcbiAgbGltaXQgPSAyNSxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSBgICtcbiAgICAgICAgICBgb3JkZXIgYnkgJHtvcmRlckJ5RmllbGR9ICR7c29ydE9yZGVyfSBgICtcbiAgICAgICAgICBgb2Zmc2V0ICR7b2Zmc2V0fSBsaW1pdCAke2xpbWl0fWAsXG4gICAgICApXG4gICAgICAudGhlbihyb3dzID0+IHJlc29sdmUocm93cykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2V0TWFueVdpdGhJRHMoZGIsIGlkcywgY29sdW1ucyA9ICdpZCcsIHRhYmxlKSB7XG4gIHJldHVybiBnZXRNYW55V2l0aEZpZWxkSURzKGRiLCBpZHMsICdpZCcsIGNvbHVtbnMsIHRhYmxlKVxufVxuXG5mdW5jdGlvbiBnZXRXaXRoRmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIGZpZWxkLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgbm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIXRhYmxlKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5UQUJMRV9OT1RfU1BFQ0lGSUVEKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSB7fVxuICAgIGRhdGFbZmllbGRdID0gZmllbGRJRFxuICAgIGRiXG4gICAgICAub25lT3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSB3aGVyZSAke2ZpZWxkfT1cXCR7JHtmaWVsZH19YCxcbiAgICAgICAgZGF0YSxcbiAgICAgIClcbiAgICAgIC50aGVuKHJvdyA9PiAocm93ID8gcmVzb2x2ZShyb3cpIDogcmVqZWN0KG5ldyBFcnJvcihub3RGb3VuZEVycm9yKSkpKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlXaXRoRmllbGRJRHMoZGIsIGZpZWxkSURzLCBmaWVsZCwgY29sdW1ucywgdGFibGUpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoZmllbGRJRHMgPT09IG51bGwgfHwgZmllbGRJRHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXNvbHZlKFtdKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHF1ZXJ5IHdlJ3JlIHVzaW5nIGZvciB0aGUgYmF0Y2ggbWV0aG9kIGRvZXMgbm90IGFsbG93IHNwZWNpZnlpbmdcbiAgICAgKiB0aGUgY29sdW1uIG5hbWVzcGFjZSBzbyB3ZSBuZWVkIHRvIHJlbW92ZSB0aG9zZVxuICAgICAqL1xuICAgIGNvbnN0IGZpZWxkV2l0aG91dFRhYmxlID0gZmllbGQucmVwbGFjZShuZXcgUmVnRXhwKGAke3RhYmxlfS5gKSwgJycpXG4gICAgY29uc3QgY29sdW1uc1dpdGhvdXRUYWJsZSA9IGNvbHVtbnMucmVwbGFjZShcbiAgICAgIG5ldyBSZWdFeHAoYCR7dGFibGV9LmAsICdnJyksXG4gICAgICAnJyxcbiAgICApXG5cbiAgICAvKipcbiAgICAgKiBSaWdodCBub3cgd2UncmUgaGFuZGxpbmcgcmVtb3ZpbmcgZHVwbGljYXRlcyBvbiB0aGUgSlMgc2lkZS4gSSBzZWFyY2hlZCBhcm91bmRcbiAgICAgKiBmb3IgYSB3YXkgdG8gZG8gdGhpcyBncmFjZWZ1bGx5IHdpdGggUG9zdGdyZXMsIGJ1dCBpdCBzZWVtcyByZWFsbHkgaW5jb25zaXN0ZW50XG4gICAgICogYW5kIGNvbXBsaWNhdGVkLiBJZiB0aGVyZSdzIGEgYmV0dGVyIHdheSB0byBkbyB0aGlzIGluIFBvc3RncmVzIHBsZWFzZVxuICAgICAqIGxldCBtZSBrbm93IVxuICAgICAqL1xuICAgIGNvbnN0IHVuaXF1ZUlEcyA9IGZpZWxkSURzLmZpbHRlcihcbiAgICAgIChlbGVtLCBpbmRleCwgc2VsZikgPT4gaW5kZXggPT09IHNlbGYuaW5kZXhPZihlbGVtKSxcbiAgICApXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc1dpdGhvdXRUYWJsZX0gYCArXG4gICAgICAgICAgYGZyb20gJHt0YWJsZX0gaW5uZXIgam9pbiB1bm5lc3QoJDEpIHdpdGggb3JkaW5hbGl0eSBhcyBmKGZpZWxkX2lkLCBpZHgpIGAgK1xuICAgICAgICAgIGBvbiBmaWVsZF9pZCA9ICR7ZmllbGRXaXRob3V0VGFibGV9IG9yZGVyIGJ5IGlkeGAsXG4gICAgICAgIFt1bmlxdWVJRHNdLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93cyA9PiByZXNvbHZlKHJvd3MpKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIHRhYmxlMSxcbiAgdGFibGUxRmllbGQsXG4gIHRhYmxlMUpvaW5GaWVsZCxcbiAgdGFibGUyLFxuICB0YWJsZTJKb2luRmllbGQsXG4gIHRhYmxlMkNvbHVtbnMsXG4gIG9yZGVyQnlGaWVsZCxcbiAgc29ydE9yZGVyID0gJ2FzYycsXG4gIG9mZnNldCA9IDAsXG4gIGxpbWl0ID0gMjUsXG4pIHtcbiAgY29uc3Qgam9pbkNvbmRpdGlvbnMgPSBbXG4gICAgbmV3IEpvaW5Db25kaXRpb24odGFibGUxSm9pbkZpZWxkLCB0YWJsZTJKb2luRmllbGQsIHRydWUpLFxuICBdXG4gIHJldHVybiBnZXRNYW55SW5uZXJKb2luZWRCeUZpZWxkSURVc2luZ0pvaW5Db25kaXRpb25zKFxuICAgIGRiLFxuICAgIGZpZWxkSUQsXG4gICAgam9pbkNvbmRpdGlvbnMsXG4gICAgdGFibGUxLFxuICAgIHRhYmxlMUZpZWxkLFxuICAgIHRhYmxlMixcbiAgICB0YWJsZTJDb2x1bW5zLFxuICAgIG9yZGVyQnlGaWVsZCxcbiAgICBzb3J0T3JkZXIsXG4gICAgb2Zmc2V0LFxuICAgIGxpbWl0LFxuICApXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRFVzaW5nSm9pbkNvbmRpdGlvbnMoXG4gIGRiLFxuICBmaWVsZElELFxuICBqb2luQ29uZGl0aW9ucyxcbiAgdGFibGUxLFxuICB0YWJsZTFGaWVsZCxcbiAgdGFibGUyLFxuICB0YWJsZTJDb2x1bW5zLFxuICBvcmRlckJ5RmllbGQsXG4gIHNvcnRPcmRlciA9ICdhc2MnLFxuICBvZmZzZXQgPSAwLFxuICBsaW1pdCA9IDI1LFxuKSB7XG4gIGxldCBqb2lucyA9ICcnXG4gIGZvciAobGV0IGNvbmRpdGlvbiBvZiBqb2luQ29uZGl0aW9ucykge1xuICAgIGNvbnN0IHRhYmxlMUpvaW5GaWVsZCA9IGNvbmRpdGlvbi50YWJsZTFKb2luRmllbGRcbiAgICBjb25zdCB0YWJsZTJKb2luRmllbGQgPSBjb25kaXRpb24udGFibGUySm9pbkZpZWxkXG4gICAgY29uc3QgaXNFcXVhbCA9IGNvbmRpdGlvbi5pc0VxdWFsXG4gICAgam9pbnMgKz0gYCR7dGFibGUxSm9pbkZpZWxkfSAke2lzRXF1YWxcbiAgICAgID8gJz0nXG4gICAgICA6ICchPSd9ICR7dGFibGUySm9pbkZpZWxkfSBhbmQgYFxuICB9XG4gIGpvaW5zID0gam9pbnMuc2xpY2UoMCwgLTUpXG4gIHJldHVybiBkYi5tYW55T3JOb25lKFxuICAgIGBzZWxlY3QgJHt0YWJsZTJDb2x1bW5zfSBmcm9tICR7dGFibGUxfSBgICtcbiAgICAgIGBpbm5lciBqb2luICR7dGFibGUyfSBvbiAoJHtqb2luc30pIGAgK1xuICAgICAgYHdoZXJlICR7dGFibGUxRmllbGR9ID0gJHtmaWVsZElEfSBgICtcbiAgICAgIGBvcmRlciBieSAke29yZGVyQnlGaWVsZH0gJHtzb3J0T3JkZXJ9IGAgK1xuICAgICAgYG9mZnNldCAke29mZnNldH0gbGltaXQgJHtsaW1pdH1gLFxuICApXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlXaXRoRmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIGZpZWxkLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgb3JkZXJCeUZpZWxkLFxuICBzb3J0T3JkZXIgPSAnYXNjJyxcbiAgb2Zmc2V0ID0gMCxcbiAgbGltaXQgPSAyNSxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSBgICtcbiAgICAgICAgICBgd2hlcmUgJHtmaWVsZH09JHtmaWVsZElEfSBgICtcbiAgICAgICAgICBgb3JkZXIgYnkgJHtvcmRlckJ5RmllbGR9ICR7c29ydE9yZGVyfSBgICtcbiAgICAgICAgICBgb2Zmc2V0ICR7b2Zmc2V0fSBsaW1pdCAke2xpbWl0fWAsXG4gICAgICApXG4gICAgICAudGhlbihyb3dzID0+IHJlc29sdmUocm93cykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUZpZWxkc1dpdGhJRHNGb3JFbnRpdHlXaXRoSUQoXG4gIGRiLFxuICBmaWVsZElEcyxcbiAgZmllbGQsXG4gIGVudGl0eUlELFxuICBlbnRpdHlGaWVsZCxcbiAgY29sdW1ucyxcbiAgdGFibGUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIWVudGl0eUlEKSB7XG4gICAgICByZXNvbHZlKFtdKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC50eCh0ID0+IHtcbiAgICAgICAgbGV0IHF1ZXJpZXMgPSBbXVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWxldGUgYWxsIGV4aXN0aW5nIGZpZWxkcyBtYXRjaGluZyBJRFxuICAgICAgICAgKi9cbiAgICAgICAgcXVlcmllcy5wdXNoKFxuICAgICAgICAgIHQucmVzdWx0KGBkZWxldGUgZnJvbSAke3RhYmxlfSB3aGVyZSAke2VudGl0eUZpZWxkfSA9ICR7ZW50aXR5SUR9YCksXG4gICAgICAgIClcblxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIHRoZXNlIG5ldyBmaWVsZHNcbiAgICAgICAgICovXG4gICAgICAgIGlmIChmaWVsZElEcyAmJiBmaWVsZElEcy5sZW5ndGgpIHtcbiAgICAgICAgICBxdWVyaWVzLnB1c2goXG4gICAgICAgICAgICB0Lm1hbnlPck5vbmUoXG4gICAgICAgICAgICAgIGBpbnNlcnQgaW50byAke3RhYmxlfSAoJHtlbnRpdHlGaWVsZH0sICR7ZmllbGR9KSBgICtcbiAgICAgICAgICAgICAgICBgdmFsdWVzKCR7ZW50aXR5SUR9LCB1bm5lc3QoJDEpKSBvbiBjb25mbGljdCBkbyBub3RoaW5nIGAgK1xuICAgICAgICAgICAgICAgIGByZXR1cm5pbmcgJHtjb2x1bW5zfWAsXG4gICAgICAgICAgICAgIFtmaWVsZElEc10sXG4gICAgICAgICAgICApLFxuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0LmJhdGNoKHF1ZXJpZXMpXG4gICAgICB9KVxuICAgICAgLnRoZW4oXG4gICAgICAgIGRhdGEgPT5cbiAgICAgICAgICAhZmllbGRJRHMgfHwgZmllbGRJRHMubGVuZ3RoID09PSAwID8gcmVzb2x2ZShbXSkgOiByZXNvbHZlKGRhdGFbMV0pLFxuICAgICAgKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvci5maXJzdCkpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVdpdGhGaWVsZElEKFxuICBkYixcbiAgZmllbGRJRCxcbiAgZmllbGQsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICBjb25zdCBmaWVsZHMgPSB7fVxuICBmaWVsZHNbZmllbGRdID0gZmllbGRJRFxuICByZXR1cm4gcmVtb3ZlV2l0aEZpZWxkSURzKGRiLCBmaWVsZHMsIHRhYmxlLCBub3RGb3VuZEVycm9yKVxufVxuXG5mdW5jdGlvbiByZW1vdmVXaXRoRmllbGRJRHMoXG4gIGRiLFxuICBmaWVsZHMsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgbGV0IHdoZXJlID0gJydcbiAgICBPYmplY3Qua2V5cyhmaWVsZHMpLm1hcChrZXkgPT4gKHdoZXJlICs9IGAke2tleX0gPSBcXCR7JHtrZXl9fSBhbmQgYCkpXG4gICAgOyh3aGVyZSA9IHdoZXJlLnNsaWNlKDAsIC01KSksXG4gICAgICBkYlxuICAgICAgICAucmVzdWx0KGBkZWxldGUgZnJvbSAke3RhYmxlfSB3aGVyZSAke3doZXJlfWAsIGZpZWxkcylcbiAgICAgICAgLnRoZW4oXG4gICAgICAgICAgZGF0YSA9PlxuICAgICAgICAgICAgZGF0YS5yb3dDb3VudCAhPT0gMFxuICAgICAgICAgICAgICA/IHJlc29sdmUoZGF0YSlcbiAgICAgICAgICAgICAgOiByZWplY3QobmV3IEVycm9yKG5vdEZvdW5kRXJyb3IpKSxcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVtb3ZlV2l0aElEKFxuICBkYixcbiAgaWQsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICByZXR1cm4gcmVtb3ZlV2l0aEZpZWxkSUQoZGIsIGlkLCAnaWQnLCB0YWJsZSwgbm90Rm91bmRFcnJvcilcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKFxuICBkYixcbiAgaWQsXG4gIGFsbG93ZWRGaWVsZHMgPSBbXSxcbiAgZGF0YSA9IHt9LFxuICBjb2x1bW5zID0gJ2lkJyxcbiAgdGFibGUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIWRhdGEgfHwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5EQVRBX0VNUFRZKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICghdGFibGUgfHwgdGFibGUubGVuZ3RoID09PSAwKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5UQUJMRV9OT1RfU1BFQ0lGSUVEKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGFsbG93ZWREYXRhID0ge31cbiAgICBmb3IgKGxldCBhbGxvd2VkRmllbGQgb2YgYWxsb3dlZEZpZWxkcykge1xuICAgICAgaWYgKGFsbG93ZWRGaWVsZCA9PT0gJ3VwZGF0ZWRfYXQnKSB7XG4gICAgICAgIGFsbG93ZWREYXRhW2FsbG93ZWRGaWVsZF0gPSAnbm93KCknXG4gICAgICB9IGVsc2UgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoYWxsb3dlZEZpZWxkKSkge1xuICAgICAgICBhbGxvd2VkRGF0YVthbGxvd2VkRmllbGRdID0gZGF0YVthbGxvd2VkRmllbGRdXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHVwZGF0ZXMgPSAnJ1xuICAgIE9iamVjdC5rZXlzKGFsbG93ZWREYXRhKS5tYXAoa2V5ID0+ICh1cGRhdGVzICs9IGAke2tleX0gPSBcXCR7JHtrZXl9fSwgYCkpXG4gICAgdXBkYXRlcyA9IHVwZGF0ZXMuc2xpY2UoMCwgLTIpXG4gICAgZGJcbiAgICAgIC5vbmUoXG4gICAgICAgIGB1cGRhdGUgJHt0YWJsZX0gc2V0ICR7dXBkYXRlc30gd2hlcmUgaWQgPSAke2lkfSByZXR1cm5pbmcgJHtjb2x1bW5zfWAsXG4gICAgICAgIGFsbG93ZWREYXRhLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93ID0+IHJlc29sdmUocm93KSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gRXJyb3JzXG4gIC8vXG4gIGVycm9ycyxcblxuICAvL1xuICAvLyBNZXRob2RzXG4gIC8vXG4gIGFkZEZpZWxkV2l0aElEVG9FbnRpdHlXaXRoSUQsXG4gIGNyZWF0ZSxcbiAgZ2V0V2l0aElELFxuICBnZXRNYW55LFxuICBnZXRNYW55V2l0aElEcyxcbiAgZ2V0V2l0aEZpZWxkSUQsXG4gIGdldE1hbnlXaXRoRmllbGRJRHMsXG4gIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRCxcbiAgZ2V0TWFueUlubmVySm9pbmVkQnlGaWVsZElEVXNpbmdKb2luQ29uZGl0aW9ucyxcbiAgZ2V0TWFueVdpdGhGaWVsZElELFxuICByZXBsYWNlRmllbGRzV2l0aElEc0ZvckVudGl0eVdpdGhJRCxcbiAgcmVtb3ZlV2l0aEZpZWxkSUQsXG4gIHJlbW92ZVdpdGhGaWVsZElEcyxcbiAgcmVtb3ZlV2l0aElELFxuICB1cGRhdGVXaXRoSUQsXG5cbiAgLy9cbiAgLy8gQ2xhc3Nlc1xuICAvL1xuICBKb2luQ29uZGl0aW9uLFxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "errors",
        "DEFAULTS_EMPTY",
        "DATA_EMPTY",
        "ENTITY_DOES_NOT_EXIST",
        "FIELD_ALREADY_EXISTS",
        "TABLE_NOT_SPECIFIED",
        "JoinCondition",
        "constructor",
        "table1JoinField",
        "table2JoinField",
        "isEqual",
        "addFieldWithIDToEntityWithID",
        "db",
        "fieldID",
        "field",
        "entityID",
        "entity",
        "columns",
        "table",
        "fieldAlreadyExistsError",
        "entityNotFoundError",
        "Promise",
        "resolve",
        "reject",
        "oneOrNone",
        "then",
        "row",
        "Error",
        "catch",
        "error",
        "parseInt",
        "code",
        "create",
        "defaults",
        "data",
        "Object",
        "keys",
        "length",
        "defaultFields",
        "fields",
        "join",
        "values",
        "map",
        "f",
        "assign",
        "one",
        "getWithID",
        "id",
        "notFoundError",
        "getWithFieldID",
        "getMany",
        "orderByField",
        "sortOrder",
        "offset",
        "limit",
        "manyOrNone",
        "rows",
        "getManyWithIDs",
        "ids",
        "getManyWithFieldIDs",
        "fieldIDs",
        "fieldWithoutTable",
        "replace",
        "RegExp",
        "columnsWithoutTable",
        "uniqueIDs",
        "filter",
        "elem",
        "index",
        "self",
        "indexOf",
        "getManyInnerJoinedByFieldID",
        "table1",
        "table1Field",
        "table2",
        "table2Columns",
        "joinConditions",
        "getManyInnerJoinedByFieldIDUsingJoinConditions",
        "joins",
        "condition",
        "slice",
        "getManyWithFieldID",
        "replaceFieldsWithIDsForEntityWithID",
        "entityField",
        "tx",
        "t",
        "queries",
        "push",
        "result",
        "batch",
        "first",
        "removeWithFieldID",
        "removeWithFieldIDs",
        "where",
        "key",
        "rowCount",
        "removeWithID",
        "updateWithID",
        "allowedFields",
        "allowedData",
        "allowedField",
        "hasOwnProperty",
        "updates",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified',\n}\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual\n    this.table1JoinField = table1JoinField\n    this.table2JoinField = table2JoinField\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(\n  db,\n  fieldID,\n  field,\n  entityID,\n  entity,\n  columns,\n  table,\n  fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS,\n  entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    db\n      .oneOrNone(\n        `insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` +\n          `where not exists ` +\n          `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` +\n          `returning ${columns}`,\n      )\n      .then(row => {\n        if (!row) {\n          reject(new Error(fieldAlreadyExistsError))\n        } else {\n          resolve(row)\n        }\n      })\n      .catch(error => {\n        if (parseInt(error.code) === 23503) {\n          reject(new Error(entityNotFoundError))\n        } else {\n          reject(error)\n        }\n      })\n  })\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY))\n      return\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const defaultFields = Object.keys(defaults)\n    const fields = defaultFields.join(', ')\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ')\n    data = Object.assign(defaults, data)\n    db\n      .one(\n        `insert into ${table} (${fields}) values (${values}) returning ${columns}`,\n        data,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getWithID(\n  db,\n  id,\n  columns = 'id',\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError)\n}\n\nfunction getMany(\n  db,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table)\n}\n\nfunction getWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const data = {}\n    data[field] = fieldID\n    db\n      .oneOrNone(\n        `select ${columns} from ${table} where ${field}=\\${${field}}`,\n        data,\n      )\n      .then(row => (row ? resolve(row) : reject(new Error(notFoundError))))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([])\n      return\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '')\n    const columnsWithoutTable = columns.replace(\n      new RegExp(`${table}.`, 'g'),\n      '',\n    )\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter(\n      (elem, index, self) => index === self.indexOf(elem),\n    )\n    db\n      .manyOrNone(\n        `select ${columnsWithoutTable} ` +\n          `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` +\n          `on field_id = ${fieldWithoutTable} order by idx`,\n        [uniqueIDs],\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyInnerJoinedByFieldID(\n  db,\n  fieldID,\n  table1,\n  table1Field,\n  table1JoinField,\n  table2,\n  table2JoinField,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  const joinConditions = [\n    new JoinCondition(table1JoinField, table2JoinField, true),\n  ]\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(\n    db,\n    fieldID,\n    joinConditions,\n    table1,\n    table1Field,\n    table2,\n    table2Columns,\n    orderByField,\n    sortOrder,\n    offset,\n    limit,\n  )\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(\n  db,\n  fieldID,\n  joinConditions,\n  table1,\n  table1Field,\n  table2,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  let joins = ''\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField\n    const table2JoinField = condition.table2JoinField\n    const isEqual = condition.isEqual\n    joins += `${table1JoinField} ${isEqual\n      ? '='\n      : '!='} ${table2JoinField} and `\n  }\n  joins = joins.slice(0, -5)\n  return db.manyOrNone(\n    `select ${table2Columns} from ${table1} ` +\n      `inner join ${table2} on (${joins}) ` +\n      `where ${table1Field} = ${fieldID} ` +\n      `order by ${orderByField} ${sortOrder} ` +\n      `offset ${offset} limit ${limit}`,\n  )\n}\n\nfunction getManyWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `where ${field}=${fieldID} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(\n  db,\n  fieldIDs,\n  field,\n  entityID,\n  entityField,\n  columns,\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([])\n      return\n    }\n\n    db\n      .tx(t => {\n        let queries = []\n\n        /**\n         * Delete all existing fields matching ID\n         */\n        queries.push(\n          t.result(`delete from ${table} where ${entityField} = ${entityID}`),\n        )\n\n        /**\n         * Add these new fields\n         */\n        if (fieldIDs && fieldIDs.length) {\n          queries.push(\n            t.manyOrNone(\n              `insert into ${table} (${entityField}, ${field}) ` +\n                `values(${entityID}, unnest($1)) on conflict do nothing ` +\n                `returning ${columns}`,\n              [fieldIDs],\n            ),\n          )\n        }\n\n        return t.batch(queries)\n      })\n      .then(\n        data =>\n          !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1]),\n      )\n      .catch(error => reject(error.first))\n  })\n}\n\nfunction removeWithFieldID(\n  db,\n  fieldID,\n  field,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  const fields = {}\n  fields[field] = fieldID\n  return removeWithFieldIDs(db, fields, table, notFoundError)\n}\n\nfunction removeWithFieldIDs(\n  db,\n  fields,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    let where = ''\n    Object.keys(fields).map(key => (where += `${key} = \\${${key}} and `))\n    ;(where = where.slice(0, -5)),\n      db\n        .result(`delete from ${table} where ${where}`, fields)\n        .then(\n          data =>\n            data.rowCount !== 0\n              ? resolve(data)\n              : reject(new Error(notFoundError)),\n        )\n        .catch(error => reject(error))\n  })\n}\n\nfunction removeWithID(\n  db,\n  id,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError)\n}\n\nfunction updateWithID(\n  db,\n  id,\n  allowedFields = [],\n  data = {},\n  columns = 'id',\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const allowedData = {}\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()'\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField]\n      }\n    }\n\n    let updates = ''\n    Object.keys(allowedData).map(key => (updates += `${key} = \\${${key}}, `))\n    updates = updates.slice(0, -2)\n    db\n      .one(\n        `update ${table} set ${updates} where id = ${id} returning ${columns}`,\n        allowedData,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition,\n}\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/cache/songRequest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/songRequest.js",
      "filenameRelative": "/home/playola/lib/cache/songRequest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequest.js",
      "sourceFileName": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequest"
    },
    "ignored": false,
    "code": "const url = require('url');\nconst client = require('./redisClient');\n\nclass SongRequestCache {\n  constructor() {}\n\n  show(req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err);\n        next();\n      }\n\n      if (data) {\n        return res.status(200).send(data);\n      } else {\n        next();\n      }\n    });\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest));\n  }\n}\n\nmodule.exports = new SongRequestCache();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbInVybCIsInJlcXVpcmUiLCJjbGllbnQiLCJTb25nUmVxdWVzdENhY2hlIiwiY29uc3RydWN0b3IiLCJzaG93IiwicmVxIiwicmVzIiwibmV4dCIsImdldCIsInBhcmFtcyIsInNwb3RpZnlJRCIsImVyciIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsInNldFNvbmdSZXF1ZXN0Iiwic29uZ1JlcXVlc3QiLCJzZXRleCIsInNwb3RpZnlfaWQiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTUMsUUFBUSxLQUFSLENBQVo7QUFDQSxNQUFNQyxTQUFTRCxRQUFRLGVBQVIsQ0FBZjs7QUFFQSxNQUFNRSxnQkFBTixDQUF1QjtBQUNyQkMsZ0JBQWMsQ0FFYjs7QUFFREMsT0FBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUFzQjtBQUNwQk4sV0FBT08sR0FBUCxDQUFZLGdCQUFlSCxJQUFJSSxNQUFKLENBQVdDLFNBQVUsRUFBaEQsRUFBbUQsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDaEUsVUFBSUQsR0FBSixFQUFTO0FBQ1BFLGdCQUFRQyxHQUFSLENBQVlILEdBQVo7QUFDQUo7QUFDRDs7QUFFRCxVQUFJSyxJQUFKLEVBQVU7QUFDUixlQUFPTixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLElBQXJCLENBQVA7QUFDRCxPQUZELE1BRU87QUFDTEw7QUFDRDtBQUNGLEtBWEQ7QUFZRDs7QUFFRFUsaUJBQWVDLFdBQWYsRUFBNEI7QUFDMUJqQixXQUFPa0IsS0FBUCxDQUFjLGdCQUFlRCxZQUFZRSxVQUFXLEVBQXBELEVBQXVELEVBQXZELEVBQTJEQyxLQUFLQyxTQUFMLENBQWVKLFdBQWYsQ0FBM0Q7QUFDRDtBQXRCb0I7O0FBeUJ2QkssT0FBT0MsT0FBUCxHQUFpQixJQUFJdEIsZ0JBQUosRUFBakIiLCJmaWxlIjoic29uZ1JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvY2FjaGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKVxuY29uc3QgY2xpZW50ID0gcmVxdWlyZSgnLi9yZWRpc0NsaWVudCcpXG5cbmNsYXNzIFNvbmdSZXF1ZXN0Q2FjaGUge1xuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgc2hvdyAocmVxLCByZXMsIG5leHQpIHtcbiAgICBjbGllbnQuZ2V0KGBzb25nX3JlcXVlc3RfJHtyZXEucGFyYW1zLnNwb3RpZnlJRH1gLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChkYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KSB7XG4gICAgY2xpZW50LnNldGV4KGBzb25nX3JlcXVlc3RfJHtzb25nUmVxdWVzdC5zcG90aWZ5X2lkfWAsIDYwLCBKU09OLnN0cmluZ2lmeShzb25nUmVxdWVzdCkpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU29uZ1JlcXVlc3RDYWNoZSgpIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequest.js"
      ],
      "names": [
        "url",
        "require",
        "client",
        "SongRequestCache",
        "constructor",
        "show",
        "req",
        "res",
        "next",
        "get",
        "params",
        "spotifyID",
        "err",
        "data",
        "console",
        "log",
        "status",
        "send",
        "setSongRequest",
        "songRequest",
        "setex",
        "spotify_id",
        "JSON",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,MAAMC,SAASD,QAAQ,eAAR,CAAf;;AAEA,MAAME,gBAAN,CAAuB;AACrBC,gBAAc,CAEb;;AAEDC,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AACpBN,WAAOO,GAAP,CAAY,gBAAeH,IAAII,MAAJ,CAAWC,SAAU,EAAhD,EAAmD,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChE,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAJ;AACD;;AAED,UAAIK,IAAJ,EAAU;AACR,eAAON,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB,CAAP;AACD,OAFD,MAEO;AACLL;AACD;AACF,KAXD;AAYD;;AAEDU,iBAAeC,WAAf,EAA4B;AAC1BjB,WAAOkB,KAAP,CAAc,gBAAeD,YAAYE,UAAW,EAApD,EAAuD,EAAvD,EAA2DC,KAAKC,SAAL,CAAeJ,WAAf,CAA3D;AACD;AAtBoB;;AAyBvBK,OAAOC,OAAP,GAAiB,IAAItB,gBAAJ,EAAjB",
      "file": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const url = require('url')\nconst client = require('./redisClient')\n\nclass SongRequestCache {\n  constructor() {\n\n  }\n\n  show (req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err)\n        next()\n      }\n\n      if (data) {\n        return res.status(200).send(data)\n      } else {\n        next()\n      }\n    })\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest))\n  }\n}\n\nmodule.exports = new SongRequestCache()"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/cache/redisClient.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/redisClient.js",
      "filenameRelative": "/home/playola/lib/cache/redisClient.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "redisClient.js",
      "sourceFileName": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "redisClient"
    },
    "ignored": false,
    "code": "const redis = require('redis');\nconst client = redis.createClient(process.env.REDIS_URL);\nmodule.exports = client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZGlzQ2xpZW50LmpzIl0sIm5hbWVzIjpbInJlZGlzIiwicmVxdWlyZSIsImNsaWVudCIsImNyZWF0ZUNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19VUkwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLFNBQVNGLE1BQU1HLFlBQU4sQ0FBbUJDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBL0IsQ0FBZjtBQUNBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJyZWRpc0NsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9jYWNoZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlzID0gcmVxdWlyZSgncmVkaXMnKVxuY29uc3QgY2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KHByb2Nlc3MuZW52LlJFRElTX1VSTClcbm1vZHVsZS5leHBvcnRzID0gY2xpZW50Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "redisClient.js"
      ],
      "names": [
        "redis",
        "require",
        "client",
        "createClient",
        "process",
        "env",
        "REDIS_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,SAASF,MAAMG,YAAN,CAAmBC,QAAQC,GAAR,CAAYC,SAA/B,CAAf;AACAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const redis = require('redis')\nconst client = redis.createClient(process.env.REDIS_URL)\nmodule.exports = client"
      ]
    },
    "mtime": 1522275423000
  },
  "{\"filename\":\"/home/playola/test/lib.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/lib.test.js",
      "filenameRelative": "/home/playola/test/lib.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.test.js",
      "sourceFileName": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\nconst sinon = require('sinon');\nconst mongoose = require('mongoose');\n\nconst db = require('../lib/db');\nconst services = require('../lib/services');\nconst lib = require('../lib/lib');\nconst errors = require('../lib/errors');\nconst status = require('../lib/status');\nconst events = require('../lib/events');\nconst Song = require('../lib/mongoose/song');\n\ndescribe('lib', function () {\n  before(function (done) {\n    mongoose.connect(process.env.MONGODB_URI, { autoReconnect: true }, err => {\n      done();\n    });\n  });\n\n  beforeEach(async function () {\n    var requests = await db.getAllSongRequests();\n    for (let request of requests) {\n      await db.removeSongRequestWithID(request.id);\n    }\n    await Song.find({}).remove();\n  });\n\n  //\n  // Stub for detecting services publishing\n  //\n  var createdSongRequest;\n  var publishStub;\n  // stub services\n  beforeEach(function () {\n    songRequestPublishStub = sinon.stub(services.songRequest, 'publish');\n    songCreatedPublishStub = sinon.stub(services.song, 'publish');\n  });\n\n  afterEach(function () {\n    songRequestPublishStub.restore();\n    songCreatedPublishStub.restore();\n  });\n\n  afterEach(async function () {\n    try {\n      await db.removeSongRequestWithID(createdSongRequest.id);\n    } catch (err) {}\n  });\n\n  //\n  // dummy songRequest and song\n  //\n  var songRequest;\n  var song;\n  var spotifyInfo;\n\n  beforeEach(async function () {\n    spotifyInfo = { id: 'aSpotifyID',\n      artists: [{ name: 'bob' }],\n      name: 'bobsSong',\n      album: { name: 'bobsAlbum',\n        images: [{ url: 'http://bobsPicURL.com' }] },\n      duration_ms: 1000,\n      explicit: true,\n      external_ids: { isrc: 'bobsISRC' }\n    };\n    songRequest = await db.createSongRequest({ spotify_id: 'aSpotifyID',\n      spotify_info: spotifyInfo,\n      is_processing: true });\n    song = await Song.create({ 'spotifyInfo': { id: 'anotherSpotifyID' } });\n  });\n\n  describe('getOrCreateSongRequest', function () {\n\n    it('gets an existing songRequest', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(songRequest.spotify_id);\n      assert.equal(createdSongRequest.id, songRequest.id);\n    });\n\n    it('song exists -- create a songRequest with proper song_id and status', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(song.spotifyInfo.id);\n      assert.equal(createdSongRequest.song_id, song.id);\n      assert.equal(createdSongRequest.spotify_id, song.spotifyInfo.id);\n      assert.equal(createdSongRequest.is_processing, false);\n    });\n\n    it('creates a songRequest if neither song nor songRequest exist', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest('totallyDifferentSpotifyID');\n      assert.equal(createdSongRequest.song_id, '');\n      assert.equal(createdSongRequest.spotify_id, 'totallyDifferentSpotifyID');\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest);\n    });\n  });\n\n  describe('createSongRequest', function () {\n    it('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      assert.equal(createdSongRequest.spotify_id, 'mySpotifyID');\n      assert.equal(createdSongRequest.status, status.GETTING_SPOTIFY_INFO);\n      assert.equal(createdSongRequest.is_processing, true);\n    });\n\n    it('broadcasts that it was created', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest);\n    });\n  });\n\n  describe('completeReplaceAudioForSong', function () {\n    it('updates the song with the new key', async function () {\n      var updatedSong = await lib.completeReplaceAudioForSong({ key: 'aNewKey', songID: song.id });\n      assert.equal(updatedSong.key, 'aNewKey');\n    });\n  });\n\n  describe('completeSongAcquisition', function () {\n    it('adds the new song to the db', async function () {\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      var newSong = completedSongRequest.song;\n      assert.equal(newSong.spotifyInfo.id, spotifyInfo.id);\n      assert.equal(newSong.album, spotifyInfo.album.name);\n      assert.equal(newSong.title, spotifyInfo.name);\n      assert.equal(newSong.explicit, spotifyInfo.explicit);\n      assert.equal(newSong.isrc, spotifyInfo.external_ids.isrc);\n      assert.equal(newSong.albumArtworkUrl, spotifyInfo.album.images[0].url);\n      assert.equal(newSong.artist, spotifyInfo.artists[0].name);\n    });\n\n    it('updates the old songRequest', async function () {\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      assert.isObject(completedSongRequest.song);\n      assert.equal(completedSongRequest.song_id, completedSongRequest.song.id);\n      assert.equal(completedSongRequest.is_processing, false);\n    });\n\n    it('updates the songRequest and key if the song already exists', async function () {\n      var newSong = await Song.create({ spotifyInfo: { id: songRequest.spotify_id }, key: 'oldKey' });\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      assert.equal(completedSongRequest.song.id, newSong.id);\n      assert.equal(completedSongRequest.song_id, newSong.id);\n      assert.equal(completedSongRequest.song.key, 'aNewKey');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi50ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJmYWtlciIsIm1vY2hhIiwiYWZ0ZXIiLCJiZWZvcmUiLCJiZWZvcmVFYWNoIiwiYWZ0ZXJFYWNoIiwiZGVzY3JpYmUiLCJpdCIsInNpbm9uIiwibW9uZ29vc2UiLCJkYiIsInNlcnZpY2VzIiwibGliIiwiZXJyb3JzIiwic3RhdHVzIiwiZXZlbnRzIiwiU29uZyIsImRvbmUiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwiYXV0b1JlY29ubmVjdCIsImVyciIsInJlcXVlc3RzIiwiZ2V0QWxsU29uZ1JlcXVlc3RzIiwicmVxdWVzdCIsInJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEIiwiaWQiLCJmaW5kIiwicmVtb3ZlIiwiY3JlYXRlZFNvbmdSZXF1ZXN0IiwicHVibGlzaFN0dWIiLCJzb25nUmVxdWVzdFB1Ymxpc2hTdHViIiwic3R1YiIsInNvbmdSZXF1ZXN0Iiwic29uZ0NyZWF0ZWRQdWJsaXNoU3R1YiIsInNvbmciLCJyZXN0b3JlIiwic3BvdGlmeUluZm8iLCJhcnRpc3RzIiwibmFtZSIsImFsYnVtIiwiaW1hZ2VzIiwidXJsIiwiZHVyYXRpb25fbXMiLCJleHBsaWNpdCIsImV4dGVybmFsX2lkcyIsImlzcmMiLCJjcmVhdGVTb25nUmVxdWVzdCIsInNwb3RpZnlfaWQiLCJzcG90aWZ5X2luZm8iLCJpc19wcm9jZXNzaW5nIiwiY3JlYXRlIiwiZ2V0T3JDcmVhdGVTb25nUmVxdWVzdCIsImVxdWFsIiwic29uZ19pZCIsImNhbGxlZFdpdGgiLCJTT05HUkVRVUVTVF9DUkVBVEVEIiwiR0VUVElOR19TUE9USUZZX0lORk8iLCJ1cGRhdGVkU29uZyIsImNvbXBsZXRlUmVwbGFjZUF1ZGlvRm9yU29uZyIsImtleSIsInNvbmdJRCIsImNvbXBsZXRlZFNvbmdSZXF1ZXN0IiwiY29tcGxldGVTb25nQWNxdWlzaXRpb24iLCJzcG90aWZ5SUQiLCJuZXdTb25n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a0JBQWtCO0FBQ2pGLFVBQUk0RCxVQUFVLE1BQU1uRCxLQUFLcUMsTUFBTCxDQUFZLEVBQUVkLGFBQWEsRUFBRVgsSUFBSU8sWUFBWWUsVUFBbEIsRUFBZixFQUErQ1ksS0FBSyxRQUFwRCxFQUFaLENBQXBCO0FBQ0EsVUFBSUUsdUJBQXVCLE1BQU1wRCxJQUFJcUQsdUJBQUosQ0FBNEIsRUFBRUMsV0FBVy9CLFlBQVllLFVBQXpCLEVBQXFDWSxLQUFLLFNBQTFDLEVBQTVCLENBQWpDO0FBQ0FoRSxhQUFPeUQsS0FBUCxDQUFhUyxxQkFBcUIzQixJQUFyQixDQUEwQlQsRUFBdkMsRUFBMkN1QyxRQUFRdkMsRUFBbkQ7QUFDQTlCLGFBQU95RCxLQUFQLENBQWFTLHFCQUFxQlIsT0FBbEMsRUFBMkNXLFFBQVF2QyxFQUFuRDtBQUNBOUIsYUFBT3lELEtBQVAsQ0FBYVMscUJBQXFCM0IsSUFBckIsQ0FBMEJ5QixHQUF2QyxFQUE0QyxTQUE1QztBQUNELEtBTkQ7QUFPRCxHQTNCRDtBQTRCRCxDQW5JRCIsImZpbGUiOiJsaWIudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFzc2VydCB9ID0gcmVxdWlyZSgnY2hhaScpXG5jb25zdCBmYWtlciA9IHJlcXVpcmUoJ2Zha2VyJylcbmNvbnN0IG1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKVxuY29uc3QgYWZ0ZXIgPSBtb2NoYS5hZnRlclxuY29uc3QgYmVmb3JlID0gbW9jaGEuYmVmb3JlXG5jb25zdCBiZWZvcmVFYWNoID0gbW9jaGEuYmVmb3JlRWFjaFxuY29uc3QgYWZ0ZXJFYWNoID0gbW9jaGEuYWZ0ZXJFYWNoXG5jb25zdCBkZXNjcmliZSA9IG1vY2hhLmRlc2NyaWJlXG5jb25zdCBpdCA9IG1vY2hhLml0XG5jb25zdCBzaW5vbiA9IHJlcXVpcmUoJ3Npbm9uJylcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2xpYi9kYicpXG5jb25zdCBzZXJ2aWNlcyA9IHJlcXVpcmUoJy4uL2xpYi9zZXJ2aWNlcycpXG5jb25zdCBsaWIgPSByZXF1aXJlKCcuLi9saWIvbGliJylcbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2xpYi9lcnJvcnMnKVxuY29uc3Qgc3RhdHVzID0gcmVxdWlyZSgnLi4vbGliL3N0YXR1cycpXG5jb25zdCBldmVudHMgPSByZXF1aXJlKCcuLi9saWIvZXZlbnRzJylcbmNvbnN0IFNvbmcgPSByZXF1aXJlKCcuLi9saWIvbW9uZ29vc2Uvc29uZycpXG5cbmRlc2NyaWJlICgnbGliJywgZnVuY3Rpb24gKCkge1xuICBiZWZvcmUoZnVuY3Rpb24gKGRvbmUpIHtcbiAgICBtb25nb29zZS5jb25uZWN0KHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJLCB7IGF1dG9SZWNvbm5lY3Q6IHRydWUgfSwgKGVycikgPT4ge1xuICAgICAgZG9uZSgpXG4gICAgfSlcbiAgfSlcblxuICBiZWZvcmVFYWNoKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVxdWVzdHMgPSBhd2FpdCBkYi5nZXRBbGxTb25nUmVxdWVzdHMoKVxuICAgIGZvciAobGV0IHJlcXVlc3Qgb2YgcmVxdWVzdHMpIHtcbiAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKHJlcXVlc3QuaWQpXG4gICAgfVxuICAgIGF3YWl0IFNvbmcuZmluZCh7fSkucmVtb3ZlKClcbiAgfSlcblxuICAvL1xuICAvLyBTdHViIGZvciBkZXRlY3Rpbmcgc2VydmljZXMgcHVibGlzaGluZ1xuICAvL1xuICB2YXIgY3JlYXRlZFNvbmdSZXF1ZXN0XG4gIHZhciBwdWJsaXNoU3R1YlxuICAvLyBzdHViIHNlcnZpY2VzXG4gIGJlZm9yZUVhY2goZnVuY3Rpb24gKCkge1xuICAgIHNvbmdSZXF1ZXN0UHVibGlzaFN0dWIgPSBzaW5vbi5zdHViKHNlcnZpY2VzLnNvbmdSZXF1ZXN0LCAncHVibGlzaCcpXG4gICAgc29uZ0NyZWF0ZWRQdWJsaXNoU3R1YiA9IHNpbm9uLnN0dWIoc2VydmljZXMuc29uZywgJ3B1Ymxpc2gnKVxuICB9KVxuXG4gIGFmdGVyRWFjaChmdW5jdGlvbiAoKSB7XG4gICAgc29uZ1JlcXVlc3RQdWJsaXNoU3R1Yi5yZXN0b3JlKClcbiAgICBzb25nQ3JlYXRlZFB1Ymxpc2hTdHViLnJlc3RvcmUoKVxuICB9KVxuXG4gIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGRiLnJlbW92ZVNvbmdSZXF1ZXN0V2l0aElEKGNyZWF0ZWRTb25nUmVxdWVzdC5pZClcbiAgICB9IGNhdGNoIChlcnIpIHt9XG4gIH0pXG5cbiAgLy9cbiAgLy8gZHVtbXkgc29uZ1JlcXVlc3QgYW5kIHNvbmdcbiAgLy9cbiAgdmFyIHNvbmdSZXF1ZXN0XG4gIHZhciBzb25nXG4gIHZhciBzcG90aWZ5SW5mb1xuXG4gIGJlZm9yZUVhY2goYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIHNwb3RpZnlJbmZvID0geyBpZDogJ2FTcG90aWZ5SUQnLFxuICAgICAgYXJ0aXN0czogW3sgbmFtZTogJ2JvYicgfV0sXG4gICAgICBuYW1lOiAnYm9ic1NvbmcnLFxuICAgICAgYWxidW06IHsgbmFtZTogJ2JvYnNBbGJ1bScsXG4gICAgICAgICAgICAgICBpbWFnZXM6IFt7IHVybDogJ2h0dHA6Ly9ib2JzUGljVVJMLmNvbScgfV0gfSxcbiAgICAgIGR1cmF0aW9uX21zOiAxMDAwLFxuICAgICAgZXhwbGljaXQ6IHRydWUsXG4gICAgICBleHRlcm5hbF9pZHM6IHsgaXNyYzogJ2JvYnNJU1JDJyB9LFxuICAgIH1cbiAgICBzb25nUmVxdWVzdCA9IGF3YWl0IGRiLmNyZWF0ZVNvbmdSZXF1ZXN0KHsgc3BvdGlmeV9pZDogJ2FTcG90aWZ5SUQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcG90aWZ5X2luZm86IHNwb3RpZnlJbmZvLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19wcm9jZXNzaW5nOiB0cnVlIH0pXG4gICAgc29uZyA9IGF3YWl0IFNvbmcuY3JlYXRlKHsgJ3Nwb3RpZnlJbmZvJzogeyBpZDogJ2Fub3RoZXJTcG90aWZ5SUQnIH0gfSlcbiAgfSlcblxuICBkZXNjcmliZSAoJ2dldE9yQ3JlYXRlU29uZ1JlcXVlc3QnLCBmdW5jdGlvbiAoKSB7XG5cbiAgICBpdCAoJ2dldHMgYW4gZXhpc3Rpbmcgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY3JlYXRlZFNvbmdSZXF1ZXN0ID0gYXdhaXQgbGliLmdldE9yQ3JlYXRlU29uZ1JlcXVlc3Qoc29uZ1JlcXVlc3Quc3BvdGlmeV9pZClcbiAgICAgIGFzc2VydC5lcXVhbChjcmVhdGVkU29uZ1JlcXVlc3QuaWQsIHNvbmdSZXF1ZXN0LmlkKVxuICAgIH0pXG5cbiAgICBpdCAoJ3NvbmcgZXhpc3RzIC0tIGNyZWF0ZSBhIHNvbmdSZXF1ZXN0IHdpdGggcHJvcGVyIHNvbmdfaWQgYW5kIHN0YXR1cycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBjcmVhdGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuZ2V0T3JDcmVhdGVTb25nUmVxdWVzdChzb25nLnNwb3RpZnlJbmZvLmlkKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5zb25nX2lkLCBzb25nLmlkKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5zcG90aWZ5X2lkLCBzb25nLnNwb3RpZnlJbmZvLmlkKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5pc19wcm9jZXNzaW5nLCBmYWxzZSlcbiAgICB9KVxuXG4gICAgaXQgKCdjcmVhdGVzIGEgc29uZ1JlcXVlc3QgaWYgbmVpdGhlciBzb25nIG5vciBzb25nUmVxdWVzdCBleGlzdCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBjcmVhdGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuZ2V0T3JDcmVhdGVTb25nUmVxdWVzdCgndG90YWxseURpZmZlcmVudFNwb3RpZnlJRCcpXG4gICAgICBhc3NlcnQuZXF1YWwoY3JlYXRlZFNvbmdSZXF1ZXN0LnNvbmdfaWQsICcnKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5zcG90aWZ5X2lkLCAndG90YWxseURpZmZlcmVudFNwb3RpZnlJRCcpXG4gICAgICBzaW5vbi5hc3NlcnQuY2FsbGVkV2l0aChzb25nUmVxdWVzdFB1Ymxpc2hTdHViLCBldmVudHMuU09OR1JFUVVFU1RfQ1JFQVRFRCwgY3JlYXRlZFNvbmdSZXF1ZXN0KVxuICAgIH0pXG4gIH0pXG5cbiAgZGVzY3JpYmUgKCdjcmVhdGVTb25nUmVxdWVzdCcsIGZ1bmN0aW9uICgpIHtcbiAgICBpdCAoJ2NyZWF0ZXMgYSBzb25nUmVxdWVzdCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNyZWF0ZWRTb25nUmVxdWVzdCA9IGF3YWl0IGxpYi5jcmVhdGVTb25nUmVxdWVzdCgnbXlTcG90aWZ5SUQnKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5zcG90aWZ5X2lkLCAnbXlTcG90aWZ5SUQnKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNyZWF0ZWRTb25nUmVxdWVzdC5zdGF0dXMsIHN0YXR1cy5HRVRUSU5HX1NQT1RJRllfSU5GTylcbiAgICAgIGFzc2VydC5lcXVhbChjcmVhdGVkU29uZ1JlcXVlc3QuaXNfcHJvY2Vzc2luZywgdHJ1ZSlcbiAgICB9KVxuXG4gICAgaXQgKCdicm9hZGNhc3RzIHRoYXQgaXQgd2FzIGNyZWF0ZWQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBjcmVhdGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY3JlYXRlU29uZ1JlcXVlc3QoJ215U3BvdGlmeUlEJylcbiAgICAgIHNpbm9uLmFzc2VydC5jYWxsZWRXaXRoKHNvbmdSZXF1ZXN0UHVibGlzaFN0dWIsIGV2ZW50cy5TT05HUkVRVUVTVF9DUkVBVEVELCBjcmVhdGVkU29uZ1JlcXVlc3QpXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSAoJ2NvbXBsZXRlUmVwbGFjZUF1ZGlvRm9yU29uZycsIGZ1bmN0aW9uICgpIHtcbiAgICBpdCAoJ3VwZGF0ZXMgdGhlIHNvbmcgd2l0aCB0aGUgbmV3IGtleScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB1cGRhdGVkU29uZyA9IGF3YWl0IGxpYi5jb21wbGV0ZVJlcGxhY2VBdWRpb0ZvclNvbmcoeyBrZXk6ICdhTmV3S2V5Jywgc29uZ0lEOiBzb25nLmlkIH0pXG4gICAgICBhc3NlcnQuZXF1YWwodXBkYXRlZFNvbmcua2V5LCAnYU5ld0tleScpXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSAoJ2NvbXBsZXRlU29uZ0FjcXVpc2l0aW9uJywgZnVuY3Rpb24gKCkge1xuICAgIGl0ICgnYWRkcyB0aGUgbmV3IHNvbmcgdG8gdGhlIGRiJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGNvbXBsZXRlZFNvbmdSZXF1ZXN0ID0gYXdhaXQgbGliLmNvbXBsZXRlU29uZ0FjcXVpc2l0aW9uKHsgc3BvdGlmeUlEOiBzb25nUmVxdWVzdC5zcG90aWZ5X2lkLCBrZXk6ICdhTmV3S2V5JyB9KVxuICAgICAgdmFyIG5ld1NvbmcgPSBjb21wbGV0ZWRTb25nUmVxdWVzdC5zb25nXG4gICAgICBhc3NlcnQuZXF1YWwobmV3U29uZy5zcG90aWZ5SW5mby5pZCwgc3BvdGlmeUluZm8uaWQpXG4gICAgICBhc3NlcnQuZXF1YWwobmV3U29uZy5hbGJ1bSwgc3BvdGlmeUluZm8uYWxidW0ubmFtZSlcbiAgICAgIGFzc2VydC5lcXVhbChuZXdTb25nLnRpdGxlLCBzcG90aWZ5SW5mby5uYW1lKVxuICAgICAgYXNzZXJ0LmVxdWFsKG5ld1NvbmcuZXhwbGljaXQsIHNwb3RpZnlJbmZvLmV4cGxpY2l0KVxuICAgICAgYXNzZXJ0LmVxdWFsKG5ld1NvbmcuaXNyYywgc3BvdGlmeUluZm8uZXh0ZXJuYWxfaWRzLmlzcmMpXG4gICAgICBhc3NlcnQuZXF1YWwobmV3U29uZy5hbGJ1bUFydHdvcmtVcmwsIHNwb3RpZnlJbmZvLmFsYnVtLmltYWdlc1swXS51cmwpXG4gICAgICBhc3NlcnQuZXF1YWwobmV3U29uZy5hcnRpc3QsIHNwb3RpZnlJbmZvLmFydGlzdHNbMF0ubmFtZSlcbiAgICB9KVxuXG4gICAgaXQgKCd1cGRhdGVzIHRoZSBvbGQgc29uZ1JlcXVlc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY29tcGxldGVkU29uZ1JlcXVlc3QgPSBhd2FpdCBsaWIuY29tcGxldGVTb25nQWNxdWlzaXRpb24oeyBzcG90aWZ5SUQ6IHNvbmdSZXF1ZXN0LnNwb3RpZnlfaWQsIGtleTogJ2FOZXdLZXknIH0pXG4gICAgICBhc3NlcnQuaXNPYmplY3QoY29tcGxldGVkU29uZ1JlcXVlc3Quc29uZylcbiAgICAgIGFzc2VydC5lcXVhbChjb21wbGV0ZWRTb25nUmVxdWVzdC5zb25nX2lkLCBjb21wbGV0ZWRTb25nUmVxdWVzdC5zb25nLmlkKVxuICAgICAgYXNzZXJ0LmVxdWFsKGNvbXBsZXRlZFNvbmdSZXF1ZXN0LmlzX3Byb2Nlc3NpbmcsIGZhbHNlKVxuICAgIH0pXG4gICAgXG4gICAgaXQoJ3VwZGF0ZXMgdGhlIHNvbmdSZXF1ZXN0IGFuZCBrZXkgaWYgdGhlIHNvbmcgYWxyZWFkeSBleGlzdHMnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbmV3U29uZyA9IGF3YWl0IFNvbmcuY3JlYXRlKHsgc3BvdGlmeUluZm86IHsgaWQ6IHNvbmdSZXF1ZXN0LnNwb3RpZnlfaWQgfSwga2V5OiAnb2xkS2V5JyB9KVxuICAgICAgdmFyIGNvbXBsZXRlZFNvbmdSZXF1ZXN0ID0gYXdhaXQgbGliLmNvbXBsZXRlU29uZ0FjcXVpc2l0aW9uKHsgc3BvdGlmeUlEOiBzb25nUmVxdWVzdC5zcG90aWZ5X2lkLCBrZXk6ICdhTmV3S2V5JyB9KVxuICAgICAgYXNzZXJ0LmVxdWFsKGNvbXBsZXRlZFNvbmdSZXF1ZXN0LnNvbmcuaWQsIG5ld1NvbmcuaWQpXG4gICAgICBhc3NlcnQuZXF1YWwoY29tcGxldGVkU29uZ1JlcXVlc3Quc29uZ19pZCwgbmV3U29uZy5pZClcbiAgICAgIGFzc2VydC5lcXVhbChjb21wbGV0ZWRTb25nUmVxdWVzdC5zb25nLmtleSwgJ2FOZXdLZXknKVxuICAgIH0pXG4gIH0pXG59KVxuXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "sinon",
        "mongoose",
        "db",
        "services",
        "lib",
        "errors",
        "status",
        "events",
        "Song",
        "done",
        "connect",
        "process",
        "env",
        "MONGODB_URI",
        "autoReconnect",
        "err",
        "requests",
        "getAllSongRequests",
        "request",
        "removeSongRequestWithID",
        "id",
        "find",
        "remove",
        "createdSongRequest",
        "publishStub",
        "songRequestPublishStub",
        "stub",
        "songRequest",
        "songCreatedPublishStub",
        "song",
        "restore",
        "spotifyInfo",
        "artists",
        "name",
        "album",
        "images",
        "url",
        "duration_ms",
        "explicit",
        "external_ids",
        "isrc",
        "createSongRequest",
        "spotify_id",
        "spotify_info",
        "is_processing",
        "create",
        "getOrCreateSongRequest",
        "equal",
        "song_id",
        "calledWith",
        "SONGREQUEST_CREATED",
        "GETTING_SPOTIFY_INFO",
        "updatedSong",
        "completeReplaceAudioForSong",
        "key",
        "songID",
        "completedSongRequest",
        "completeSongAcquisition",
        "spotifyID",
        "newSong",
        "title",
        "albumArtworkUrl",
        "artist",
        "isObject"
      ],
      "mappings": "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",
      "file": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\nconst sinon = require('sinon')\nconst mongoose = require('mongoose')\n\nconst db = require('../lib/db')\nconst services = require('../lib/services')\nconst lib = require('../lib/lib')\nconst errors = require('../lib/errors')\nconst status = require('../lib/status')\nconst events = require('../lib/events')\nconst Song = require('../lib/mongoose/song')\n\ndescribe ('lib', function () {\n  before(function (done) {\n    mongoose.connect(process.env.MONGODB_URI, { autoReconnect: true }, (err) => {\n      done()\n    })\n  })\n\n  beforeEach(async function () {\n    var requests = await db.getAllSongRequests()\n    for (let request of requests) {\n      await db.removeSongRequestWithID(request.id)\n    }\n    await Song.find({}).remove()\n  })\n\n  //\n  // Stub for detecting services publishing\n  //\n  var createdSongRequest\n  var publishStub\n  // stub services\n  beforeEach(function () {\n    songRequestPublishStub = sinon.stub(services.songRequest, 'publish')\n    songCreatedPublishStub = sinon.stub(services.song, 'publish')\n  })\n\n  afterEach(function () {\n    songRequestPublishStub.restore()\n    songCreatedPublishStub.restore()\n  })\n\n  afterEach(async function () {\n    try {\n      await db.removeSongRequestWithID(createdSongRequest.id)\n    } catch (err) {}\n  })\n\n  //\n  // dummy songRequest and song\n  //\n  var songRequest\n  var song\n  var spotifyInfo\n\n  beforeEach(async function () {\n    spotifyInfo = { id: 'aSpotifyID',\n      artists: [{ name: 'bob' }],\n      name: 'bobsSong',\n      album: { name: 'bobsAlbum',\n               images: [{ url: 'http://bobsPicURL.com' }] },\n      duration_ms: 1000,\n      explicit: true,\n      external_ids: { isrc: 'bobsISRC' },\n    }\n    songRequest = await db.createSongRequest({ spotify_id: 'aSpotifyID',\n                                               spotify_info: spotifyInfo,\n                                               is_processing: true })\n    song = await Song.create({ 'spotifyInfo': { id: 'anotherSpotifyID' } })\n  })\n\n  describe ('getOrCreateSongRequest', function () {\n\n    it ('gets an existing songRequest', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(songRequest.spotify_id)\n      assert.equal(createdSongRequest.id, songRequest.id)\n    })\n\n    it ('song exists -- create a songRequest with proper song_id and status', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(song.spotifyInfo.id)\n      assert.equal(createdSongRequest.song_id, song.id)\n      assert.equal(createdSongRequest.spotify_id, song.spotifyInfo.id)\n      assert.equal(createdSongRequest.is_processing, false)\n    })\n\n    it ('creates a songRequest if neither song nor songRequest exist', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest('totallyDifferentSpotifyID')\n      assert.equal(createdSongRequest.song_id, '')\n      assert.equal(createdSongRequest.spotify_id, 'totallyDifferentSpotifyID')\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest)\n    })\n  })\n\n  describe ('createSongRequest', function () {\n    it ('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      assert.equal(createdSongRequest.spotify_id, 'mySpotifyID')\n      assert.equal(createdSongRequest.status, status.GETTING_SPOTIFY_INFO)\n      assert.equal(createdSongRequest.is_processing, true)\n    })\n\n    it ('broadcasts that it was created', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest)\n    })\n  })\n\n  describe ('completeReplaceAudioForSong', function () {\n    it ('updates the song with the new key', async function () {\n      var updatedSong = await lib.completeReplaceAudioForSong({ key: 'aNewKey', songID: song.id })\n      assert.equal(updatedSong.key, 'aNewKey')\n    })\n  })\n\n  describe ('completeSongAcquisition', function () {\n    it ('adds the new song to the db', async function () {\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      var newSong = completedSongRequest.song\n      assert.equal(newSong.spotifyInfo.id, spotifyInfo.id)\n      assert.equal(newSong.album, spotifyInfo.album.name)\n      assert.equal(newSong.title, spotifyInfo.name)\n      assert.equal(newSong.explicit, spotifyInfo.explicit)\n      assert.equal(newSong.isrc, spotifyInfo.external_ids.isrc)\n      assert.equal(newSong.albumArtworkUrl, spotifyInfo.album.images[0].url)\n      assert.equal(newSong.artist, spotifyInfo.artists[0].name)\n    })\n\n    it ('updates the old songRequest', async function () {\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      assert.isObject(completedSongRequest.song)\n      assert.equal(completedSongRequest.song_id, completedSongRequest.song.id)\n      assert.equal(completedSongRequest.is_processing, false)\n    })\n    \n    it('updates the songRequest and key if the song already exists', async function () {\n      var newSong = await Song.create({ spotifyInfo: { id: songRequest.spotify_id }, key: 'oldKey' })\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      assert.equal(completedSongRequest.song.id, newSong.id)\n      assert.equal(completedSongRequest.song_id, newSong.id)\n      assert.equal(completedSongRequest.song.key, 'aNewKey')\n    })\n  })\n})\n\n"
      ]
    },
    "mtime": 1523759313000
  },
  "{\"filename\":\"/home/playola/lib/services.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services.js",
      "filenameRelative": "/home/playola/lib/services.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "services.js",
      "sourceFileName": "services.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "services"
    },
    "ignored": false,
    "code": "const EventStream = require('../deps/event-stream/EventStream');\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup');\n\nconst instance = new EventStreamGroup([new EventStream('songRequest', process.env.CLOUDAMQP_URL), new EventStream('song', process.env.CLOUDAMQP_URL)]);\n\nObject.freeze(instance);\nmodule.exports = instance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzLmpzIl0sIm5hbWVzIjpbIkV2ZW50U3RyZWFtIiwicmVxdWlyZSIsIkV2ZW50U3RyZWFtR3JvdXAiLCJpbnN0YW5jZSIsInByb2Nlc3MiLCJlbnYiLCJDTE9VREFNUVBfVVJMIiwiT2JqZWN0IiwiZnJlZXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsY0FBY0MsUUFBUSxrQ0FBUixDQUFwQjtBQUNBLE1BQU1DLG1CQUFtQkQsUUFBUSx1Q0FBUixDQUF6Qjs7QUFFQSxNQUFNRSxXQUFXLElBQUlELGdCQUFKLENBQXFCLENBQ3BDLElBQUlGLFdBQUosQ0FBZ0IsYUFBaEIsRUFBK0JJLFFBQVFDLEdBQVIsQ0FBWUMsYUFBM0MsQ0FEb0MsRUFFcEMsSUFBSU4sV0FBSixDQUFnQixNQUFoQixFQUF3QkksUUFBUUMsR0FBUixDQUFZQyxhQUFwQyxDQUZvQyxDQUFyQixDQUFqQjs7QUFLQUMsT0FBT0MsTUFBUCxDQUFjTCxRQUFkO0FBQ0FNLE9BQU9DLE9BQVAsR0FBaUJQLFFBQWpCIiwiZmlsZSI6InNlcnZpY2VzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRTdHJlYW0gPSByZXF1aXJlKCcuLi9kZXBzL2V2ZW50LXN0cmVhbS9FdmVudFN0cmVhbScpXG5jb25zdCBFdmVudFN0cmVhbUdyb3VwID0gcmVxdWlyZSgnLi4vZGVwcy9ldmVudC1zdHJlYW0vRXZlbnRTdHJlYW1Hcm91cCcpXG5cbmNvbnN0IGluc3RhbmNlID0gbmV3IEV2ZW50U3RyZWFtR3JvdXAoW1xuICBuZXcgRXZlbnRTdHJlYW0oJ3NvbmdSZXF1ZXN0JywgcHJvY2Vzcy5lbnYuQ0xPVURBTVFQX1VSTCksXG4gIG5ldyBFdmVudFN0cmVhbSgnc29uZycsIHByb2Nlc3MuZW52LkNMT1VEQU1RUF9VUkwpLFxuXSlcblxuT2JqZWN0LmZyZWV6ZShpbnN0YW5jZSlcbm1vZHVsZS5leHBvcnRzID0gaW5zdGFuY2UiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "services.js"
      ],
      "names": [
        "EventStream",
        "require",
        "EventStreamGroup",
        "instance",
        "process",
        "env",
        "CLOUDAMQP_URL",
        "Object",
        "freeze",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,cAAcC,QAAQ,kCAAR,CAApB;AACA,MAAMC,mBAAmBD,QAAQ,uCAAR,CAAzB;;AAEA,MAAME,WAAW,IAAID,gBAAJ,CAAqB,CACpC,IAAIF,WAAJ,CAAgB,aAAhB,EAA+BI,QAAQC,GAAR,CAAYC,aAA3C,CADoC,EAEpC,IAAIN,WAAJ,CAAgB,MAAhB,EAAwBI,QAAQC,GAAR,CAAYC,aAApC,CAFoC,CAArB,CAAjB;;AAKAC,OAAOC,MAAP,CAAcL,QAAd;AACAM,OAAOC,OAAP,GAAiBP,QAAjB",
      "file": "services.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "const EventStream = require('../deps/event-stream/EventStream')\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup')\n\nconst instance = new EventStreamGroup([\n  new EventStream('songRequest', process.env.CLOUDAMQP_URL),\n  new EventStream('song', process.env.CLOUDAMQP_URL),\n])\n\nObject.freeze(instance)\nmodule.exports = instance"
      ]
    },
    "mtime": 1523631585000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStream.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStream.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStream.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStream.js",
      "sourceFileName": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStream"
    },
    "ignored": false,
    "code": "let amqp = require('amqplib/callback_api');\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n    this.channel = null;\n    this.queue = null;\n    this.handlers = {};\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = connection => {\n        this._createChannel(connection).then(() => createQueue()).catch(error => reject(error));\n      };\n\n      const createQueue = () => {\n        this._createQueue().then(() => resolve()).catch(error => reject(error));\n      };\n\n      amqp.connect(this.url, (error, connection) => {\n        if (error) {\n          reject(error);\n        } else {\n          createChannel(connection);\n        }\n      });\n    });\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel((error, channel) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.channel = channel;\n          resolve();\n        }\n      });\n    });\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue('', { exclusive: true }, (error, queue) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.queue = queue;\n          resolve();\n        }\n      });\n    });\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)));\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler;\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.bindQueue(this.queue.queue, event, '');\n    this.channel.consume(this.queue.queue, msg => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content));\n    });\n  }\n\n}\n\nmodule.exports = EventStream;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtLmpzIl0sIm5hbWVzIjpbImFtcXAiLCJyZXF1aXJlIiwiRXZlbnRTdHJlYW0iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJ1cmwiLCJjaGFubmVsIiwicXVldWUiLCJoYW5kbGVycyIsImNvbm5lY3QiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNyZWF0ZUNoYW5uZWwiLCJjb25uZWN0aW9uIiwiX2NyZWF0ZUNoYW5uZWwiLCJ0aGVuIiwiY3JlYXRlUXVldWUiLCJjYXRjaCIsImVycm9yIiwiX2NyZWF0ZVF1ZXVlIiwiYXNzZXJ0UXVldWUiLCJleGNsdXNpdmUiLCJwdWJsaXNoIiwiZXZlbnQiLCJkYXRhIiwiYXNzZXJ0RXhjaGFuZ2UiLCJkdXJhYmxlIiwiQnVmZmVyIiwiSlNPTiIsInN0cmluZ2lmeSIsInN1YnNjcmliZSIsImhhbmRsZXIiLCJiaW5kUXVldWUiLCJjb25zdW1lIiwibXNnIiwiZmllbGRzIiwiZXhjaGFuZ2UiLCJwYXJzZSIsImNvbnRlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxRQUFRLHNCQUFSLENBQVg7O0FBRUEsTUFBTUMsV0FBTixDQUFrQjs7QUFFaEJDLGNBQVlDLElBQVosRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3JCLFNBQUtELElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLElBQWI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0Q7O0FBRURDLFlBQVU7QUFDUixXQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsWUFBTUMsZ0JBQWlCQyxVQUFELElBQWdCO0FBQ3BDLGFBQUtDLGNBQUwsQ0FBb0JELFVBQXBCLEVBQ0dFLElBREgsQ0FDUSxNQUFNQyxhQURkLEVBRUdDLEtBRkgsQ0FFU0MsU0FBU1AsT0FBT08sS0FBUCxDQUZsQjtBQUdELE9BSkQ7O0FBTUEsWUFBTUYsY0FBYyxNQUFNO0FBQ3hCLGFBQUtHLFlBQUwsR0FDR0osSUFESCxDQUNRLE1BQU1MLFNBRGQsRUFFR08sS0FGSCxDQUVTQyxTQUFTUCxPQUFPTyxLQUFQLENBRmxCO0FBR0QsT0FKRDs7QUFNQW5CLFdBQUtTLE9BQUwsQ0FDRSxLQUFLSixHQURQLEVBRUUsQ0FBQ2MsS0FBRCxFQUFRTCxVQUFSLEtBQXVCO0FBQ3JCLFlBQUlLLEtBQUosRUFBVztBQUNUUCxpQkFBT08sS0FBUDtBQUNELFNBRkQsTUFFTztBQUNMTix3QkFBY0MsVUFBZDtBQUNEO0FBQ0YsT0FSSDtBQVNELEtBdEJNLENBQVA7QUF1QkQ7O0FBRURDLGlCQUFlRCxVQUFmLEVBQTJCO0FBQ3pCLFdBQU8sSUFBSUosT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q0UsaUJBQVdELGFBQVgsQ0FDRSxDQUFDTSxLQUFELEVBQVFiLE9BQVIsS0FBb0I7QUFDbEIsWUFBSWEsS0FBSixFQUFXO0FBQ1RQLGlCQUFPTyxLQUFQO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsZUFBS2IsT0FBTCxHQUFlQSxPQUFmO0FBQ0FLO0FBQ0Q7QUFDRixPQVJIO0FBU0QsS0FWTSxDQUFQO0FBV0Q7O0FBRURTLGlCQUFlO0FBQ2IsV0FBTyxJQUFJVixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFdBQUtOLE9BQUwsQ0FBYWUsV0FBYixDQUNFLEVBREYsRUFFRSxFQUFDQyxXQUFXLElBQVosRUFGRixFQUdFLENBQUNILEtBQUQsRUFBUVosS0FBUixLQUFrQjtBQUNoQixZQUFJWSxLQUFKLEVBQVc7QUFDVFAsaUJBQU9PLEtBQVA7QUFDRCxTQUZELE1BRU87QUFDTCxlQUFLWixLQUFMLEdBQWFBLEtBQWI7QUFDQUk7QUFDRDtBQUNGLE9BVkg7QUFXRCxLQVpNLENBQVA7QUFhRDs7QUFFRFksVUFBUUMsS0FBUixFQUFlQyxJQUFmLEVBQXFCO0FBQ25CLFNBQUtuQixPQUFMLENBQWFvQixjQUFiLENBQTRCRixLQUE1QixFQUFtQyxRQUFuQyxFQUE2QyxFQUFDRyxTQUFTLEtBQVYsRUFBN0M7QUFDQSxTQUFLckIsT0FBTCxDQUFhaUIsT0FBYixDQUFxQkMsS0FBckIsRUFBNEIsRUFBNUIsRUFBZ0MsSUFBSUksTUFBSixDQUFXQyxLQUFLQyxTQUFMLENBQWVMLElBQWYsQ0FBWCxDQUFoQztBQUNEOztBQUVETSxZQUFVUCxLQUFWLEVBQWlCUSxPQUFqQixFQUEwQjtBQUN4QixTQUFLeEIsUUFBTCxDQUFjZ0IsS0FBZCxJQUF1QlEsT0FBdkI7QUFDQSxTQUFLMUIsT0FBTCxDQUFhb0IsY0FBYixDQUE0QkYsS0FBNUIsRUFBbUMsUUFBbkMsRUFBNkMsRUFBQ0csU0FBUyxLQUFWLEVBQTdDO0FBQ0EsU0FBS3JCLE9BQUwsQ0FBYTJCLFNBQWIsQ0FBdUIsS0FBSzFCLEtBQUwsQ0FBV0EsS0FBbEMsRUFBeUNpQixLQUF6QyxFQUFnRCxFQUFoRDtBQUNBLFNBQUtsQixPQUFMLENBQWE0QixPQUFiLENBQXFCLEtBQUszQixLQUFMLENBQVdBLEtBQWhDLEVBQXdDNEIsR0FBRCxJQUFTO0FBQzlDLFdBQUszQixRQUFMLENBQWMyQixJQUFJQyxNQUFKLENBQVdDLFFBQXpCLEVBQW1DUixLQUFLUyxLQUFMLENBQVdILElBQUlJLE9BQWYsQ0FBbkM7QUFDRCxLQUZEO0FBR0Q7O0FBOUVlOztBQWtGbEJDLE9BQU9DLE9BQVAsR0FBaUJ2QyxXQUFqQiIsImZpbGUiOiJFdmVudFN0cmVhbS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFtcXAgPSByZXF1aXJlKCdhbXFwbGliL2NhbGxiYWNrX2FwaScpXG5cbmNsYXNzIEV2ZW50U3RyZWFtIHtcblxuICBjb25zdHJ1Y3RvcihuYW1lLCB1cmwpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy51cmwgPSB1cmxcbiAgICB0aGlzLmNoYW5uZWwgPSBudWxsXG4gICAgdGhpcy5xdWV1ZSA9IG51bGxcbiAgICB0aGlzLmhhbmRsZXJzID0ge31cbiAgfVxuXG4gIGNvbm5lY3QoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGNyZWF0ZUNoYW5uZWwgPSAoY29ubmVjdGlvbikgPT4ge1xuICAgICAgICB0aGlzLl9jcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgLnRoZW4oKCkgPT4gY3JlYXRlUXVldWUoKSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgY3JlYXRlUXVldWUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NyZWF0ZVF1ZXVlKClcbiAgICAgICAgICAudGhlbigoKSA9PiByZXNvbHZlKCkpXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gICAgICB9XG5cbiAgICAgIGFtcXAuY29ubmVjdChcbiAgICAgICAgdGhpcy51cmwsXG4gICAgICAgIChlcnJvciwgY29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBfY3JlYXRlQ2hhbm5lbChjb25uZWN0aW9uKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbm5lY3Rpb24uY3JlYXRlQ2hhbm5lbChcbiAgICAgICAgKGVycm9yLCBjaGFubmVsKSA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbCA9IGNoYW5uZWxcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgX2NyZWF0ZVF1ZXVlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLmNoYW5uZWwuYXNzZXJ0UXVldWUoXG4gICAgICAgICcnLFxuICAgICAgICB7ZXhjbHVzaXZlOiB0cnVlfSxcbiAgICAgICAgKGVycm9yLCBxdWV1ZSkgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXVlID0gcXVldWVcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgcHVibGlzaChldmVudCwgZGF0YSkge1xuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLnB1Ymxpc2goZXZlbnQsICcnLCBuZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KGRhdGEpKSlcbiAgfVxuXG4gIHN1YnNjcmliZShldmVudCwgaGFuZGxlcikge1xuICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlclxuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLmJpbmRRdWV1ZSh0aGlzLnF1ZXVlLnF1ZXVlLCBldmVudCwgJycpXG4gICAgdGhpcy5jaGFubmVsLmNvbnN1bWUodGhpcy5xdWV1ZS5xdWV1ZSwgKG1zZykgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVyc1ttc2cuZmllbGRzLmV4Y2hhbmdlXShKU09OLnBhcnNlKG1zZy5jb250ZW50KSlcbiAgICB9KVxuICB9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFN0cmVhbVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStream.js"
      ],
      "names": [
        "amqp",
        "require",
        "EventStream",
        "constructor",
        "name",
        "url",
        "channel",
        "queue",
        "handlers",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "createChannel",
        "connection",
        "_createChannel",
        "then",
        "createQueue",
        "catch",
        "error",
        "_createQueue",
        "assertQueue",
        "exclusive",
        "publish",
        "event",
        "data",
        "assertExchange",
        "durable",
        "Buffer",
        "JSON",
        "stringify",
        "subscribe",
        "handler",
        "bindQueue",
        "consume",
        "msg",
        "fields",
        "exchange",
        "parse",
        "content",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAOC,QAAQ,sBAAR,CAAX;;AAEA,MAAMC,WAAN,CAAkB;;AAEhBC,cAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AACrB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,gBAAiBC,UAAD,IAAgB;AACpC,aAAKC,cAAL,CAAoBD,UAApB,EACGE,IADH,CACQ,MAAMC,aADd,EAEGC,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMA,YAAMF,cAAc,MAAM;AACxB,aAAKG,YAAL,GACGJ,IADH,CACQ,MAAML,SADd,EAEGO,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMAnB,WAAKS,OAAL,CACE,KAAKJ,GADP,EAEE,CAACc,KAAD,EAAQL,UAAR,KAAuB;AACrB,YAAIK,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACLN,wBAAcC,UAAd;AACD;AACF,OARH;AASD,KAtBM,CAAP;AAuBD;;AAEDC,iBAAeD,UAAf,EAA2B;AACzB,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCE,iBAAWD,aAAX,CACE,CAACM,KAAD,EAAQb,OAAR,KAAoB;AAClB,YAAIa,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKb,OAAL,GAAeA,OAAf;AACAK;AACD;AACF,OARH;AASD,KAVM,CAAP;AAWD;;AAEDS,iBAAe;AACb,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKN,OAAL,CAAae,WAAb,CACE,EADF,EAEE,EAACC,WAAW,IAAZ,EAFF,EAGE,CAACH,KAAD,EAAQZ,KAAR,KAAkB;AAChB,YAAIY,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKZ,KAAL,GAAaA,KAAb;AACAI;AACD;AACF,OAVH;AAWD,KAZM,CAAP;AAaD;;AAEDY,UAAQC,KAAR,EAAeC,IAAf,EAAqB;AACnB,SAAKnB,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAaiB,OAAb,CAAqBC,KAArB,EAA4B,EAA5B,EAAgC,IAAII,MAAJ,CAAWC,KAAKC,SAAL,CAAeL,IAAf,CAAX,CAAhC;AACD;;AAEDM,YAAUP,KAAV,EAAiBQ,OAAjB,EAA0B;AACxB,SAAKxB,QAAL,CAAcgB,KAAd,IAAuBQ,OAAvB;AACA,SAAK1B,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAa2B,SAAb,CAAuB,KAAK1B,KAAL,CAAWA,KAAlC,EAAyCiB,KAAzC,EAAgD,EAAhD;AACA,SAAKlB,OAAL,CAAa4B,OAAb,CAAqB,KAAK3B,KAAL,CAAWA,KAAhC,EAAwC4B,GAAD,IAAS;AAC9C,WAAK3B,QAAL,CAAc2B,IAAIC,MAAJ,CAAWC,QAAzB,EAAmCR,KAAKS,KAAL,CAAWH,IAAII,OAAf,CAAnC;AACD,KAFD;AAGD;;AA9Ee;;AAkFlBC,OAAOC,OAAP,GAAiBvC,WAAjB",
      "file": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        "let amqp = require('amqplib/callback_api')\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name\n    this.url = url\n    this.channel = null\n    this.queue = null\n    this.handlers = {}\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = (connection) => {\n        this._createChannel(connection)\n          .then(() => createQueue())\n          .catch(error => reject(error))\n      }\n\n      const createQueue = () => {\n        this._createQueue()\n          .then(() => resolve())\n          .catch(error => reject(error))\n      }\n\n      amqp.connect(\n        this.url,\n        (error, connection) => {\n          if (error) {\n            reject(error)\n          } else {\n            createChannel(connection)\n          }\n        })\n    })\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel(\n        (error, channel) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.channel = channel\n            resolve()\n          }\n        })\n    })\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue(\n        '',\n        {exclusive: true},\n        (error, queue) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.queue = queue\n            resolve()\n          }\n        })\n    })\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)))\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.bindQueue(this.queue.queue, event, '')\n    this.channel.consume(this.queue.queue, (msg) => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content))\n    })\n  }\n\n}\n\nmodule.exports = EventStream\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStreamGroup.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStreamGroup.js",
      "sourceFileName": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStreamGroup"
    },
    "ignored": false,
    "code": "class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream;\n    }\n\n    this.streams = streams;\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'));\n        return;\n      }\n\n      let promises = [];\n      for (let stream of this.streams) {\n        promises.push(stream.connect());\n      }\n\n      Promise.all(promises).then(connections => resolve()).catch(error => reject(error));\n    });\n  }\n\n}\n\nmodule.exports = EventStreamGroup;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtR3JvdXAuanMiXSwibmFtZXMiOlsiRXZlbnRTdHJlYW1Hcm91cCIsImNvbnN0cnVjdG9yIiwic3RyZWFtcyIsInN0cmVhbSIsIm5hbWUiLCJjb25uZWN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsZW5ndGgiLCJFcnJvciIsInByb21pc2VzIiwicHVzaCIsImFsbCIsInRoZW4iLCJjb25uZWN0aW9ucyIsImNhdGNoIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQyxNQUFNQSxnQkFBTixDQUF1Qjs7QUFFdEJDLGNBQVlDLE9BQVosRUFBcUI7QUFDbkIsU0FBSyxJQUFJQyxNQUFULElBQW1CRCxPQUFuQixFQUE0QjtBQUMxQixXQUFLQyxPQUFPQyxJQUFaLElBQW9CRCxNQUFwQjtBQUNEOztBQUVELFNBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNEOztBQUVERyxZQUFVO0FBQ1IsV0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFVBQUksS0FBS04sT0FBTCxDQUFhTyxNQUFiLEtBQXdCLENBQTVCLEVBQStCO0FBQzdCRCxlQUFPLElBQUlFLEtBQUosQ0FBVSwrQ0FBVixDQUFQO0FBQ0E7QUFDRDs7QUFFRCxVQUFJQyxXQUFXLEVBQWY7QUFDQSxXQUFLLElBQUlSLE1BQVQsSUFBbUIsS0FBS0QsT0FBeEIsRUFBaUM7QUFDL0JTLGlCQUFTQyxJQUFULENBQWVULE9BQU9FLE9BQVAsRUFBZjtBQUNEOztBQUVEQyxjQUFRTyxHQUFSLENBQVlGLFFBQVosRUFDR0csSUFESCxDQUNTQyxXQUFELElBQWlCUixTQUR6QixFQUVHUyxLQUZILENBRVNDLFNBQVNULE9BQU9TLEtBQVAsQ0FGbEI7QUFHRCxLQWRNLENBQVA7QUFlRDs7QUExQnFCOztBQThCeEJDLE9BQU9DLE9BQVAsR0FBaUJuQixnQkFBakIiLCJmaWxlIjoiRXZlbnRTdHJlYW1Hcm91cC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsiIGNsYXNzIEV2ZW50U3RyZWFtR3JvdXAge1xuXG4gIGNvbnN0cnVjdG9yKHN0cmVhbXMpIHtcbiAgICBmb3IgKGxldCBzdHJlYW0gb2Ygc3RyZWFtcykge1xuICAgICAgdGhpc1tzdHJlYW0ubmFtZV0gPSBzdHJlYW1cbiAgICB9XG5cbiAgICB0aGlzLnN0cmVhbXMgPSBzdHJlYW1zXG4gIH1cblxuICBjb25uZWN0KCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpZiAodGhpcy5zdHJlYW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKCdFdmVudFN0cmVhbUdyb3VwIHNob3VsZCBub3QgY29udGFpbiAwIHN0cmVhbXMnKSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGxldCBwcm9taXNlcyA9IFtdXG4gICAgICBmb3IgKGxldCBzdHJlYW0gb2YgdGhpcy5zdHJlYW1zKSB7XG4gICAgICAgIHByb21pc2VzLnB1c2goIHN0cmVhbS5jb25uZWN0KCkgKVxuICAgICAgfVxuXG4gICAgICBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgICAgICAgLnRoZW4oKGNvbm5lY3Rpb25zKSA9PiByZXNvbHZlKCkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxuICAgIH0pXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U3RyZWFtR3JvdXAiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStreamGroup.js"
      ],
      "names": [
        "EventStreamGroup",
        "constructor",
        "streams",
        "stream",
        "name",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "length",
        "Error",
        "promises",
        "push",
        "all",
        "then",
        "connections",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAC,MAAMA,gBAAN,CAAuB;;AAEtBC,cAAYC,OAAZ,EAAqB;AACnB,SAAK,IAAIC,MAAT,IAAmBD,OAAnB,EAA4B;AAC1B,WAAKC,OAAOC,IAAZ,IAAoBD,MAApB;AACD;;AAED,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEDG,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI,KAAKN,OAAL,CAAaO,MAAb,KAAwB,CAA5B,EAA+B;AAC7BD,eAAO,IAAIE,KAAJ,CAAU,+CAAV,CAAP;AACA;AACD;;AAED,UAAIC,WAAW,EAAf;AACA,WAAK,IAAIR,MAAT,IAAmB,KAAKD,OAAxB,EAAiC;AAC/BS,iBAASC,IAAT,CAAeT,OAAOE,OAAP,EAAf;AACD;;AAEDC,cAAQO,GAAR,CAAYF,QAAZ,EACGG,IADH,CACSC,WAAD,IAAiBR,SADzB,EAEGS,KAFH,CAESC,SAAST,OAAOS,KAAP,CAFlB;AAGD,KAdM,CAAP;AAeD;;AA1BqB;;AA8BxBC,OAAOC,OAAP,GAAiBnB,gBAAjB",
      "file": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        " class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream\n    }\n\n    this.streams = streams\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'))\n        return\n      }\n\n      let promises = []\n      for (let stream of this.streams) {\n        promises.push( stream.connect() )\n      }\n\n      Promise.all(promises)\n        .then((connections) => resolve())\n        .catch(error => reject(error))\n    })\n  }\n\n}\n\nmodule.exports = EventStreamGroup"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/lib.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/lib.js",
      "filenameRelative": "/home/playola/lib/lib.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.js",
      "sourceFileName": "lib.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib"
    },
    "ignored": false,
    "code": "var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nconst spotify = require('./services/spotify');\nconst Song = require('./mongoose/song');\nconst AWS = require('aws-sdk');\nconst services = require('./services');\nconst events = require('./events');\nconst db = require('./db');\nconst errors = require('./errors');\nconst status = require('./status');\n\nconst youTubeAudioProcessor = require('./services/youTubeAudioProcessor');\n\nfunction getOrCreateSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    // first search songRequest\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => resolve(songRequest)).catch(err => {\n      if (err.message !== errors.SONG_REQUEST_DOES_NOT_EXIST) return reject(err);\n      // check if song already exists\n      Song.findOne({ 'spotifyInfo.id': spotifyID }, function (err, song) {\n        if (err) {\n          console.log(err);\n          return rject(err);\n        }\n        // IF the song already exists, create a completed songRequest with it\n        // and resolve with it\n        if (song) {\n          db.createSongRequest({ spotify_id: spotifyID, status: status.COMPLETED, is_processing: false, song_id: song.id }).then(createdRequest => resolve(_extends({}, createdRequest, { song }))).catch(err => reject(err));\n        } else {\n          createSongRequest(spotifyID).then(newRequest => resolve(newRequest)).catch(err => reject(err));\n        }\n      });\n    });\n  });\n}\n\nfunction createSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    function finish(songRequest) {\n      services.songRequest.publish(events.SONGREQUEST_CREATED, songRequest);\n      resolve(songRequest);\n    }\n\n    db.createSongRequest({ spotify_id: spotifyID, status: status.GETTING_SPOTIFY_INFO, is_processing: true }).then(createdRequest => finish(createdRequest)).catch(err => reject(err));\n  });\n}\n\nfunction requestAudioForSongRequest({ youTubeIDs, spotifyID }) {\n  return new Promise((resolve, reject) => {\n    const webHookURL = `${process.env.BASE_URL}/v1/songRequests/complete/${spotifyID}`;\n    youtubeAudioProcessor.requestAudio({ youTubeIDs, spotifyID, webHookURL }).then(() => {\n      scheduleAudioDownloadCheck({ spotifyID });\n      resolve();\n    }).catch(err => reject(err));\n  });\n}\n\nfunction requestReplacementAudioForSong({ youTubeID, songID }) {\n  const webHookURL = `${process.env.BASE_URL}/v1/songs/${songID}/replaceAudio`;\n  return youtubeAudioProcessor.requestAudio({ webHookURL, youTubeIDs: [youTubeID] });\n}\n\nfunction completeReplaceAudioForSong({ key, songID }) {\n  return new Promise((resolve, reject) => {\n    Song.findOneAndUpdate({ _id: songID }, { $set: { key } }, { new: true }).then(updatedSong => resolve(updatedSong)).catch(err => reject(err));\n  });\n}\n\n// waits and marks the status as AUDIO_DOWNLOAD_TIMED_OUT if it has not\n// returned after waitTimeMS\nfunction scheduleAudioDownloadCheck({ spotifyID, waitTimeMS }) {\n  var waitTimeMS = waitTimeMS || 1000 * 60; // default 1 min\n  setTimeout(() => {\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => {\n      if (songRequest.status == status.DOWNLOADING_AUDIO) {\n        db.updateSongRequestWithID(songRequest.id, { status: status.AUDIO_DOWNLOAD_TIMED_OUT,\n          is_processing: false }).catch(err => console.log(err));\n      }\n    });\n  }, waitTimeMS);\n}\n\nfunction completeSongAcquisition({ spotifyID, key }) {\n  return new Promise((resolve, reject) => {\n    function finish(err, data) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      services.song.publish(events.SONG_CREATED, data);\n      return resolve(data);\n    }\n\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => {\n      // IF a song already exists, just updated the\n      // key -- this is to avoid duplicates in race condition\n      Song.findOne({ 'spotifyInfo.id': spotifyID }).then(foundSong => {\n        if (foundSong) {\n          foundSong.key = key;\n          Promise.all([db.updateSongRequestWithID(songRequest.id, { song_id: foundSong.id }), foundSong.save()]).then(results => resolve(_extends({}, results[0], { song: foundSong }))).catch(err => reject(err));\n        } else {\n          var song = Song.newFromSpotifyInfo(songRequest.spotify_info);\n          song.key = key;\n          song.save(err => {\n            if (err) return finish(err);\n            db.updateSongRequestWithID(songRequest.id, { status: status.COMPLETED,\n              completed: 'now()',\n              song_id: song.id,\n              is_processing: false }).then(savedSongRequest => finish(null, _extends({ song: song\n            }, savedSongRequest))).catch(err => finish(err));\n          });\n        }\n      }).catch(err => finish(err));\n    }).catch(err => finish(err));\n  });\n}\n\nfunction getSongRequestsMatchingQueryString(queryString) {\n  // allow statuses to be queried by their KEY\n  if (Object.keys(status).includes(queryString)) {\n    queryString = status[queryString];\n  }\n  return db.getSongRequestsMatchingQuery(queryString);\n}\n\nmodule.exports = {\n  getOrCreateSongRequest,\n  createSongRequest,\n  requestAudioForSongRequest,\n  requestReplacementAudioForSong,\n  completeReplaceAudioForSong,\n  completeSongAcquisition,\n  getSongRequestsMatchingQueryString\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.js"
      ],
      "names": [
        "spotify",
        "require",
        "Song",
        "AWS",
        "services",
        "events",
        "db",
        "errors",
        "status",
        "youTubeAudioProcessor",
        "getOrCreateSongRequest",
        "spotifyID",
        "Promise",
        "resolve",
        "reject",
        "getSongRequestWithSpotifyID",
        "then",
        "songRequest",
        "catch",
        "err",
        "message",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "findOne",
        "song",
        "console",
        "log",
        "rject",
        "createSongRequest",
        "spotify_id",
        "COMPLETED",
        "is_processing",
        "song_id",
        "id",
        "createdRequest",
        "newRequest",
        "finish",
        "publish",
        "SONGREQUEST_CREATED",
        "GETTING_SPOTIFY_INFO",
        "requestAudioForSongRequest",
        "youTubeIDs",
        "webHookURL",
        "process",
        "env",
        "BASE_URL",
        "youtubeAudioProcessor",
        "requestAudio",
        "scheduleAudioDownloadCheck",
        "requestReplacementAudioForSong",
        "youTubeID",
        "songID",
        "completeReplaceAudioForSong",
        "key",
        "findOneAndUpdate",
        "_id",
        "$set",
        "new",
        "updatedSong",
        "waitTimeMS",
        "setTimeout",
        "DOWNLOADING_AUDIO",
        "updateSongRequestWithID",
        "AUDIO_DOWNLOAD_TIMED_OUT",
        "completeSongAcquisition",
        "data",
        "SONG_CREATED",
        "foundSong",
        "all",
        "save",
        "results",
        "newFromSpotifyInfo",
        "spotify_info",
        "completed",
        "savedSongRequest",
        "getSongRequestsMatchingQueryString",
        "queryString",
        "Object",
        "keys",
        "includes",
        "getSongRequestsMatchingQuery",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "lib.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "const spotify = require('./services/spotify')\nconst Song = require('./mongoose/song')\nconst AWS = require('aws-sdk')\nconst services = require('./services')\nconst events = require('./events')\nconst db = require('./db')\nconst errors = require('./errors')\nconst status = require('./status')\n\nconst youTubeAudioProcessor = require('./services/youTubeAudioProcessor')\n\nfunction getOrCreateSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    // first search songRequest\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => resolve(songRequest))\n      .catch(err => {\n        if (err.message !== errors.SONG_REQUEST_DOES_NOT_EXIST) return reject(err)\n        // check if song already exists\n        Song.findOne({ 'spotifyInfo.id': spotifyID }, function (err, song) {\n          if (err) {\n            console.log(err)\n            return rject(err)\n          }\n          // IF the song already exists, create a completed songRequest with it\n          // and resolve with it\n          if (song) {\n            db.createSongRequest({ spotify_id: spotifyID, status: status.COMPLETED, is_processing: false, song_id: song.id })\n              .then(createdRequest => resolve({ ...createdRequest, song })) \n              .catch(err => reject(err))\n          } else {\n            createSongRequest(spotifyID)\n              .then(newRequest => resolve(newRequest))\n              .catch(err => reject(err))\n          }\n        })\n      })\n  })\n}\n\nfunction createSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    function finish(songRequest) {\n      services.songRequest.publish(\n          events.SONGREQUEST_CREATED,\n          songRequest\n        )\n      resolve(songRequest)\n    }\n\n    db.createSongRequest({ spotify_id: spotifyID, status: status.GETTING_SPOTIFY_INFO, is_processing: true })\n      .then(createdRequest => finish(createdRequest))\n      .catch(err => reject(err))\n  })\n}\n\nfunction requestAudioForSongRequest({ youTubeIDs, spotifyID }) {\n  return new Promise((resolve, reject) => {\n    const webHookURL = `${process.env.BASE_URL}/v1/songRequests/complete/${spotifyID}`\n    youtubeAudioProcessor.requestAudio({ youTubeIDs, spotifyID, webHookURL })\n      .then(() => { \n        scheduleAudioDownloadCheck({ spotifyID })\n        resolve()\n      })\n      .catch(err => reject(err))\n  })\n}\n\nfunction requestReplacementAudioForSong({ youTubeID, songID }) {\n  const webHookURL = `${process.env.BASE_URL}/v1/songs/${songID}/replaceAudio`\n  return youtubeAudioProcessor.requestAudio({ webHookURL, youTubeIDs: [youTubeID] })\n}\n\nfunction completeReplaceAudioForSong({ key, songID }) {\n  return new Promise((resolve, reject) => {\n    Song.findOneAndUpdate({ _id: songID }, { $set: { key } },{ new: true })\n      .then(updatedSong => resolve(updatedSong))\n      .catch(err => reject(err))\n  })\n}\n\n// waits and marks the status as AUDIO_DOWNLOAD_TIMED_OUT if it has not\n// returned after waitTimeMS\nfunction scheduleAudioDownloadCheck({ spotifyID, waitTimeMS }) {\n  var waitTimeMS = waitTimeMS || 1000*60    // default 1 min\n  setTimeout(() => {\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => {\n        if (songRequest.status == status.DOWNLOADING_AUDIO) {\n          db.updateSongRequestWithID(songRequest.id, { status: status.AUDIO_DOWNLOAD_TIMED_OUT,\n                                                       is_processing: false })\n            .catch(err => console.log(err))\n        }\n      })\n  }, waitTimeMS)\n}\n\nfunction completeSongAcquisition({ spotifyID, key }) {\n  return new Promise((resolve, reject) => {\n    function finish(err, data) {\n      if (err) { \n        console.log(err)\n       return reject(err)\n      }\n      services.song.publish(\n        events.SONG_CREATED,\n        data\n      )\n      return resolve(data)\n    }\n\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => {\n        // IF a song already exists, just updated the\n        // key -- this is to avoid duplicates in race condition\n        Song.findOne({ 'spotifyInfo.id': spotifyID })\n            .then(foundSong => {\n              if (foundSong) {\n                foundSong.key = key\n                Promise.all([db.updateSongRequestWithID(songRequest.id, { song_id: foundSong.id }),\n                             foundSong.save() ])\n                  .then((results) => resolve({ ...results[0], \n                                               ...{ song: foundSong }\n                                            })\n                  )\n                  .catch(err => reject(err))\n              } else {\n                var song = Song.newFromSpotifyInfo(songRequest.spotify_info)\n                song.key = key\n                song.save((err) => {\n                  if (err) return finish(err)\n                  db.updateSongRequestWithID(songRequest.id, { status: status.COMPLETED,\n                                                               completed: 'now()',\n                                                               song_id: song.id,\n                                                               is_processing: false })\n                    .then((savedSongRequest) => finish(null, { song: song,\n                                                               ...savedSongRequest }))\n                    .catch(err => finish(err))\n                })\n              }\n            })\n            .catch(err => finish(err))\n      })\n      .catch(err => finish(err))\n  })\n}\n\nfunction getSongRequestsMatchingQueryString(queryString) {\n  // allow statuses to be queried by their KEY\n  if (Object.keys(status).includes(queryString)) {\n    queryString = status[queryString]\n  }\n  return db.getSongRequestsMatchingQuery(queryString)\n}\n\nmodule.exports = { \n  getOrCreateSongRequest,\n  createSongRequest,\n  requestAudioForSongRequest,\n  requestReplacementAudioForSong,\n  completeReplaceAudioForSong,\n  completeSongAcquisition,\n  getSongRequestsMatchingQueryString\n}\n"
      ]
    },
    "mtime": 1523759086000
  },
  "{\"filename\":\"/home/playola/lib/services/spotify.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/spotify.js",
      "filenameRelative": "/home/playola/lib/services/spotify.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "spotify.js",
      "sourceFileName": "spotify.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "spotify"
    },
    "ignored": false,
    "code": "const axios = require('axios');\nconst api = axios.create({\n  baseURL: process.env.SERVICE_BASE_URL_SPOTIFY_INTERFACE\n});\nconst { httpErrorFromAPIError } = require('./utils');\n\nfunction getSongWithID(spotifyID) {\n  return new Promise((resolve, reject) => {\n    api.get(`/songs/${spotifyID}`).then(res => resolve(res.data)).catch(err => {\n      if (err.statusCode && err.statusCode == 503) {\n        getSongWithID(spotifyID).then(data => resolve(data)).catch(err => reject(err));\n      } else {\n        reject(httpErrorFromAPIError(err));\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  getSongWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwb3RpZnkuanMiXSwibmFtZXMiOlsiYXhpb3MiLCJyZXF1aXJlIiwiYXBpIiwiY3JlYXRlIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX0JBU0VfVVJMX1NQT1RJRllfSU5URVJGQUNFIiwiaHR0cEVycm9yRnJvbUFQSUVycm9yIiwiZ2V0U29uZ1dpdGhJRCIsInNwb3RpZnlJRCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZ2V0IiwidGhlbiIsInJlcyIsImRhdGEiLCJjYXRjaCIsImVyciIsInN0YXR1c0NvZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLE1BQU1GLE1BQU1HLE1BQU4sQ0FBYTtBQUN2QkMsV0FBU0MsUUFBUUMsR0FBUixDQUFZQztBQURFLENBQWIsQ0FBWjtBQUdBLE1BQU0sRUFBRUMscUJBQUYsS0FBNEJQLFFBQVEsU0FBUixDQUFsQzs7QUFFQSxTQUFTUSxhQUFULENBQXVCQyxTQUF2QixFQUFrQztBQUNoQyxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENYLFFBQUlZLEdBQUosQ0FBUyxVQUFTSixTQUFVLEVBQTVCLEVBQ0dLLElBREgsQ0FDUUMsT0FBT0osUUFBUUksSUFBSUMsSUFBWixDQURmLEVBRUdDLEtBRkgsQ0FFU0MsT0FBTztBQUNaLFVBQUlBLElBQUlDLFVBQUosSUFBbUJELElBQUlDLFVBQUosSUFBa0IsR0FBekMsRUFBK0M7QUFDN0NYLHNCQUFjQyxTQUFkLEVBQ0dLLElBREgsQ0FDUUUsUUFBUUwsUUFBUUssSUFBUixDQURoQixFQUVHQyxLQUZILENBRVNDLE9BQU9OLE9BQU9NLEdBQVAsQ0FGaEI7QUFHRCxPQUpELE1BSU87QUFDTE4sZUFBT0wsc0JBQXNCVyxHQUF0QixDQUFQO0FBQ0Q7QUFDRixLQVZIO0FBV0QsR0FaTSxDQUFQO0FBYUQ7O0FBRURFLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmI7QUFEZSxDQUFqQiIsImZpbGUiOiJzcG90aWZ5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpXG5jb25zdCBhcGkgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOiBwcm9jZXNzLmVudi5TRVJWSUNFX0JBU0VfVVJMX1NQT1RJRllfSU5URVJGQUNFXG59KVxuY29uc3QgeyBodHRwRXJyb3JGcm9tQVBJRXJyb3IgfSA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5mdW5jdGlvbiBnZXRTb25nV2l0aElEKHNwb3RpZnlJRCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGFwaS5nZXQoYC9zb25ncy8ke3Nwb3RpZnlJRH1gKVxuICAgICAgLnRoZW4ocmVzID0+IHJlc29sdmUocmVzLmRhdGEpKVxuICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIGlmIChlcnIuc3RhdHVzQ29kZSAmJiAoZXJyLnN0YXR1c0NvZGUgPT0gNTAzKSkge1xuICAgICAgICAgIGdldFNvbmdXaXRoSUQoc3BvdGlmeUlEKVxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiByZXNvbHZlKGRhdGEpKVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiByZWplY3QoZXJyKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QoaHR0cEVycm9yRnJvbUFQSUVycm9yKGVycikpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRTb25nV2l0aElEXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "spotify.js"
      ],
      "names": [
        "axios",
        "require",
        "api",
        "create",
        "baseURL",
        "process",
        "env",
        "SERVICE_BASE_URL_SPOTIFY_INTERFACE",
        "httpErrorFromAPIError",
        "getSongWithID",
        "spotifyID",
        "Promise",
        "resolve",
        "reject",
        "get",
        "then",
        "res",
        "data",
        "catch",
        "err",
        "statusCode",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,MAAMF,MAAMG,MAAN,CAAa;AACvBC,WAASC,QAAQC,GAAR,CAAYC;AADE,CAAb,CAAZ;AAGA,MAAM,EAAEC,qBAAF,KAA4BP,QAAQ,SAAR,CAAlC;;AAEA,SAASQ,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,QAAIY,GAAJ,CAAS,UAASJ,SAAU,EAA5B,EACGK,IADH,CACQC,OAAOJ,QAAQI,IAAIC,IAAZ,CADf,EAEGC,KAFH,CAESC,OAAO;AACZ,UAAIA,IAAIC,UAAJ,IAAmBD,IAAIC,UAAJ,IAAkB,GAAzC,EAA+C;AAC7CX,sBAAcC,SAAd,EACGK,IADH,CACQE,QAAQL,QAAQK,IAAR,CADhB,EAEGC,KAFH,CAESC,OAAON,OAAOM,GAAP,CAFhB;AAGD,OAJD,MAIO;AACLN,eAAOL,sBAAsBW,GAAtB,CAAP;AACD;AACF,KAVH;AAWD,GAZM,CAAP;AAaD;;AAEDE,OAAOC,OAAP,GAAiB;AACfb;AADe,CAAjB",
      "file": "spotify.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const axios = require('axios')\nconst api = axios.create({\n  baseURL: process.env.SERVICE_BASE_URL_SPOTIFY_INTERFACE\n})\nconst { httpErrorFromAPIError } = require('./utils')\n\nfunction getSongWithID(spotifyID) {\n  return new Promise((resolve, reject) => {\n    api.get(`/songs/${spotifyID}`)\n      .then(res => resolve(res.data))\n      .catch(err => {\n        if (err.statusCode && (err.statusCode == 503)) {\n          getSongWithID(spotifyID)\n            .then(data => resolve(data))\n            .catch(err => reject(err))\n        } else {\n          reject(httpErrorFromAPIError(err))\n        }\n      })\n  })\n}\n\nmodule.exports = {\n  getSongWithID\n}"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/services/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/utils.js",
      "filenameRelative": "/home/playola/lib/services/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const HttpError = require('../models/HttpError');\n\nfunction httpErrorFromAPIError(error) {\n  console.log('error: ', error);\n  const res = error.response;\n  return new HttpError(res.status, res.data.message);\n}\n\nmodule.exports = {\n  httpErrorFromAPIError\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbIkh0dHBFcnJvciIsInJlcXVpcmUiLCJodHRwRXJyb3JGcm9tQVBJRXJyb3IiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJyZXMiLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsWUFBWUMsUUFBUSxxQkFBUixDQUFsQjs7QUFFQSxTQUFTQyxxQkFBVCxDQUErQkMsS0FBL0IsRUFBc0M7QUFDcENDLFVBQVFDLEdBQVIsQ0FBWSxTQUFaLEVBQXVCRixLQUF2QjtBQUNBLFFBQU1HLE1BQU1ILE1BQU1JLFFBQWxCO0FBQ0EsU0FBTyxJQUFJUCxTQUFKLENBQWNNLElBQUlFLE1BQWxCLEVBQTBCRixJQUFJRyxJQUFKLENBQVNDLE9BQW5DLENBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmVjtBQURlLENBQWpCIiwiZmlsZSI6InV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSHR0cEVycm9yID0gcmVxdWlyZSgnLi4vbW9kZWxzL0h0dHBFcnJvcicpXG5cbmZ1bmN0aW9uIGh0dHBFcnJvckZyb21BUElFcnJvcihlcnJvcikge1xuICBjb25zb2xlLmxvZygnZXJyb3I6ICcsIGVycm9yKVxuICBjb25zdCByZXMgPSBlcnJvci5yZXNwb25zZVxuICByZXR1cm4gbmV3IEh0dHBFcnJvcihyZXMuc3RhdHVzLCByZXMuZGF0YS5tZXNzYWdlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaHR0cEVycm9yRnJvbUFQSUVycm9yXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "HttpError",
        "require",
        "httpErrorFromAPIError",
        "error",
        "console",
        "log",
        "res",
        "response",
        "status",
        "data",
        "message",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,qBAAR,CAAlB;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpCC,UAAQC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,QAAMG,MAAMH,MAAMI,QAAlB;AACA,SAAO,IAAIP,SAAJ,CAAcM,IAAIE,MAAlB,EAA0BF,IAAIG,IAAJ,CAASC,OAAnC,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiB;AACfV;AADe,CAAjB",
      "file": "utils.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const HttpError = require('../models/HttpError')\n\nfunction httpErrorFromAPIError(error) {\n  console.log('error: ', error)\n  const res = error.response\n  return new HttpError(res.status, res.data.message)\n}\n\nmodule.exports = {\n  httpErrorFromAPIError\n}"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/models/HttpError.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/models/HttpError.js",
      "filenameRelative": "/home/playola/lib/models/HttpError.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "HttpError.js",
      "sourceFileName": "HttpError.js",
      "sourceRoot": "/home/playola/lib/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "HttpError"
    },
    "ignored": false,
    "code": "class HttpError {\n  static get defaults() {\n    return {\n      statusCode: 400,\n      message: \"An unknown error occurred\"\n    };\n  }\n\n  constructor(statusCode, message) {\n    this.error = new Error(message);\n    this.message = message || HttpError.defaults.message;\n    this.statusCode = statusCode || HttpError.defaults.statusCode;\n  }\n}\n\nmodule.exports = HttpError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkh0dHBFcnJvci5qcyJdLCJuYW1lcyI6WyJIdHRwRXJyb3IiLCJkZWZhdWx0cyIsInN0YXR1c0NvZGUiLCJtZXNzYWdlIiwiY29uc3RydWN0b3IiLCJlcnJvciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBTixDQUFnQjtBQUNkLGFBQVdDLFFBQVgsR0FBc0I7QUFDcEIsV0FBTztBQUNMQyxrQkFBWSxHQURQO0FBRUxDLGVBQVM7QUFGSixLQUFQO0FBSUQ7O0FBRURDLGNBQVlGLFVBQVosRUFBd0JDLE9BQXhCLEVBQWlDO0FBQy9CLFNBQUtFLEtBQUwsR0FBYSxJQUFJQyxLQUFKLENBQVVILE9BQVYsQ0FBYjtBQUNBLFNBQUtBLE9BQUwsR0FBZUEsV0FBV0gsVUFBVUMsUUFBVixDQUFtQkUsT0FBN0M7QUFDQSxTQUFLRCxVQUFMLEdBQWtCQSxjQUFjRixVQUFVQyxRQUFWLENBQW1CQyxVQUFuRDtBQUNEO0FBWmE7O0FBZWhCSyxPQUFPQyxPQUFQLEdBQWlCUixTQUFqQiIsImZpbGUiOiJIdHRwRXJyb3IuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSHR0cEVycm9yIHtcbiAgc3RhdGljIGdldCBkZWZhdWx0cygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzQ29kZTogNDAwLFxuICAgICAgbWVzc2FnZTogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkXCJcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCBtZXNzYWdlKSB7XG4gICAgdGhpcy5lcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKVxuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgSHR0cEVycm9yLmRlZmF1bHRzLm1lc3NhZ2VcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlIHx8IEh0dHBFcnJvci5kZWZhdWx0cy5zdGF0dXNDb2RlXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIdHRwRXJyb3IiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "HttpError.js"
      ],
      "names": [
        "HttpError",
        "defaults",
        "statusCode",
        "message",
        "constructor",
        "error",
        "Error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAN,CAAgB;AACd,aAAWC,QAAX,GAAsB;AACpB,WAAO;AACLC,kBAAY,GADP;AAELC,eAAS;AAFJ,KAAP;AAID;;AAEDC,cAAYF,UAAZ,EAAwBC,OAAxB,EAAiC;AAC/B,SAAKE,KAAL,GAAa,IAAIC,KAAJ,CAAUH,OAAV,CAAb;AACA,SAAKA,OAAL,GAAeA,WAAWH,UAAUC,QAAV,CAAmBE,OAA7C;AACA,SAAKD,UAAL,GAAkBA,cAAcF,UAAUC,QAAV,CAAmBC,UAAnD;AACD;AAZa;;AAehBK,OAAOC,OAAP,GAAiBR,SAAjB",
      "file": "HttpError.js",
      "sourceRoot": "/home/playola/lib/models",
      "sourcesContent": [
        "class HttpError {\n  static get defaults() {\n    return {\n      statusCode: 400,\n      message: \"An unknown error occurred\"\n    }\n  }\n\n  constructor(statusCode, message) {\n    this.error = new Error(message)\n    this.message = message || HttpError.defaults.message\n    this.statusCode = statusCode || HttpError.defaults.statusCode\n  }\n}\n\nmodule.exports = HttpError"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/song.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "song.model.js",
      "sourceFileName": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "song.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst AudioBlockSchema = require('./audioBlock.schema');\nconst AudioBlock = require('./audioBlock.model');\n\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst _ = require('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags: {},\n  artist: { type: String },\n  artistID: { type: Schema.ObjectId, ref: 'Artist' },\n  title: { type: String },\n  album: { type: String },\n  albumArtworkUrl: { type: String },\n  albumArtworkUrlSmall: { type: String },\n  trackViewUrl: { type: String },\n  _eoi: { type: Number },\n  _eom: { type: Number },\n  _boo: { type: Number },\n  itunesTrackID: { type: String },\n  spotifyID: { type: String },\n  spotifyInfo: {},\n  itunesInfo: {},\n  verified: { type: Boolean },\n  explicit: { type: Boolean },\n  isrc: { type: String }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n        __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      };\n    }\n  }\n});\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"];\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n};\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom').get(function () {\n  if (!this._eom) {\n    return this.duration - 1000;\n  } else {\n    return this._eom;\n  }\n}).set(function (value) {\n  this._eom = value;\n});\n\nsongSchema.virtual('eoi').get(function () {\n  if (!this._eoi) {\n    return 0;\n  } else {\n    return this._eoi;\n  }\n}).set(function (value) {\n  this._eoi = value;\n});\n\nsongSchema.virtual('boo').get(function () {\n  if (!this._boo) {\n    return this.eom;\n  } else {\n    return this._boo;\n  }\n}).set(function (value) {\n  this._boo = value;\n});\n\nsongSchema.statics.getSpotifyIDs = function (limit = 1000) {\n  return new Promise((resolve, reject) => {\n    Song.find({ 'spotifyInfo.id': { $exists: true } }).limit(limit).exec(function (err, foundSongs) {\n      if (err) return reject(err);\n      return resolve(foundSongs.map(song => song.spotifyInfo.id));\n    });\n  });\n};\n\nconst Song = AudioBlock.discriminator('Song', songSchema);\nmodule.exports = Song;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "song.model.js"
      ],
      "names": [
        "AudioBlockSchema",
        "require",
        "AudioBlock",
        "mongoose",
        "Schema",
        "_",
        "songSchema",
        "originalTags",
        "artist",
        "type",
        "String",
        "artistID",
        "ObjectId",
        "ref",
        "title",
        "album",
        "albumArtworkUrl",
        "albumArtworkUrlSmall",
        "trackViewUrl",
        "_eoi",
        "Number",
        "_eom",
        "_boo",
        "itunesTrackID",
        "spotifyID",
        "spotifyInfo",
        "itunesInfo",
        "verified",
        "Boolean",
        "explicit",
        "isrc",
        "toObject",
        "virtuals",
        "transform",
        "doc",
        "ret",
        "options",
        "id",
        "key",
        "duration",
        "__t",
        "eoi",
        "eom",
        "boo",
        "audioFileUrl",
        "lastFMTags",
        "status",
        "statics",
        "newFromSpotifyInfo",
        "length",
        "Error",
        "song",
        "Song",
        "virtual",
        "get",
        "set",
        "value",
        "getSpotifyIDs",
        "limit",
        "Promise",
        "resolve",
        "reject",
        "find",
        "$exists",
        "exec",
        "err",
        "foundSongs",
        "map",
        "discriminator",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "sourcesContent": [
        "'use strict';\n\nconst AudioBlockSchema  =     require('./audioBlock.schema');\nconst AudioBlock        =     require('./audioBlock.model');\n\nconst mongoose          =     require('mongoose');\nconst Schema            =     mongoose.Schema;\nconst _                 =     require ('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags:           {},\n  artist:                 { type: String  },\n  artistID:               { type: Schema.ObjectId, ref: 'Artist' },\n  title:                  { type: String  },\n  album:                  { type: String  },\n  albumArtworkUrl:        { type: String  },\n  albumArtworkUrlSmall:   { type: String  },\n  trackViewUrl:           { type: String  },\n  _eoi:                   { type: Number  },\n  _eom:                   { type: Number  },\n  _boo:                   { type: Number  },\n  itunesTrackID:          { type: String  },\n  spotifyID:              { type: String  },\n  spotifyInfo:            {},\n  itunesInfo:             {},\n  verified:               { type: Boolean },\n  explicit:               { type: Boolean },\n  isrc:                   { type: String  }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n         __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      }\n    }\n  }\n})\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"]\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n}\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom')\n  .get(function () {\n    if (!this._eom) {\n      return this.duration - 1000;\n    } else {\n      return this._eom;\n    }\n  })\n  .set(function (value) {\n    this._eom = value;\n  })\n\nsongSchema.virtual('eoi')\n  .get(function () {\n    if (!this._eoi) {\n      return 0;\n    } else {\n      return this._eoi;\n    }\n  })\n  .set(function (value) {\n    this._eoi = value;\n  })\n\nsongSchema.virtual('boo')\n  .get(function () {\n    if (!this._boo) {\n      return this.eom;\n    } else {\n      return this._boo;\n    }\n  })\n  .set(function (value) {\n    this._boo = value;\n  })\n\n\nsongSchema.statics.getSpotifyIDs = function (limit=1000) {\n  return new Promise((resolve, reject) => {\n    Song\n      .find({ 'spotifyInfo.id': { $exists: true }})\n      .limit(limit)\n      .exec(function (err, foundSongs) {\n        if (err) return reject(err)\n        return resolve(foundSongs.map(song => song.spotifyInfo.id))\n      })\n  })\n}\n\nconst Song = AudioBlock.discriminator('Song', songSchema)\nmodule.exports = Song\n"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/audioBlock.schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/audioBlock.schema.js",
      "filenameRelative": "/home/playola/lib/mongoose/audioBlock.schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.schema.js",
      "sourceFileName": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type: { type: String },\n    key: { type: String },\n    duration: { type: Number }\n  });\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2suc2NoZW1hLmpzIl0sIm5hbWVzIjpbInV0aWwiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJBdWRpb0Jsb2NrU2NoZW1hIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJhZGQiLCJ0eXBlIiwiU3RyaW5nIiwia2V5IiwiZHVyYXRpb24iLCJOdW1iZXIiLCJpbmhlcml0cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLE9BQU9DLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUMsV0FBV0QsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJRSxTQUFTRCxTQUFTQyxNQUR0Qjs7QUFHQSxTQUFTQyxnQkFBVCxHQUE0QjtBQUMxQkQsU0FBT0UsS0FBUCxDQUFhLElBQWIsRUFBbUJDLFNBQW5COztBQUVBLE9BQUtDLEdBQUwsQ0FBUztBQUNQQyxVQUFvQixFQUFFQSxNQUFNQyxNQUFSLEVBRGI7QUFFUEMsU0FBb0IsRUFBRUYsTUFBTUMsTUFBUixFQUZiO0FBR1BFLGNBQW9CLEVBQUVILE1BQU1JLE1BQVI7QUFIYixHQUFUO0FBT0Q7QUFDRFosS0FBS2EsUUFBTCxDQUFjVCxnQkFBZCxFQUFnQ0QsTUFBaEM7O0FBRUFXLE9BQU9DLE9BQVAsR0FBaUJYLGdCQUFqQiIsImZpbGUiOiJhdWRpb0Jsb2NrLnNjaGVtYS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpLFxuICAgIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxuZnVuY3Rpb24gQXVkaW9CbG9ja1NjaGVtYSgpIHtcbiAgU2NoZW1hLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgdGhpcy5hZGQoe1xuICAgIHR5cGU6ICAgICAgICAgICAgICAgeyB0eXBlOiBTdHJpbmcgfSxcbiAgICBrZXk6ICAgICAgICAgICAgICAgIHsgdHlwZTogU3RyaW5nIH0sXG4gICAgZHVyYXRpb246ICAgICAgICAgICB7IHR5cGU6IE51bWJlciB9XG4gIH0pO1xuXG5cbn1cbnV0aWwuaW5oZXJpdHMoQXVkaW9CbG9ja1NjaGVtYSwgU2NoZW1hKTtcblxubW9kdWxlLmV4cG9ydHMgPSBBdWRpb0Jsb2NrU2NoZW1hIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.schema.js"
      ],
      "names": [
        "util",
        "require",
        "mongoose",
        "Schema",
        "AudioBlockSchema",
        "apply",
        "arguments",
        "add",
        "type",
        "String",
        "key",
        "duration",
        "Number",
        "inherits",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AAAA,IACIE,SAASD,SAASC,MADtB;;AAGA,SAASC,gBAAT,GAA4B;AAC1BD,SAAOE,KAAP,CAAa,IAAb,EAAmBC,SAAnB;;AAEA,OAAKC,GAAL,CAAS;AACPC,UAAoB,EAAEA,MAAMC,MAAR,EADb;AAEPC,SAAoB,EAAEF,MAAMC,MAAR,EAFb;AAGPE,cAAoB,EAAEH,MAAMI,MAAR;AAHb,GAAT;AAOD;AACDZ,KAAKa,QAAL,CAAcT,gBAAd,EAAgCD,MAAhC;;AAEAW,OAAOC,OAAP,GAAiBX,gBAAjB",
      "file": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "sourcesContent": [
        "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type:               { type: String },\n    key:                { type: String },\n    duration:           { type: Number }\n  });\n\n\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/audioBlock.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/audioBlock.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/audioBlock.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.model.js",
      "sourceFileName": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n    _type: { type: String } }, { collection: 'audioBlocks' });\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({ \"__t\": 1, \"_id\": 1 });\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2subW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiQXVkaW9CbG9ja1NjaGVtYSIsInRpbWVzdGFtcHMiLCJNb2RlbFNjaGVtYSIsIl9fdCIsInR5cGUiLCJTdHJpbmciLCJpbmRleCIsIl90eXBlIiwiY29sbGVjdGlvbiIsInBsdWdpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsV0FBV0MsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJQyxTQUFTRixTQUFTRSxNQUR0QjtBQUVBLElBQUlDLG1CQUFtQkYsUUFBUSxxQkFBUixDQUF2QjtBQUNBLElBQUlHLGFBQWFILFFBQVEsb0JBQVIsQ0FBakI7QUFDQSxJQUFJSSxjQUFjLElBQUlGLGdCQUFKLENBQXFCLEVBQUVHLEtBQUssRUFBRUMsTUFBTUMsTUFBUixFQUFnQkMsT0FBTyxJQUF2QixFQUFQO0FBQ0NDLFdBQU8sRUFBRUgsTUFBTUMsTUFBUixFQURSLEVBQXJCLEVBRWhCLEVBQUVHLFlBQVksYUFBZCxFQUZnQixDQUFsQjs7QUFLQU4sWUFBWU8sTUFBWixDQUFtQlIsVUFBbkI7O0FBRUFDLFlBQVlJLEtBQVosQ0FBa0IsRUFBQyxPQUFPLENBQVIsRUFBVyxPQUFPLENBQWxCLEVBQWxCOztBQUVBSSxPQUFPQyxPQUFQLEdBQWlCZCxTQUFTZSxLQUFULENBQWUsWUFBZixFQUE2QlYsV0FBN0IsQ0FBakIiLCJmaWxlIjoiYXVkaW9CbG9jay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKSxcbiAgICBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG52YXIgQXVkaW9CbG9ja1NjaGVtYSA9IHJlcXVpcmUoJy4vYXVkaW9CbG9jay5zY2hlbWEnKTtcbnZhciB0aW1lc3RhbXBzID0gcmVxdWlyZSgnbW9uZ29vc2UtdGltZXN0YW1wJyk7XG52YXIgTW9kZWxTY2hlbWEgPSBuZXcgQXVkaW9CbG9ja1NjaGVtYSh7IF9fdDogeyB0eXBlOiBTdHJpbmcsIGluZGV4OiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3R5cGU6IHsgdHlwZTogU3RyaW5nIH0gfSxcbiAgeyBjb2xsZWN0aW9uOiAnYXVkaW9CbG9ja3MnIH1cbik7XG5cbk1vZGVsU2NoZW1hLnBsdWdpbih0aW1lc3RhbXBzKTtcblxuTW9kZWxTY2hlbWEuaW5kZXgoe1wiX190XCI6IDEsIFwiX2lkXCI6IDF9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQXVkaW9CbG9jaycsIE1vZGVsU2NoZW1hKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "AudioBlockSchema",
        "timestamps",
        "ModelSchema",
        "__t",
        "type",
        "String",
        "index",
        "_type",
        "collection",
        "plugin",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AAAA,IACIC,SAASF,SAASE,MADtB;AAEA,IAAIC,mBAAmBF,QAAQ,qBAAR,CAAvB;AACA,IAAIG,aAAaH,QAAQ,oBAAR,CAAjB;AACA,IAAII,cAAc,IAAIF,gBAAJ,CAAqB,EAAEG,KAAK,EAAEC,MAAMC,MAAR,EAAgBC,OAAO,IAAvB,EAAP;AACCC,WAAO,EAAEH,MAAMC,MAAR,EADR,EAArB,EAEhB,EAAEG,YAAY,aAAd,EAFgB,CAAlB;;AAKAN,YAAYO,MAAZ,CAAmBR,UAAnB;;AAEAC,YAAYI,KAAZ,CAAkB,EAAC,OAAO,CAAR,EAAW,OAAO,CAAlB,EAAlB;;AAEAI,OAAOC,OAAP,GAAiBd,SAASe,KAAT,CAAe,YAAf,EAA6BV,WAA7B,CAAjB",
      "file": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose",
      "sourcesContent": [
        "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n                                        _type: { type: String } },\n  { collection: 'audioBlocks' }\n);\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({\"__t\": 1, \"_id\": 1});\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/events.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/events.js",
      "filenameRelative": "/home/playola/lib/events.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "events.js",
      "sourceFileName": "events.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "events"
    },
    "ignored": false,
    "code": "module.exports = {\n  SONGREQUEST_CREATED: 'songrequest.created',\n  SONGREQUEST_SPOTIFYINFO_RECEIVED: 'songrequest.spotifyinfo.received',\n  SONGREQUEST_SPOTIFYINFO_FAILED: 'songrequest.spotifyinfo.failed',\n  SONGREQUEST_YOUTUBEINFO_RECEIVED: 'songrequest.youtubeinfo.received',\n  SONGREQUEST_YOUTUBEINFO_FAILED: 'songrequest.youtubeinfo.failed',\n  SONG_CREATED: 'song.created'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiU09OR1JFUVVFU1RfQ1JFQVRFRCIsIlNPTkdSRVFVRVNUX1NQT1RJRllJTkZPX1JFQ0VJVkVEIiwiU09OR1JFUVVFU1RfU1BPVElGWUlORk9fRkFJTEVEIiwiU09OR1JFUVVFU1RfWU9VVFVCRUlORk9fUkVDRUlWRUQiLCJTT05HUkVRVUVTVF9ZT1VUVUJFSU5GT19GQUlMRUQiLCJTT05HX0NSRUFURUQiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLHVCQUFzQixxQkFEUDtBQUVmQyxvQ0FBbUMsa0NBRnBCO0FBR2ZDLGtDQUFpQyxnQ0FIbEI7QUFJZkMsb0NBQW1DLGtDQUpwQjtBQUtmQyxrQ0FBaUMsZ0NBTGxCO0FBTWZDLGdCQUFlO0FBTkEsQ0FBakIiLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNPTkdSRVFVRVNUX0NSRUFURUQgOiAnc29uZ3JlcXVlc3QuY3JlYXRlZCcsXG4gIFNPTkdSRVFVRVNUX1NQT1RJRllJTkZPX1JFQ0VJVkVEIDogJ3NvbmdyZXF1ZXN0LnNwb3RpZnlpbmZvLnJlY2VpdmVkJyxcbiAgU09OR1JFUVVFU1RfU1BPVElGWUlORk9fRkFJTEVEIDogJ3NvbmdyZXF1ZXN0LnNwb3RpZnlpbmZvLmZhaWxlZCcsXG4gIFNPTkdSRVFVRVNUX1lPVVRVQkVJTkZPX1JFQ0VJVkVEIDogJ3NvbmdyZXF1ZXN0LnlvdXR1YmVpbmZvLnJlY2VpdmVkJyxcbiAgU09OR1JFUVVFU1RfWU9VVFVCRUlORk9fRkFJTEVEIDogJ3NvbmdyZXF1ZXN0LnlvdXR1YmVpbmZvLmZhaWxlZCcsXG4gIFNPTkdfQ1JFQVRFRCA6ICdzb25nLmNyZWF0ZWQnXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "events.js"
      ],
      "names": [
        "module",
        "exports",
        "SONGREQUEST_CREATED",
        "SONGREQUEST_SPOTIFYINFO_RECEIVED",
        "SONGREQUEST_SPOTIFYINFO_FAILED",
        "SONGREQUEST_YOUTUBEINFO_RECEIVED",
        "SONGREQUEST_YOUTUBEINFO_FAILED",
        "SONG_CREATED"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,uBAAsB,qBADP;AAEfC,oCAAmC,kCAFpB;AAGfC,kCAAiC,gCAHlB;AAIfC,oCAAmC,kCAJpB;AAKfC,kCAAiC,gCALlB;AAMfC,gBAAe;AANA,CAAjB",
      "file": "events.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  SONGREQUEST_CREATED : 'songrequest.created',\n  SONGREQUEST_SPOTIFYINFO_RECEIVED : 'songrequest.spotifyinfo.received',\n  SONGREQUEST_SPOTIFYINFO_FAILED : 'songrequest.spotifyinfo.failed',\n  SONGREQUEST_YOUTUBEINFO_RECEIVED : 'songrequest.youtubeinfo.received',\n  SONGREQUEST_YOUTUBEINFO_FAILED : 'songrequest.youtubeinfo.failed',\n  SONG_CREATED : 'song.created'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/status.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/status.js",
      "filenameRelative": "/home/playola/lib/status.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "status.js",
      "sourceFileName": "status.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "status"
    },
    "ignored": false,
    "code": "module.exports = {\n  GETTING_SPOTIFY_INFO: `Looking up the song's info from spotify.`,\n  FAILED_TO_GET_SPOTIFY_INFO: 'There was an error retrieving the spotify info for this song',\n  GETTING_YOUTUBE_MATCHES: 'Looking up the youtube matches for this song.',\n  FAILED_TO_GET_YOUTUBE_MATCHES: 'There was an error getting the youtube matches for this song',\n\n  DOWNLOADING_AUDIO: 'The audio is being retreived',\n  FAILED_TO_DOWNLOAD_AUDIO: 'There was an error downloading the audio',\n  AUDIO_DOWNLOAD_TIMED_OUT: 'The audio download never returned',\n  MATCH_NOT_FOUND: 'The song could not be matched to the playola library',\n  PROCESSING: 'The song is being processed',\n  COMPLETED: 'The song has been processed'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXR1cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiR0VUVElOR19TUE9USUZZX0lORk8iLCJGQUlMRURfVE9fR0VUX1NQT1RJRllfSU5GTyIsIkdFVFRJTkdfWU9VVFVCRV9NQVRDSEVTIiwiRkFJTEVEX1RPX0dFVF9ZT1VUVUJFX01BVENIRVMiLCJET1dOTE9BRElOR19BVURJTyIsIkZBSUxFRF9UT19ET1dOTE9BRF9BVURJTyIsIkFVRElPX0RPV05MT0FEX1RJTUVEX09VVCIsIk1BVENIX05PVF9GT1VORCIsIlBST0NFU1NJTkciLCJDT01QTEVURUQiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLHdCQUF1QiwwQ0FEUjtBQUVmQyw4QkFBNEIsOERBRmI7QUFHZkMsMkJBQXlCLCtDQUhWO0FBSWZDLGlDQUErQiw4REFKaEI7O0FBTWZDLHFCQUFtQiw4QkFOSjtBQU9mQyw0QkFBMEIsMENBUFg7QUFRZkMsNEJBQTBCLG1DQVJYO0FBU2ZDLG1CQUFpQixzREFURjtBQVVmQyxjQUFZLDZCQVZHO0FBV2ZDLGFBQVc7QUFYSSxDQUFqQiIsImZpbGUiOiJzdGF0dXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgR0VUVElOR19TUE9USUZZX0lORk86IGBMb29raW5nIHVwIHRoZSBzb25nJ3MgaW5mbyBmcm9tIHNwb3RpZnkuYCxcbiAgRkFJTEVEX1RPX0dFVF9TUE9USUZZX0lORk86ICdUaGVyZSB3YXMgYW4gZXJyb3IgcmV0cmlldmluZyB0aGUgc3BvdGlmeSBpbmZvIGZvciB0aGlzIHNvbmcnLFxuICBHRVRUSU5HX1lPVVRVQkVfTUFUQ0hFUzogJ0xvb2tpbmcgdXAgdGhlIHlvdXR1YmUgbWF0Y2hlcyBmb3IgdGhpcyBzb25nLicsXG4gIEZBSUxFRF9UT19HRVRfWU9VVFVCRV9NQVRDSEVTOiAnVGhlcmUgd2FzIGFuIGVycm9yIGdldHRpbmcgdGhlIHlvdXR1YmUgbWF0Y2hlcyBmb3IgdGhpcyBzb25nJyxcblxuICBET1dOTE9BRElOR19BVURJTzogJ1RoZSBhdWRpbyBpcyBiZWluZyByZXRyZWl2ZWQnLFxuICBGQUlMRURfVE9fRE9XTkxPQURfQVVESU86ICdUaGVyZSB3YXMgYW4gZXJyb3IgZG93bmxvYWRpbmcgdGhlIGF1ZGlvJyxcbiAgQVVESU9fRE9XTkxPQURfVElNRURfT1VUOiAnVGhlIGF1ZGlvIGRvd25sb2FkIG5ldmVyIHJldHVybmVkJyxcbiAgTUFUQ0hfTk9UX0ZPVU5EOiAnVGhlIHNvbmcgY291bGQgbm90IGJlIG1hdGNoZWQgdG8gdGhlIHBsYXlvbGEgbGlicmFyeScsXG4gIFBST0NFU1NJTkc6ICdUaGUgc29uZyBpcyBiZWluZyBwcm9jZXNzZWQnLFxuICBDT01QTEVURUQ6ICdUaGUgc29uZyBoYXMgYmVlbiBwcm9jZXNzZWQnXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "status.js"
      ],
      "names": [
        "module",
        "exports",
        "GETTING_SPOTIFY_INFO",
        "FAILED_TO_GET_SPOTIFY_INFO",
        "GETTING_YOUTUBE_MATCHES",
        "FAILED_TO_GET_YOUTUBE_MATCHES",
        "DOWNLOADING_AUDIO",
        "FAILED_TO_DOWNLOAD_AUDIO",
        "AUDIO_DOWNLOAD_TIMED_OUT",
        "MATCH_NOT_FOUND",
        "PROCESSING",
        "COMPLETED"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,wBAAuB,0CADR;AAEfC,8BAA4B,8DAFb;AAGfC,2BAAyB,+CAHV;AAIfC,iCAA+B,8DAJhB;;AAMfC,qBAAmB,8BANJ;AAOfC,4BAA0B,0CAPX;AAQfC,4BAA0B,mCARX;AASfC,mBAAiB,sDATF;AAUfC,cAAY,6BAVG;AAWfC,aAAW;AAXI,CAAjB",
      "file": "status.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  GETTING_SPOTIFY_INFO: `Looking up the song's info from spotify.`,\n  FAILED_TO_GET_SPOTIFY_INFO: 'There was an error retrieving the spotify info for this song',\n  GETTING_YOUTUBE_MATCHES: 'Looking up the youtube matches for this song.',\n  FAILED_TO_GET_YOUTUBE_MATCHES: 'There was an error getting the youtube matches for this song',\n\n  DOWNLOADING_AUDIO: 'The audio is being retreived',\n  FAILED_TO_DOWNLOAD_AUDIO: 'There was an error downloading the audio',\n  AUDIO_DOWNLOAD_TIMED_OUT: 'The audio download never returned',\n  MATCH_NOT_FOUND: 'The song could not be matched to the playola library',\n  PROCESSING: 'The song is being processed',\n  COMPLETED: 'The song has been processed'\n}"
      ]
    },
    "mtime": 1522762030000
  },
  "{\"filename\":\"/home/playola/lib/services/youTubeAudioProcessor.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/youTubeAudioProcessor.js",
      "filenameRelative": "/home/playola/lib/services/youTubeAudioProcessor.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "youTubeAudioProcessor.js",
      "sourceFileName": "youTubeAudioProcessor.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "youTubeAudioProcessor"
    },
    "ignored": false,
    "code": "const AWS = require('aws-sdk');\n\nconst LAMBDA_FUNCTION_TO_DISPATCH = 'youtube-converter';\n\nfunction requestAudio({ youTubeIDs, webHookURL }) {\n  return new Promise((resolve, reject) => {\n    var lambda = new AWS.Lambda();\n    lambda.invoke({\n      FunctionName: LAMBDA_FUNCTION_TO_DISPATCH,\n      Payload: JSON.stringify({ youTubeIDs: youTubeIDs,\n        webHookURL: webHookURL,\n        bucketName: process.env.SONGS_BUCKET_NAME\n      }),\n      InvocationType: 'Event'\n    }, function (err, response) {\n      if (err) {\n        console.log('LABMDA ERROR!', err);\n        return reject(err);\n      }\n      if (response['StatusCode'] !== 202) {\n        reject(response);\n      } else {\n        resolve({ spotifyID: spotifyID });\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  requestAudio\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlvdVR1YmVBdWRpb1Byb2Nlc3Nvci5qcyJdLCJuYW1lcyI6WyJBV1MiLCJyZXF1aXJlIiwiTEFNQkRBX0ZVTkNUSU9OX1RPX0RJU1BBVENIIiwicmVxdWVzdEF1ZGlvIiwieW91VHViZUlEcyIsIndlYkhvb2tVUkwiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImxhbWJkYSIsIkxhbWJkYSIsImludm9rZSIsIkZ1bmN0aW9uTmFtZSIsIlBheWxvYWQiLCJKU09OIiwic3RyaW5naWZ5IiwiYnVja2V0TmFtZSIsInByb2Nlc3MiLCJlbnYiLCJTT05HU19CVUNLRVRfTkFNRSIsIkludm9jYXRpb25UeXBlIiwiZXJyIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwic3BvdGlmeUlEIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTUMsUUFBUSxTQUFSLENBQVo7O0FBRUEsTUFBTUMsOEJBQThCLG1CQUFwQzs7QUFFQSxTQUFTQyxZQUFULENBQXNCLEVBQUVDLFVBQUYsRUFBY0MsVUFBZCxFQUF0QixFQUFrRDtBQUNoRCxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsUUFBSUMsU0FBUyxJQUFJVCxJQUFJVSxNQUFSLEVBQWI7QUFDQUQsV0FBT0UsTUFBUCxDQUFjO0FBQ1pDLG9CQUFjViwyQkFERjtBQUVaVyxlQUFTQyxLQUFLQyxTQUFMLENBQWUsRUFBRVgsWUFBWUEsVUFBZDtBQUNFQyxvQkFBWUEsVUFEZDtBQUVFVyxvQkFBWUMsUUFBUUMsR0FBUixDQUFZQztBQUYxQixPQUFmLENBRkc7QUFNWkMsc0JBQWdCO0FBTkosS0FBZCxFQU9HLFVBQVVDLEdBQVYsRUFBZUMsUUFBZixFQUF5QjtBQUMxQixVQUFJRCxHQUFKLEVBQVM7QUFDUEUsZ0JBQVFDLEdBQVIsQ0FBWSxlQUFaLEVBQTZCSCxHQUE3QjtBQUNBLGVBQU9iLE9BQU9hLEdBQVAsQ0FBUDtBQUNEO0FBQ0QsVUFBSUMsU0FBUyxZQUFULE1BQTJCLEdBQS9CLEVBQW9DO0FBQ2xDZCxlQUFPYyxRQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0xmLGdCQUFRLEVBQUVrQixXQUFXQSxTQUFiLEVBQVI7QUFDRDtBQUNGLEtBakJEO0FBa0JELEdBcEJNLENBQVA7QUFxQkQ7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZnhCO0FBRGUsQ0FBakIiLCJmaWxlIjoieW91VHViZUF1ZGlvUHJvY2Vzc29yLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVdTID0gcmVxdWlyZSgnYXdzLXNkaycpXG5cbmNvbnN0IExBTUJEQV9GVU5DVElPTl9UT19ESVNQQVRDSCA9ICd5b3V0dWJlLWNvbnZlcnRlcidcblxuZnVuY3Rpb24gcmVxdWVzdEF1ZGlvKHsgeW91VHViZUlEcywgd2ViSG9va1VSTCB9KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGxhbWJkYSA9IG5ldyBBV1MuTGFtYmRhKClcbiAgICBsYW1iZGEuaW52b2tlKHtcbiAgICAgIEZ1bmN0aW9uTmFtZTogTEFNQkRBX0ZVTkNUSU9OX1RPX0RJU1BBVENILFxuICAgICAgUGF5bG9hZDogSlNPTi5zdHJpbmdpZnkoeyB5b3VUdWJlSURzOiB5b3VUdWJlSURzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWJIb29rVVJMOiB3ZWJIb29rVVJMLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWNrZXROYW1lOiBwcm9jZXNzLmVudi5TT05HU19CVUNLRVRfTkFNRVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICBJbnZvY2F0aW9uVHlwZTogJ0V2ZW50J1xuICAgIH0sIGZ1bmN0aW9uIChlcnIsIHJlc3BvbnNlKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdMQUJNREEgRVJST1IhJywgZXJyKVxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIH1cbiAgICAgIGlmIChyZXNwb25zZVsnU3RhdHVzQ29kZSddICE9PSAyMDIpIHtcbiAgICAgICAgcmVqZWN0KHJlc3BvbnNlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZSh7IHNwb3RpZnlJRDogc3BvdGlmeUlEIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlcXVlc3RBdWRpb1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "youTubeAudioProcessor.js"
      ],
      "names": [
        "AWS",
        "require",
        "LAMBDA_FUNCTION_TO_DISPATCH",
        "requestAudio",
        "youTubeIDs",
        "webHookURL",
        "Promise",
        "resolve",
        "reject",
        "lambda",
        "Lambda",
        "invoke",
        "FunctionName",
        "Payload",
        "JSON",
        "stringify",
        "bucketName",
        "process",
        "env",
        "SONGS_BUCKET_NAME",
        "InvocationType",
        "err",
        "response",
        "console",
        "log",
        "spotifyID",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,SAAR,CAAZ;;AAEA,MAAMC,8BAA8B,mBAApC;;AAEA,SAASC,YAAT,CAAsB,EAAEC,UAAF,EAAcC,UAAd,EAAtB,EAAkD;AAChD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,SAAS,IAAIT,IAAIU,MAAR,EAAb;AACAD,WAAOE,MAAP,CAAc;AACZC,oBAAcV,2BADF;AAEZW,eAASC,KAAKC,SAAL,CAAe,EAAEX,YAAYA,UAAd;AACEC,oBAAYA,UADd;AAEEW,oBAAYC,QAAQC,GAAR,CAAYC;AAF1B,OAAf,CAFG;AAMZC,sBAAgB;AANJ,KAAd,EAOG,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC1B,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAY,eAAZ,EAA6BH,GAA7B;AACA,eAAOb,OAAOa,GAAP,CAAP;AACD;AACD,UAAIC,SAAS,YAAT,MAA2B,GAA/B,EAAoC;AAClCd,eAAOc,QAAP;AACD,OAFD,MAEO;AACLf,gBAAQ,EAAEkB,WAAWA,SAAb,EAAR;AACD;AACF,KAjBD;AAkBD,GApBM,CAAP;AAqBD;;AAEDC,OAAOC,OAAP,GAAiB;AACfxB;AADe,CAAjB",
      "file": "youTubeAudioProcessor.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const AWS = require('aws-sdk')\n\nconst LAMBDA_FUNCTION_TO_DISPATCH = 'youtube-converter'\n\nfunction requestAudio({ youTubeIDs, webHookURL }) {\n  return new Promise((resolve, reject) => {\n    var lambda = new AWS.Lambda()\n    lambda.invoke({\n      FunctionName: LAMBDA_FUNCTION_TO_DISPATCH,\n      Payload: JSON.stringify({ youTubeIDs: youTubeIDs,\n                                webHookURL: webHookURL,\n                                bucketName: process.env.SONGS_BUCKET_NAME\n                              }),\n      InvocationType: 'Event'\n    }, function (err, response) {\n      if (err) {\n        console.log('LABMDA ERROR!', err)\n        return reject(err)\n      }\n      if (response['StatusCode'] !== 202) {\n        reject(response)\n      } else {\n        resolve({ spotifyID: spotifyID })\n      }\n    })\n  })\n}\n\nmodule.exports = {\n  requestAudio\n}"
      ]
    },
    "mtime": 1523741384000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/index.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "var Song = require('./song.model');\n\nmodule.exports = Song;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlNvbmciLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBT0MsUUFBUSxjQUFSLENBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJILElBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL21vbmdvb3NlL3NvbmciLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU29uZyA9IHJlcXVpcmUoJy4vc29uZy5tb2RlbCcpXG5cbm1vZHVsZS5leHBvcnRzID0gU29uZyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Song",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAOC,QAAQ,cAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiBH,IAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "var Song = require('./song.model')\n\nmodule.exports = Song"
      ]
    },
    "mtime": 1523746580000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/song.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/song.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/song.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "song.model.js",
      "sourceFileName": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "song.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst AudioBlockSchema = require('./audioBlock.schema');\nconst AudioBlock = require('./audioBlock.model');\n\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst _ = require('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags: {},\n  artist: { type: String },\n  artistID: { type: Schema.ObjectId, ref: 'Artist' },\n  title: { type: String },\n  album: { type: String },\n  albumArtworkUrl: { type: String },\n  albumArtworkUrlSmall: { type: String },\n  trackViewUrl: { type: String },\n  _eoi: { type: Number },\n  _eom: { type: Number },\n  _boo: { type: Number },\n  itunesTrackID: { type: String },\n  spotifyID: { type: String },\n  spotifyInfo: {},\n  itunesInfo: {},\n  verified: { type: Boolean },\n  explicit: { type: Boolean },\n  isrc: { type: String }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n        __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      };\n    }\n  }\n});\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"];\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n};\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom').get(function () {\n  if (!this._eom) {\n    return this.duration - 1000;\n  } else {\n    return this._eom;\n  }\n}).set(function (value) {\n  this._eom = value;\n});\n\nsongSchema.virtual('eoi').get(function () {\n  if (!this._eoi) {\n    return 0;\n  } else {\n    return this._eoi;\n  }\n}).set(function (value) {\n  this._eoi = value;\n});\n\nsongSchema.virtual('boo').get(function () {\n  if (!this._boo) {\n    return this.eom;\n  } else {\n    return this._boo;\n  }\n}).set(function (value) {\n  this._boo = value;\n});\n\nsongSchema.statics.getSpotifyIDs = function (limit = 1000) {\n  return new Promise((resolve, reject) => {\n    Song.find({ 'spotifyInfo.id': { $exists: true } }).limit(limit).exec(function (err, foundSongs) {\n      if (err) return reject(err);\n      return resolve(foundSongs.map(song => song.spotifyInfo.id));\n    });\n  });\n};\n\nconst Song = AudioBlock.discriminator('Song', songSchema);\nmodule.exports = Song;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "song.model.js"
      ],
      "names": [
        "AudioBlockSchema",
        "require",
        "AudioBlock",
        "mongoose",
        "Schema",
        "_",
        "songSchema",
        "originalTags",
        "artist",
        "type",
        "String",
        "artistID",
        "ObjectId",
        "ref",
        "title",
        "album",
        "albumArtworkUrl",
        "albumArtworkUrlSmall",
        "trackViewUrl",
        "_eoi",
        "Number",
        "_eom",
        "_boo",
        "itunesTrackID",
        "spotifyID",
        "spotifyInfo",
        "itunesInfo",
        "verified",
        "Boolean",
        "explicit",
        "isrc",
        "toObject",
        "virtuals",
        "transform",
        "doc",
        "ret",
        "options",
        "id",
        "key",
        "duration",
        "__t",
        "eoi",
        "eom",
        "boo",
        "audioFileUrl",
        "lastFMTags",
        "status",
        "statics",
        "newFromSpotifyInfo",
        "length",
        "Error",
        "song",
        "Song",
        "virtual",
        "get",
        "set",
        "value",
        "getSpotifyIDs",
        "limit",
        "Promise",
        "resolve",
        "reject",
        "find",
        "$exists",
        "exec",
        "err",
        "foundSongs",
        "map",
        "discriminator",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nconst AudioBlockSchema  =     require('./audioBlock.schema');\nconst AudioBlock        =     require('./audioBlock.model');\n\nconst mongoose          =     require('mongoose');\nconst Schema            =     mongoose.Schema;\nconst _                 =     require ('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags:           {},\n  artist:                 { type: String  },\n  artistID:               { type: Schema.ObjectId, ref: 'Artist' },\n  title:                  { type: String  },\n  album:                  { type: String  },\n  albumArtworkUrl:        { type: String  },\n  albumArtworkUrlSmall:   { type: String  },\n  trackViewUrl:           { type: String  },\n  _eoi:                   { type: Number  },\n  _eom:                   { type: Number  },\n  _boo:                   { type: Number  },\n  itunesTrackID:          { type: String  },\n  spotifyID:              { type: String  },\n  spotifyInfo:            {},\n  itunesInfo:             {},\n  verified:               { type: Boolean },\n  explicit:               { type: Boolean },\n  isrc:                   { type: String  }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n         __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      }\n    }\n  }\n})\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"]\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n}\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom')\n  .get(function () {\n    if (!this._eom) {\n      return this.duration - 1000;\n    } else {\n      return this._eom;\n    }\n  })\n  .set(function (value) {\n    this._eom = value;\n  })\n\nsongSchema.virtual('eoi')\n  .get(function () {\n    if (!this._eoi) {\n      return 0;\n    } else {\n      return this._eoi;\n    }\n  })\n  .set(function (value) {\n    this._eoi = value;\n  })\n\nsongSchema.virtual('boo')\n  .get(function () {\n    if (!this._boo) {\n      return this.eom;\n    } else {\n      return this._boo;\n    }\n  })\n  .set(function (value) {\n    this._boo = value;\n  })\n\n\nsongSchema.statics.getSpotifyIDs = function (limit=1000) {\n  return new Promise((resolve, reject) => {\n    Song\n      .find({ 'spotifyInfo.id': { $exists: true }})\n      .limit(limit)\n      .exec(function (err, foundSongs) {\n        if (err) return reject(err)\n        return resolve(foundSongs.map(song => song.spotifyInfo.id))\n      })\n  })\n}\n\nconst Song = AudioBlock.discriminator('Song', songSchema)\nmodule.exports = Song\n"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/audioBlock.schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/audioBlock.schema.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/audioBlock.schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.schema.js",
      "sourceFileName": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type: { type: String },\n    key: { type: String },\n    duration: { type: Number }\n  });\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2suc2NoZW1hLmpzIl0sIm5hbWVzIjpbInV0aWwiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJBdWRpb0Jsb2NrU2NoZW1hIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJhZGQiLCJ0eXBlIiwiU3RyaW5nIiwia2V5IiwiZHVyYXRpb24iLCJOdW1iZXIiLCJpbmhlcml0cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLE9BQU9DLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUMsV0FBV0QsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJRSxTQUFTRCxTQUFTQyxNQUR0Qjs7QUFHQSxTQUFTQyxnQkFBVCxHQUE0QjtBQUMxQkQsU0FBT0UsS0FBUCxDQUFhLElBQWIsRUFBbUJDLFNBQW5COztBQUVBLE9BQUtDLEdBQUwsQ0FBUztBQUNQQyxVQUFvQixFQUFFQSxNQUFNQyxNQUFSLEVBRGI7QUFFUEMsU0FBb0IsRUFBRUYsTUFBTUMsTUFBUixFQUZiO0FBR1BFLGNBQW9CLEVBQUVILE1BQU1JLE1BQVI7QUFIYixHQUFUO0FBT0Q7QUFDRFosS0FBS2EsUUFBTCxDQUFjVCxnQkFBZCxFQUFnQ0QsTUFBaEM7O0FBRUFXLE9BQU9DLE9BQVAsR0FBaUJYLGdCQUFqQiIsImZpbGUiOiJhdWRpb0Jsb2NrLnNjaGVtYS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZS9zb25nIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbnZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyksXG4gICAgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xuXG5mdW5jdGlvbiBBdWRpb0Jsb2NrU2NoZW1hKCkge1xuICBTY2hlbWEuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICB0aGlzLmFkZCh7XG4gICAgdHlwZTogICAgICAgICAgICAgICB7IHR5cGU6IFN0cmluZyB9LFxuICAgIGtleTogICAgICAgICAgICAgICAgeyB0eXBlOiBTdHJpbmcgfSxcbiAgICBkdXJhdGlvbjogICAgICAgICAgIHsgdHlwZTogTnVtYmVyIH1cbiAgfSk7XG5cblxufVxudXRpbC5pbmhlcml0cyhBdWRpb0Jsb2NrU2NoZW1hLCBTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF1ZGlvQmxvY2tTY2hlbWEiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.schema.js"
      ],
      "names": [
        "util",
        "require",
        "mongoose",
        "Schema",
        "AudioBlockSchema",
        "apply",
        "arguments",
        "add",
        "type",
        "String",
        "key",
        "duration",
        "Number",
        "inherits",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AAAA,IACIE,SAASD,SAASC,MADtB;;AAGA,SAASC,gBAAT,GAA4B;AAC1BD,SAAOE,KAAP,CAAa,IAAb,EAAmBC,SAAnB;;AAEA,OAAKC,GAAL,CAAS;AACPC,UAAoB,EAAEA,MAAMC,MAAR,EADb;AAEPC,SAAoB,EAAEF,MAAMC,MAAR,EAFb;AAGPE,cAAoB,EAAEH,MAAMI,MAAR;AAHb,GAAT;AAOD;AACDZ,KAAKa,QAAL,CAAcT,gBAAd,EAAgCD,MAAhC;;AAEAW,OAAOC,OAAP,GAAiBX,gBAAjB",
      "file": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type:               { type: String },\n    key:                { type: String },\n    duration:           { type: Number }\n  });\n\n\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/audioBlock.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.25.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/audioBlock.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/audioBlock.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.model.js",
      "sourceFileName": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n    _type: { type: String } }, { collection: 'audioBlocks' });\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({ \"__t\": 1, \"_id\": 1 });\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2subW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiQXVkaW9CbG9ja1NjaGVtYSIsInRpbWVzdGFtcHMiLCJNb2RlbFNjaGVtYSIsIl9fdCIsInR5cGUiLCJTdHJpbmciLCJpbmRleCIsIl90eXBlIiwiY29sbGVjdGlvbiIsInBsdWdpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsV0FBV0MsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJQyxTQUFTRixTQUFTRSxNQUR0QjtBQUVBLElBQUlDLG1CQUFtQkYsUUFBUSxxQkFBUixDQUF2QjtBQUNBLElBQUlHLGFBQWFILFFBQVEsb0JBQVIsQ0FBakI7QUFDQSxJQUFJSSxjQUFjLElBQUlGLGdCQUFKLENBQXFCLEVBQUVHLEtBQUssRUFBRUMsTUFBTUMsTUFBUixFQUFnQkMsT0FBTyxJQUF2QixFQUFQO0FBQ0NDLFdBQU8sRUFBRUgsTUFBTUMsTUFBUixFQURSLEVBQXJCLEVBRWhCLEVBQUVHLFlBQVksYUFBZCxFQUZnQixDQUFsQjs7QUFLQU4sWUFBWU8sTUFBWixDQUFtQlIsVUFBbkI7O0FBRUFDLFlBQVlJLEtBQVosQ0FBa0IsRUFBQyxPQUFPLENBQVIsRUFBVyxPQUFPLENBQWxCLEVBQWxCOztBQUVBSSxPQUFPQyxPQUFQLEdBQWlCZCxTQUFTZSxLQUFULENBQWUsWUFBZixFQUE2QlYsV0FBN0IsQ0FBakIiLCJmaWxlIjoiYXVkaW9CbG9jay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZS9zb25nIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpLFxuICAgIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcbnZhciBBdWRpb0Jsb2NrU2NoZW1hID0gcmVxdWlyZSgnLi9hdWRpb0Jsb2NrLnNjaGVtYScpO1xudmFyIHRpbWVzdGFtcHMgPSByZXF1aXJlKCdtb25nb29zZS10aW1lc3RhbXAnKTtcbnZhciBNb2RlbFNjaGVtYSA9IG5ldyBBdWRpb0Jsb2NrU2NoZW1hKHsgX190OiB7IHR5cGU6IFN0cmluZywgaW5kZXg6IHRydWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdHlwZTogeyB0eXBlOiBTdHJpbmcgfSB9LFxuICB7IGNvbGxlY3Rpb246ICdhdWRpb0Jsb2NrcycgfVxuKTtcblxuTW9kZWxTY2hlbWEucGx1Z2luKHRpbWVzdGFtcHMpO1xuXG5Nb2RlbFNjaGVtYS5pbmRleCh7XCJfX3RcIjogMSwgXCJfaWRcIjogMX0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdBdWRpb0Jsb2NrJywgTW9kZWxTY2hlbWEpOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "AudioBlockSchema",
        "timestamps",
        "ModelSchema",
        "__t",
        "type",
        "String",
        "index",
        "_type",
        "collection",
        "plugin",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AAAA,IACIC,SAASF,SAASE,MADtB;AAEA,IAAIC,mBAAmBF,QAAQ,qBAAR,CAAvB;AACA,IAAIG,aAAaH,QAAQ,oBAAR,CAAjB;AACA,IAAII,cAAc,IAAIF,gBAAJ,CAAqB,EAAEG,KAAK,EAAEC,MAAMC,MAAR,EAAgBC,OAAO,IAAvB,EAAP;AACCC,WAAO,EAAEH,MAAMC,MAAR,EADR,EAArB,EAEhB,EAAEG,YAAY,aAAd,EAFgB,CAAlB;;AAKAN,YAAYO,MAAZ,CAAmBR,UAAnB;;AAEAC,YAAYI,KAAZ,CAAkB,EAAC,OAAO,CAAR,EAAW,OAAO,CAAlB,EAAlB;;AAEAI,OAAOC,OAAP,GAAiBd,SAASe,KAAT,CAAe,YAAf,EAA6BV,WAA7B,CAAjB",
      "file": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n                                        _type: { type: String } },\n  { collection: 'audioBlocks' }\n);\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({\"__t\": 1, \"_id\": 1});\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/test/db.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/db.test.js",
      "filenameRelative": "/home/playola/test/db.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "db.test.js",
      "sourceFileName": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "db.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\n\nconst db = require('../lib/db');\nconst errors = require('../lib/errors');\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null;\n    let fakeSongRequest = null;\n    let fakeSongRequests = [];\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        };\n        fakeSongRequests.push((await db.createSongRequest({ spotify_info: spotifyInfo })));\n      }\n    });\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n        id: faker.random.uuid(),\n        title: faker.random.words(),\n        artists: [{ name: faker.random.words() }],\n        album: { name: faker.random.words(), image: [{ url: faker.internet.url() }] },\n        external_ids: { isrc: faker.lorem.word() },\n        duration_ms: faker.random.number()\n      };\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo });\n    });\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id);\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id);\n      } catch (error) {}\n    });\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id);\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id);\n      } catch (error) {}\n    });\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id);\n        assert.notEqual(songRequest, null);\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info);\n      });\n    });\n\n    describe('Put', function () {\n      it('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND);\n      });\n\n      it('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }]);\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave });\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id);\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave);\n      });\n\n      it('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' });\n        console.log(savedSongRequest.completed);\n      });\n    });\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "db.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "db",
        "errors",
        "createdSongRequest",
        "fakeSongRequest",
        "fakeSongRequests",
        "i",
        "spotifyInfo",
        "id",
        "random",
        "uuid",
        "title",
        "words",
        "artists",
        "name",
        "album",
        "image",
        "url",
        "internet",
        "external_ids",
        "isrc",
        "lorem",
        "word",
        "duration_ms",
        "number",
        "push",
        "createSongRequest",
        "spotify_info",
        "songRequest",
        "removeSongRequestWithID",
        "error",
        "getSongRequestWithID",
        "notEqual",
        "deepEqual",
        "getSongRequestWithSpotifyID",
        "spotify_id",
        "savedSongRequest",
        "updateSongRequestWithID",
        "status",
        "MATCH_NOT_FOUND",
        "equal",
        "jsonArrayToSave",
        "JSON",
        "stringify",
        "this",
        "youtube_matches",
        "completed",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAM,EAAEA,MAAF,KAAaC,QAAQ,MAAR,CAAnB;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,MAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,MAAMG,QAAQD,MAAMC,KAApB;AACA,MAAMC,SAASF,MAAME,MAArB;AACA,MAAMC,aAAaH,MAAMG,UAAzB;AACA,MAAMC,YAAYJ,MAAMI,SAAxB;AACA,MAAMC,WAAWL,MAAMK,QAAvB;AACA,MAAMC,KAAKN,MAAMM,EAAjB;;AAEA,MAAMC,KAAKT,QAAQ,WAAR,CAAX;AACA,MAAMU,SAASV,QAAQ,eAAR,CAAf;;AAEAO,SAAS,IAAT,EAAe,YAAY;AACzBA,WAAS,cAAT,EAAyB,YAAY;AACnC,QAAII,qBAAqB,IAAzB;AACA,QAAIC,kBAAkB,IAAtB;AACA,QAAIC,mBAAmB,EAAvB;;AAEAT,WAAO,kBAAkB;AACvB,WAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,YAAIC,cAAc;AAChBC,cAAIf,MAAMgB,MAAN,CAAaC,IAAb,EADY;AAEhBC,iBAAOlB,MAAMgB,MAAN,CAAaG,KAAb,EAFS;AAGhBC,mBAAS,CAAC,EAAEC,MAAMrB,MAAMgB,MAAN,CAAaG,KAAb,EAAR,EAAD,CAHO;AAIhBG,iBAAO,EAAED,MAAMrB,MAAMgB,MAAN,CAAaG,KAAb,EAAR,EAA8BI,OAAO,CAAC,EAAEC,KAAKxB,MAAMyB,QAAN,CAAeD,GAAf,EAAP,EAAD,CAArC,EAJS;AAKhBE,wBAAc,EAAEC,MAAM3B,MAAM4B,KAAN,CAAYC,IAAZ,EAAR,EALE;AAMhBC,uBAAa9B,MAAMgB,MAAN,CAAae,MAAb;AANG,SAAlB;AAQAnB,yBAAiBoB,IAAjB,EAAsB,MAAMxB,GAAGyB,iBAAH,CAAqB,EAAEC,cAAcpB,WAAhB,EAArB,CAA5B;AACD;AACF,KAZD;;AAcAV,eAAW,kBAAkB;AAC3B,UAAIU,cAAc;AACdC,YAAIf,MAAMgB,MAAN,CAAaC,IAAb,EADU;AAEdC,eAAOlB,MAAMgB,MAAN,CAAaG,KAAb,EAFO;AAGdC,iBAAS,CAAC,EAAEC,MAAMrB,MAAMgB,MAAN,CAAaG,KAAb,EAAR,EAAD,CAHK;AAIdG,eAAO,EAAED,MAAMrB,MAAMgB,MAAN,CAAaG,KAAb,EAAR,EAA8BI,OAAO,CAAC,EAAEC,KAAKxB,MAAMyB,QAAN,CAAeD,GAAf,EAAP,EAAD,CAArC,EAJO;AAKdE,sBAAc,EAAEC,MAAM3B,MAAM4B,KAAN,CAAYC,IAAZ,EAAR,EALA;AAMdC,qBAAa9B,MAAMgB,MAAN,CAAae,MAAb;AANC,OAAlB;AAQApB,wBAAkB,MAAMH,GAAGyB,iBAAH,CAAqB,EAAEC,cAAcpB,WAAhB,EAArB,CAAxB;AACD,KAVD;;AAYAZ,UAAM,kBAAkB;AACtB,WAAK,IAAIiC,WAAT,IAAwBvB,gBAAxB,EAA0C;AACxC,cAAMJ,GAAG4B,uBAAH,CAA2BD,YAAYpB,EAAvC,CAAN;AACD;;AAED,UAAI;AACF,cAAMP,GAAG4B,uBAAH,CAA2BD,YAAYpB,EAAvC,CAAN;AACD,OAFD,CAEE,OAAOsB,KAAP,EAAc,CAAE;AACnB,KARD;;AAUAhC,cAAU,kBAAkB;AAC1B,YAAMG,GAAG4B,uBAAH,CAA2BzB,gBAAgBI,EAA3C,CAAN;;AAEA,UAAI;AACF,cAAMP,GAAG4B,uBAAH,CAA2B1B,mBAAmBK,EAA9C,CAAN;AACD,OAFD,CAEE,OAAOsB,KAAP,EAAc,CAAE;AACnB,KAND;;AAQA/B,aAAS,KAAT,EAAgB,YAAY;AAC1BC,SAAG,kCAAH,EAAuC,kBAAkB;AACvD,YAAI4B,cAAc,MAAM3B,GAAG8B,oBAAH,CAAwB3B,gBAAgBI,EAAxC,CAAxB;AACAjB,eAAOyC,QAAP,CAAgBJ,WAAhB,EAA6B,IAA7B;AACArC,eAAO0C,SAAP,CAAiBL,YAAYD,YAA7B,EAA2CvB,gBAAgBuB,YAA3D;AACD,OAJD;;AAMA3B,SAAG,0CAAH,EAA+C,kBAAkB;AAC/D,YAAI4B,cAAc,MAAM3B,GAAGiC,2BAAH,CAA+B9B,gBAAgB+B,UAA/C,CAAxB;AACA5C,eAAOyC,QAAP,CAAgBJ,WAAhB,EAA6B,IAA7B;AACArC,eAAO0C,SAAP,CAAiBL,YAAYD,YAA7B,EAA2CvB,gBAAgBuB,YAA3D;AACD,OAJD;AAKD,KAZD;;AAcA5B,aAAS,KAAT,EAAgB,YAAY;AAC1BC,SAAI,iCAAJ,EAAuC,kBAAkB;AACvD,cAAMoC,mBAAmB,MAAMnC,GAAGoC,uBAAH,CAA2BjC,gBAAgBI,EAA3C,EAA+C,EAAE8B,QAAQpC,OAAOqC,eAAjB,EAA/C,CAA/B;AACA,YAAIX,cAAc,MAAM3B,GAAG8B,oBAAH,CAAwB3B,gBAAgBI,EAAxC,CAAxB;AACAjB,eAAOiD,KAAP,CAAaZ,YAAYU,MAAzB,EAAiCpC,OAAOqC,eAAxC;AACD,OAJD;;AAMAvC,SAAI,4BAAJ,EAAkC,kBAAkB;AAClD,cAAMyC,kBAAkBC,KAAKC,SAAL,CAAe,CAAC,EAAEC,MAAM,WAAR,EAAD,CAAf,CAAxB;AACA,cAAMR,mBAAmB,MAAMnC,GAAGoC,uBAAH,CAA2BjC,gBAAgBI,EAA3C,EAA+C,EAAEqC,iBAAiBJ,eAAnB,EAA/C,CAA/B;AACA,YAAIb,cAAc,MAAM3B,GAAG8B,oBAAH,CAAwB3B,gBAAgBI,EAAxC,CAAxB;AACAjB,eAAOiD,KAAP,CAAaE,KAAKC,SAAL,CAAef,YAAYiB,eAA3B,CAAb,EAA0DJ,eAA1D;AACD,OALD;;AAOAzC,SAAI,kBAAJ,EAAwB,kBAAkB;AACxC,cAAMoC,mBAAmB,MAAMnC,GAAGoC,uBAAH,CAA2BjC,gBAAgBI,EAA3C,EAA+C,EAAEsC,WAAW,OAAb,EAA/C,CAA/B;AACAC,gBAAQC,GAAR,CAAYZ,iBAAiBU,SAA7B;AACD,OAHD;AAID,KAlBD;;AAqBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACD,GApID;AAqID,CAtID",
      "file": "db.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\n\nconst db = require('../lib/db')\nconst errors = require('../lib/errors')\n\ndescribe('DB', function () {\n  describe('SongRequests', function () {\n    let createdSongRequest = null\n    let fakeSongRequest = null\n    let fakeSongRequests = []\n\n    before(async function () {\n      for (let i = 0; i < 10; i++) {\n        let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n        fakeSongRequests.push(await db.createSongRequest({ spotify_info: spotifyInfo })) \n      }\n    })\n\n    beforeEach(async function () {\n      let spotifyInfo = {\n          id: faker.random.uuid(),\n          title: faker.random.words(),\n          artists: [{ name: faker.random.words() }],\n          album: { name: faker.random.words(), image: [{ url: faker.internet.url() }]},\n          external_ids: { isrc: faker.lorem.word() },\n          duration_ms: faker.random.number()\n        }\n      fakeSongRequest = await db.createSongRequest({ spotify_info: spotifyInfo })\n    })\n\n    after(async function () {\n      for (let songRequest of fakeSongRequests) {\n        await db.removeSongRequestWithID(songRequest.id)\n      }\n\n      try {\n        await db.removeSongRequestWithID(songRequest.id)\n      } catch (error) {}\n    })\n\n    afterEach(async function () {\n      await db.removeSongRequestWithID(fakeSongRequest.id)\n\n      try {\n        await db.removeSongRequestWithID(createdSongRequest.id)\n      } catch (error) {}\n    })\n\n    describe('Get', function () {\n      it('should return a songRequest (id)', async function () {\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n\n      it('should return a songRequest (spotify_id)', async function () {\n        let songRequest = await db.getSongRequestWithSpotifyID(fakeSongRequest.spotify_id)\n        assert.notEqual(songRequest, null)\n        assert.deepEqual(songRequest.spotify_info, fakeSongRequest.spotify_info)\n      })\n    })\n\n    describe('Put', function () {\n      it ('should add a status to the shit', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { status: errors.MATCH_NOT_FOUND })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(songRequest.status, errors.MATCH_NOT_FOUND)\n      })\n      \n      it ('should add youtube_matches', async function () {\n        const jsonArrayToSave = JSON.stringify([{ this: 'isAwesome' }])\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { youtube_matches: jsonArrayToSave })\n        let songRequest = await db.getSongRequestWithID(fakeSongRequest.id)\n        assert.equal(JSON.stringify(songRequest.youtube_matches), jsonArrayToSave)\n      })\n\n      it ('adds a timestamp', async function () {\n        const savedSongRequest = await db.updateSongRequestWithID(fakeSongRequest.id, { completed: 'NOW()' })\n        console.log(savedSongRequest.completed)\n      })\n    })\n\n\n    // describe('Search', function () {\n    //   let fakeUsers = []\n\n    //   before(async function () {\n    //     this.timeout(15000)\n\n    //     let songRequests = [\n    //       { spotify_id: 'spotifyID1', key: 'key1', is_processing: true },\n    //       { spotify_id: 'spotifyID2', key: 'key2', is_processing: true },\n    //       { spotify_id: 'spotifyID3', key: 'key3', is_processing: false },\n    //       { spotify_id: 'spotifyID4', key: 'key4', is_processing: false },\n    //       { spotify_id: 'spotifyID5', key: 'key5', is_processing: false }\n    //     ]\n\n    //     for (let i = 0; i < people.length; i++) {\n    //       let songRequest = songRequests[i]\n    //       let songRequest = await db.createSongRequest(songRequests[i])\n    //       fakeSongRequests.push(songRequest)\n    //     }\n    //   })\n\n    //   after(async function () {\n    //     this.timeout(15000)\n    //     for (let songRequest of fakeSongRequests) {\n    //       await db.removeUserWithEmail(songRequest.email)\n    //     }\n    //   })\n\n    //   it('should find users matching a query (ali)', async function () {\n    //     let users = await db.getUsersMatchingQuery('ali')\n    //     assert.isAtLeast(users.length, 1)\n    //   })\n\n    //   it('should find users matching a query (man)', async function () {\n    //     let users = await db.getUsersMatchingQuery('man')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (la)', async function () {\n    //     let users = await db.getUsersMatchingQuery('la')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n\n    //   it('should find users matching a query (69)', async function () {\n    //     let users = await db.getUsersMatchingQuery('69')\n    //     assert.isAtLeast(users.length, 2)\n    //   })\n    // })\n  })\n})"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/db/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/index.js",
      "filenameRelative": "/home/playola/lib/db/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const pgp = require('pg-promise')();\nconst db = pgp(process.env.DATABASE_URL);\nconst songRequests = require('./songRequests');\nconst errors = require('../errors');\nconst utils = require('../../deps/db-utils');\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: data => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id;\n    }\n    return songRequests.create(db, data);\n  },\n  getAllSongRequests: () => {\n    return utils.getMany(db, songRequests.columns, songRequests.table, 'id');\n  },\n  getSongRequestWithID: songRequestID => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestWithIDs: songRequestIDs => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table);\n  },\n  removeSongRequestWithID: songRequestID => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data);\n  },\n  getSongRequestWithSpotifyID: spotifyID => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST);\n  },\n  getSongRequestsMatchingQuery: query => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` + 'where (spotify_id) ilike ${query} ' + 'or status ilike ${query} ' +\n    // 'or song_id ilike ${query} ' +\n    // 'or is_processing ilike ${query} ' +\n    `limit 10`, { query: `%${query}%` });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBncCIsInJlcXVpcmUiLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJzb25nUmVxdWVzdHMiLCJlcnJvcnMiLCJ1dGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVTb25nUmVxdWVzdCIsImRhdGEiLCJzcG90aWZ5X2luZm8iLCJzcG90aWZ5X2lkIiwiaWQiLCJjcmVhdGUiLCJnZXRBbGxTb25nUmVxdWVzdHMiLCJnZXRNYW55IiwiY29sdW1ucyIsInRhYmxlIiwiZ2V0U29uZ1JlcXVlc3RXaXRoSUQiLCJzb25nUmVxdWVzdElEIiwiZ2V0V2l0aElEIiwiU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUIiwiZ2V0U29uZ1JlcXVlc3RXaXRoSURzIiwic29uZ1JlcXVlc3RJRHMiLCJyZW1vdmVTb25nUmVxdWVzdFdpdGhJRCIsInJlbW92ZVdpdGhJRCIsInVwZGF0ZVNvbmdSZXF1ZXN0V2l0aElEIiwidXBkYXRlV2l0aElEIiwiZ2V0U29uZ1JlcXVlc3RXaXRoU3BvdGlmeUlEIiwic3BvdGlmeUlEIiwiZ2V0V2l0aEZpZWxkSUQiLCJnZXRTb25nUmVxdWVzdHNNYXRjaGluZ1F1ZXJ5IiwicXVlcnkiLCJtYW55T3JOb25lIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNQyxRQUFRLFlBQVIsR0FBWjtBQUNBLE1BQU1DLEtBQUtGLElBQUlHLFFBQVFDLEdBQVIsQ0FBWUMsWUFBaEIsQ0FBWDtBQUNBLE1BQU1DLGVBQWVMLFFBQVEsZ0JBQVIsQ0FBckI7QUFDQSxNQUFNTSxTQUFTTixRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1PLFFBQVFQLFFBQVEscUJBQVIsQ0FBZDs7QUFFQVEsT0FBT0MsT0FBUCxHQUFpQjtBQUNmO0FBQ0E7QUFDQTtBQUNBQyxxQkFBb0JDLElBQUQsSUFBVTtBQUMzQixRQUFJQSxLQUFLQyxZQUFULEVBQXVCO0FBQ3JCRCxXQUFLRSxVQUFMLEdBQWtCRixLQUFLQyxZQUFMLENBQWtCRSxFQUFwQztBQUNEO0FBQ0QsV0FBT1QsYUFBYVUsTUFBYixDQUFvQmQsRUFBcEIsRUFBd0JVLElBQXhCLENBQVA7QUFDRCxHQVRjO0FBVWZLLHNCQUFvQixNQUFNO0FBQ3hCLFdBQU9ULE1BQU1VLE9BQU4sQ0FBY2hCLEVBQWQsRUFBa0JJLGFBQWFhLE9BQS9CLEVBQXdDYixhQUFhYyxLQUFyRCxFQUE0RCxJQUE1RCxDQUFQO0FBQ0QsR0FaYztBQWFmQyx3QkFBdUJDLGFBQUQsSUFBbUI7QUFDdkMsV0FBT2QsTUFBTWUsU0FBTixDQUFnQnJCLEVBQWhCLEVBQW9Cb0IsYUFBcEIsRUFBbUNoQixhQUFhYSxPQUFoRCxFQUF5RGIsYUFBYWMsS0FBdEUsRUFBNkViLE9BQU9pQiwyQkFBcEYsQ0FBUDtBQUNELEdBZmM7QUFnQmZDLHlCQUF3QkMsY0FBRCxJQUFvQjtBQUN6QyxXQUFPbEIsTUFBTWUsU0FBTixDQUFnQnJCLEVBQWhCLEVBQW9Cd0IsY0FBcEIsRUFBb0NwQixhQUFhYSxPQUFqRCxFQUEwRGIsYUFBYWMsS0FBdkUsQ0FBUDtBQUNELEdBbEJjO0FBbUJmTywyQkFBMEJMLGFBQUQsSUFBbUI7QUFDMUMsV0FBT2QsTUFBTW9CLFlBQU4sQ0FBbUIxQixFQUFuQixFQUF1Qm9CLGFBQXZCLEVBQXNDaEIsYUFBYWMsS0FBbkQsRUFBMERiLE9BQU9pQiwyQkFBakUsQ0FBUDtBQUNELEdBckJjO0FBc0JmSywyQkFBeUIsQ0FBQ1AsYUFBRCxFQUFnQlYsSUFBaEIsS0FBeUI7QUFDaEQsV0FBT04sYUFBYXdCLFlBQWIsQ0FBMEI1QixFQUExQixFQUE4Qm9CLGFBQTlCLEVBQTZDVixJQUE3QyxDQUFQO0FBQ0QsR0F4QmM7QUF5QmZtQiwrQkFBOEJDLFNBQUQsSUFBZTtBQUMxQyxXQUFPeEIsTUFBTXlCLGNBQU4sQ0FBcUIvQixFQUFyQixFQUF5QjhCLFNBQXpCLEVBQW9DLFlBQXBDLEVBQWtEMUIsYUFBYWEsT0FBL0QsRUFBd0ViLGFBQWFjLEtBQXJGLEVBQTRGYixPQUFPaUIsMkJBQW5HLENBQVA7QUFDRCxHQTNCYztBQTRCZlUsZ0NBQStCQyxLQUFELElBQVc7QUFDdkMsV0FBT2pDLEdBQUdrQyxVQUFILENBQWUsVUFBUzlCLGFBQWFhLE9BQVEsU0FBUWIsYUFBYWMsS0FBTSxHQUExRCxHQUNuQixvQ0FEbUIsR0FFbkIsMkJBRm1CO0FBR25CO0FBQ0E7QUFDQyxjQUxJLEVBS08sRUFBRWUsT0FBUSxJQUFHQSxLQUFNLEdBQW5CLEVBTFAsQ0FBUDtBQU1EO0FBbkNjLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL2RiIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGdwID0gcmVxdWlyZSgncGctcHJvbWlzZScpKClcbmNvbnN0IGRiID0gcGdwKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTClcbmNvbnN0IHNvbmdSZXF1ZXN0cyA9IHJlcXVpcmUoJy4vc29uZ1JlcXVlc3RzJylcbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gU29uZyBSZXF1ZXN0c1xuICAvL1xuICBjcmVhdGVTb25nUmVxdWVzdDogKGRhdGEpID0+IHtcbiAgICBpZiAoZGF0YS5zcG90aWZ5X2luZm8pIHtcbiAgICAgIGRhdGEuc3BvdGlmeV9pZCA9IGRhdGEuc3BvdGlmeV9pbmZvLmlkXG4gICAgfVxuICAgIHJldHVybiBzb25nUmVxdWVzdHMuY3JlYXRlKGRiLCBkYXRhKVxuICB9LFxuICBnZXRBbGxTb25nUmVxdWVzdHM6ICgpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0TWFueShkYiwgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgJ2lkJylcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoSUQ6IChzb25nUmVxdWVzdElEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLmdldFdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgZXJyb3JzLlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVClcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoSURzOiAoc29uZ1JlcXVlc3RJRHMpID0+IHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0V2l0aElEKGRiLCBzb25nUmVxdWVzdElEcywgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSlcbiAgfSxcbiAgcmVtb3ZlU29uZ1JlcXVlc3RXaXRoSUQ6IChzb25nUmVxdWVzdElEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLnJlbW92ZVdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgc29uZ1JlcXVlc3RzLnRhYmxlLCBlcnJvcnMuU09OR19SRVFVRVNUX0RPRVNfTk9UX0VYSVNUKVxuICB9LFxuICB1cGRhdGVTb25nUmVxdWVzdFdpdGhJRDogKHNvbmdSZXF1ZXN0SUQsIGRhdGEpID0+IHtcbiAgICByZXR1cm4gc29uZ1JlcXVlc3RzLnVwZGF0ZVdpdGhJRChkYiwgc29uZ1JlcXVlc3RJRCwgZGF0YSlcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RXaXRoU3BvdGlmeUlEOiAoc3BvdGlmeUlEKSA9PiB7XG4gICAgcmV0dXJuIHV0aWxzLmdldFdpdGhGaWVsZElEKGRiLCBzcG90aWZ5SUQsICdzcG90aWZ5X2lkJywgc29uZ1JlcXVlc3RzLmNvbHVtbnMsIHNvbmdSZXF1ZXN0cy50YWJsZSwgZXJyb3JzLlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVClcbiAgfSxcbiAgZ2V0U29uZ1JlcXVlc3RzTWF0Y2hpbmdRdWVyeTogKHF1ZXJ5KSA9PiB7XG4gICAgcmV0dXJuIGRiLm1hbnlPck5vbmUoYHNlbGVjdCAke3NvbmdSZXF1ZXN0cy5jb2x1bW5zfSBmcm9tICR7c29uZ1JlcXVlc3RzLnRhYmxlfSBgICtcbiAgICAgICd3aGVyZSAoc3BvdGlmeV9pZCkgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAnb3Igc3RhdHVzIGlsaWtlICR7cXVlcnl9ICcgK1xuICAgICAgLy8gJ29yIHNvbmdfaWQgaWxpa2UgJHtxdWVyeX0gJyArXG4gICAgICAvLyAnb3IgaXNfcHJvY2Vzc2luZyBpbGlrZSAke3F1ZXJ5fSAnICtcbiAgICAgIGBsaW1pdCAxMGAsIHsgcXVlcnk6IGAlJHtxdWVyeX0lYCB9KVxuICB9XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "pgp",
        "require",
        "db",
        "process",
        "env",
        "DATABASE_URL",
        "songRequests",
        "errors",
        "utils",
        "module",
        "exports",
        "createSongRequest",
        "data",
        "spotify_info",
        "spotify_id",
        "id",
        "create",
        "getAllSongRequests",
        "getMany",
        "columns",
        "table",
        "getSongRequestWithID",
        "songRequestID",
        "getWithID",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "getSongRequestWithIDs",
        "songRequestIDs",
        "removeSongRequestWithID",
        "removeWithID",
        "updateSongRequestWithID",
        "updateWithID",
        "getSongRequestWithSpotifyID",
        "spotifyID",
        "getWithFieldID",
        "getSongRequestsMatchingQuery",
        "query",
        "manyOrNone"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,YAAR,GAAZ;AACA,MAAMC,KAAKF,IAAIG,QAAQC,GAAR,CAAYC,YAAhB,CAAX;AACA,MAAMC,eAAeL,QAAQ,gBAAR,CAArB;AACA,MAAMM,SAASN,QAAQ,WAAR,CAAf;AACA,MAAMO,QAAQP,QAAQ,qBAAR,CAAd;;AAEAQ,OAAOC,OAAP,GAAiB;AACf;AACA;AACA;AACAC,qBAAoBC,IAAD,IAAU;AAC3B,QAAIA,KAAKC,YAAT,EAAuB;AACrBD,WAAKE,UAAL,GAAkBF,KAAKC,YAAL,CAAkBE,EAApC;AACD;AACD,WAAOT,aAAaU,MAAb,CAAoBd,EAApB,EAAwBU,IAAxB,CAAP;AACD,GATc;AAUfK,sBAAoB,MAAM;AACxB,WAAOT,MAAMU,OAAN,CAAchB,EAAd,EAAkBI,aAAaa,OAA/B,EAAwCb,aAAac,KAArD,EAA4D,IAA5D,CAAP;AACD,GAZc;AAafC,wBAAuBC,aAAD,IAAmB;AACvC,WAAOd,MAAMe,SAAN,CAAgBrB,EAAhB,EAAoBoB,aAApB,EAAmChB,aAAaa,OAAhD,EAAyDb,aAAac,KAAtE,EAA6Eb,OAAOiB,2BAApF,CAAP;AACD,GAfc;AAgBfC,yBAAwBC,cAAD,IAAoB;AACzC,WAAOlB,MAAMe,SAAN,CAAgBrB,EAAhB,EAAoBwB,cAApB,EAAoCpB,aAAaa,OAAjD,EAA0Db,aAAac,KAAvE,CAAP;AACD,GAlBc;AAmBfO,2BAA0BL,aAAD,IAAmB;AAC1C,WAAOd,MAAMoB,YAAN,CAAmB1B,EAAnB,EAAuBoB,aAAvB,EAAsChB,aAAac,KAAnD,EAA0Db,OAAOiB,2BAAjE,CAAP;AACD,GArBc;AAsBfK,2BAAyB,CAACP,aAAD,EAAgBV,IAAhB,KAAyB;AAChD,WAAON,aAAawB,YAAb,CAA0B5B,EAA1B,EAA8BoB,aAA9B,EAA6CV,IAA7C,CAAP;AACD,GAxBc;AAyBfmB,+BAA8BC,SAAD,IAAe;AAC1C,WAAOxB,MAAMyB,cAAN,CAAqB/B,EAArB,EAAyB8B,SAAzB,EAAoC,YAApC,EAAkD1B,aAAaa,OAA/D,EAAwEb,aAAac,KAArF,EAA4Fb,OAAOiB,2BAAnG,CAAP;AACD,GA3Bc;AA4BfU,gCAA+BC,KAAD,IAAW;AACvC,WAAOjC,GAAGkC,UAAH,CAAe,UAAS9B,aAAaa,OAAQ,SAAQb,aAAac,KAAM,GAA1D,GACnB,oCADmB,GAEnB,2BAFmB;AAGnB;AACA;AACC,cALI,EAKO,EAAEe,OAAQ,IAAGA,KAAM,GAAnB,EALP,CAAP;AAMD;AAnCc,CAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const pgp = require('pg-promise')()\nconst db = pgp(process.env.DATABASE_URL)\nconst songRequests = require('./songRequests')\nconst errors = require('../errors')\nconst utils = require('../../deps/db-utils')\n\nmodule.exports = {\n  //\n  // Song Requests\n  //\n  createSongRequest: (data) => {\n    if (data.spotify_info) {\n      data.spotify_id = data.spotify_info.id\n    }\n    return songRequests.create(db, data)\n  },\n  getAllSongRequests: () => {\n    return utils.getMany(db, songRequests.columns, songRequests.table, 'id')\n  },\n  getSongRequestWithID: (songRequestID) => {\n    return utils.getWithID(db, songRequestID, songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestWithIDs: (songRequestIDs) => {\n    return utils.getWithID(db, songRequestIDs, songRequests.columns, songRequests.table)\n  },\n  removeSongRequestWithID: (songRequestID) => {\n    return utils.removeWithID(db, songRequestID, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  updateSongRequestWithID: (songRequestID, data) => {\n    return songRequests.updateWithID(db, songRequestID, data)\n  },\n  getSongRequestWithSpotifyID: (spotifyID) => {\n    return utils.getWithFieldID(db, spotifyID, 'spotify_id', songRequests.columns, songRequests.table, errors.SONG_REQUEST_DOES_NOT_EXIST)\n  },\n  getSongRequestsMatchingQuery: (query) => {\n    return db.manyOrNone(`select ${songRequests.columns} from ${songRequests.table} ` +\n      'where (spotify_id) ilike ${query} ' +\n      'or status ilike ${query} ' +\n      // 'or song_id ilike ${query} ' +\n      // 'or is_processing ilike ${query} ' +\n      `limit 10`, { query: `%${query}%` })\n  }\n}"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/db/songRequests.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/db\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/db/songRequests.js",
      "filenameRelative": "/home/playola/lib/db/songRequests.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequests.js",
      "sourceFileName": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/db",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequests"
    },
    "ignored": false,
    "code": "const errors = require('../errors');\nconst utils = require('../../deps/db-utils');\nconst songRequestCache = require('../cache/songRequest');\n\nconst SONG_REQUESTS_TABLE = 'song_requests';\nconst SONG_REQUESTS_PUBLIC_COLUMNS = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ');\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  };\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS));\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID));\n        }\n        return reject(err);\n      } else {\n        songRequestCache.setSongRequest(songRequest);\n        return resolve(songRequest);\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(songRequest => finish(null, songRequest)).catch(err => finish(err));\n  });\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = ['id', 'spotify_id', 'spotify_info', 'spotify_info_error', 'youtube_matches', 'youtube_matches_error', 'key', 'download_error', 'status', 'song_id', 'is_processing', 'completed', 'created_at'];\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      songRequestCache.setSongRequest(songRequest);\n      resolve(songRequest);\n    }\n\n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE).then(segment => finish(null, segment)).catch(err => finish(err));\n  });\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0cy5qcyJdLCJuYW1lcyI6WyJlcnJvcnMiLCJyZXF1aXJlIiwidXRpbHMiLCJzb25nUmVxdWVzdENhY2hlIiwiU09OR19SRVFVRVNUU19UQUJMRSIsIlNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMiLCJtYXAiLCJjIiwiam9pbiIsImNyZWF0ZSIsImRiIiwiZGF0YSIsImRlZmF1bHRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmaW5pc2giLCJlcnIiLCJzb25nUmVxdWVzdCIsImNvbnN0cmFpbnQiLCJFcnJvciIsImVycnMiLCJTT05HX1JFUVVFU1RfQUxSRUFEWV9FWElTVFMiLCJwYXJzZUludCIsImNvZGUiLCJUUkFOU0NSSVBUX0lEX0lOVkFMSUQiLCJzZXRTb25nUmVxdWVzdCIsInRoZW4iLCJjYXRjaCIsInVwZGF0ZVdpdGhJRCIsInNvbmdSZXF1ZXN0SUQiLCJhbGxvd2VkRmllbGRzIiwiY29uc29sZSIsImxvZyIsInNlZ21lbnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29sdW1ucyIsInRhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFdBQVIsQ0FBZjtBQUNBLE1BQU1DLFFBQVFELFFBQVEscUJBQVIsQ0FBZDtBQUNBLE1BQU1FLG1CQUFtQkYsUUFBUSxzQkFBUixDQUF6Qjs7QUFFQSxNQUFNRyxzQkFBc0IsZUFBNUI7QUFDQSxNQUFNQywrQkFBK0IsQ0FDbkMsSUFEbUMsRUFFbkMsWUFGbUMsRUFHbkMsY0FIbUMsRUFJbkMsb0JBSm1DLEVBS25DLGlCQUxtQyxFQU1uQyx1QkFObUMsRUFPbkMsS0FQbUMsRUFRbkMsZ0JBUm1DLEVBU25DLFFBVG1DLEVBVW5DLFNBVm1DLEVBV25DLGVBWG1DLEVBWW5DLFdBWm1DLEVBYW5DLFlBYm1DLEVBY25DQyxHQWRtQyxDQWMvQkMsS0FBTSxHQUFFSCxtQkFBb0IsSUFBR0csQ0FBRSxFQWRGLEVBY0tDLElBZEwsQ0FjVSxJQWRWLENBQXJDOztB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ZXNDb250ZW50IjpbImNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2Vycm9ycycpXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL2RlcHMvZGItdXRpbHMnKVxuY29uc3Qgc29uZ1JlcXVlc3RDYWNoZSA9IHJlcXVpcmUoJy4uL2NhY2hlL3NvbmdSZXF1ZXN0JylcblxuY29uc3QgU09OR19SRVFVRVNUU19UQUJMRSA9ICdzb25nX3JlcXVlc3RzJ1xuY29uc3QgU09OR19SRVFVRVNUU19QVUJMSUNfQ09MVU1OUyA9IFtcbiAgJ2lkJyxcbiAgJ3Nwb3RpZnlfaWQnLFxuICAnc3BvdGlmeV9pbmZvJyxcbiAgJ3Nwb3RpZnlfaW5mb19lcnJvcicsXG4gICd5b3V0dWJlX21hdGNoZXMnLFxuICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgJ2tleScsXG4gICdkb3dubG9hZF9lcnJvcicsXG4gICdzdGF0dXMnLFxuICAnc29uZ19pZCcsXG4gICdpc19wcm9jZXNzaW5nJyxcbiAgJ2NvbXBsZXRlZCcsXG4gICdjcmVhdGVkX2F0J1xuXS5tYXAoYyA9PiBgJHtTT05HX1JFUVVFU1RTX1RBQkxFfS4ke2N9YCkuam9pbignLCAnKVxuXG5mdW5jdGlvbiBjcmVhdGUoZGIsIGRhdGEgPSB7fSkge1xuICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAnc3BvdGlmeV9pZCc6ICcnLFxuICAgICdzcG90aWZ5X2luZm8nOiB7fSxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJzoge30sXG4gICAgJ3lvdXR1YmVfbWF0Y2hlcyc6IHt9LFxuICAgICd5b3V0dWJlX21hdGNoZXNfZXJyb3InOiB7fSxcbiAgICAna2V5JzogJycsXG4gICAgJ2Rvd25sb2FkX2Vycm9yJzoge30sXG4gICAgJ3N0YXR1cyc6ICcnLFxuICAgICdzb25nX2lkJzogJycsXG4gICAgJ2lzX3Byb2Nlc3NpbmcnOiB0cnVlXG4gIH1cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBmdW5jdGlvbiBmaW5pc2goZXJyLCBzb25nUmVxdWVzdCkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBpZiAoZXJyLmNvbnN0cmFpbnQgPT09ICdzcG90aWZ5X2lkX3VuaXF1ZV9pbmRleCcpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihlcnJzLlNPTkdfUkVRVUVTVF9BTFJFQURZX0VYSVNUUykpXG4gICAgICAgIH0gZWxzZSBpZiAocGFyc2VJbnQoZXJyLmNvZGUpID09PSAyMzUwMikge1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGVycnMuVFJBTlNDUklQVF9JRF9JTlZBTElEKSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvbmdSZXF1ZXN0Q2FjaGUuc2V0U29uZ1JlcXVlc3Qoc29uZ1JlcXVlc3QpXG4gICAgICAgIHJldHVybiByZXNvbHZlKHNvbmdSZXF1ZXN0KVxuICAgICAgfVxuICAgIH1cblxuICAgIHV0aWxzLmNyZWF0ZShkYiwgZGVmYXVsdHMsIGRhdGEsIFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsIFNPTkdfUkVRVUVTVFNfVEFCTEUpXG4gICAgICAudGhlbihzb25nUmVxdWVzdCA9PiBmaW5pc2gobnVsbCwgc29uZ1JlcXVlc3QpKVxuICAgICAgLmNhdGNoKGVyciA9PiBmaW5pc2goZXJyKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBkYXRhID0ge30pIHtcbiAgY29uc3QgYWxsb3dlZEZpZWxkcyA9IFtcbiAgICAnaWQnLFxuICAgICdzcG90aWZ5X2lkJyxcbiAgICAnc3BvdGlmeV9pbmZvJyxcbiAgICAnc3BvdGlmeV9pbmZvX2Vycm9yJyxcbiAgICAneW91dHViZV9tYXRjaGVzJyxcbiAgICAneW91dHViZV9tYXRjaGVzX2Vycm9yJyxcbiAgICAna2V5JyxcbiAgICAnZG93bmxvYWRfZXJyb3InLFxuICAgICdzdGF0dXMnLFxuICAgICdzb25nX2lkJyxcbiAgICAnaXNfcHJvY2Vzc2luZycsXG4gICAgJ2NvbXBsZXRlZCcsXG4gICAgJ2NyZWF0ZWRfYXQnXG4gIF1cblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGZ1bmN0aW9uIGZpbmlzaChlcnIsIHNvbmdSZXF1ZXN0KSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpXG4gICAgICB9XG4gICAgICBzb25nUmVxdWVzdENhY2hlLnNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KVxuICAgICAgcmVzb2x2ZShzb25nUmVxdWVzdClcbiAgICB9XG4gICAgXG4gICAgdXRpbHMudXBkYXRlV2l0aElEKGRiLCBzb25nUmVxdWVzdElELCBhbGxvd2VkRmllbGRzLCBkYXRhLCBTT05HX1JFUVVFU1RTX1BVQkxJQ19DT0xVTU5TLCBTT05HX1JFUVVFU1RTX1RBQkxFKVxuICAgICAgLnRoZW4oc2VnbWVudCA9PiBmaW5pc2gobnVsbCwgc2VnbWVudCkpXG4gICAgICAuY2F0Y2goZXJyID0+IGZpbmlzaChlcnIpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gQ29uc3RhbnRzXG4gIC8vXG4gIGNvbHVtbnM6IFNPTkdfUkVRVUVTVFNfUFVCTElDX0NPTFVNTlMsXG4gIHRhYmxlOiBTT05HX1JFUVVFU1RTX1RBQkxFLFxuXG4gIC8vXG4gIC8vIE1ldGhvZHNcbiAgLy9cbiAgY3JlYXRlLFxuICB1cGRhdGVXaXRoSURcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequests.js"
      ],
      "names": [
        "errors",
        "require",
        "utils",
        "songRequestCache",
        "SONG_REQUESTS_TABLE",
        "SONG_REQUESTS_PUBLIC_COLUMNS",
        "map",
        "c",
        "join",
        "create",
        "db",
        "data",
        "defaults",
        "Promise",
        "resolve",
        "reject",
        "finish",
        "err",
        "songRequest",
        "constraint",
        "Error",
        "errs",
        "SONG_REQUEST_ALREADY_EXISTS",
        "parseInt",
        "code",
        "TRANSCRIPT_ID_INVALID",
        "setSongRequest",
        "then",
        "catch",
        "updateWithID",
        "songRequestID",
        "allowedFields",
        "console",
        "log",
        "segment",
        "module",
        "exports",
        "columns",
        "table"
      ],
      "mappings": "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",
      "file": "songRequests.js",
      "sourceRoot": "/home/playola/lib/db",
      "sourcesContent": [
        "const errors = require('../errors')\nconst utils = require('../../deps/db-utils')\nconst songRequestCache = require('../cache/songRequest')\n\nconst SONG_REQUESTS_TABLE = 'song_requests'\nconst SONG_REQUESTS_PUBLIC_COLUMNS = [\n  'id',\n  'spotify_id',\n  'spotify_info',\n  'spotify_info_error',\n  'youtube_matches',\n  'youtube_matches_error',\n  'key',\n  'download_error',\n  'status',\n  'song_id',\n  'is_processing',\n  'completed',\n  'created_at'\n].map(c => `${SONG_REQUESTS_TABLE}.${c}`).join(', ')\n\nfunction create(db, data = {}) {\n  const defaults = {\n    'spotify_id': '',\n    'spotify_info': {},\n    'spotify_info_error': {},\n    'youtube_matches': {},\n    'youtube_matches_error': {},\n    'key': '',\n    'download_error': {},\n    'status': '',\n    'song_id': '',\n    'is_processing': true\n  }\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        if (err.constraint === 'spotify_id_unique_index') {\n          return reject(new Error(errs.SONG_REQUEST_ALREADY_EXISTS))\n        } else if (parseInt(err.code) === 23502) {\n          return reject(new Error(errs.TRANSCRIPT_ID_INVALID))\n        }\n        return reject(err)\n      } else {\n        songRequestCache.setSongRequest(songRequest)\n        return resolve(songRequest)\n      }\n    }\n\n    utils.create(db, defaults, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(songRequest => finish(null, songRequest))\n      .catch(err => finish(err))\n  })\n}\n\nfunction updateWithID(db, songRequestID, data = {}) {\n  const allowedFields = [\n    'id',\n    'spotify_id',\n    'spotify_info',\n    'spotify_info_error',\n    'youtube_matches',\n    'youtube_matches_error',\n    'key',\n    'download_error',\n    'status',\n    'song_id',\n    'is_processing',\n    'completed',\n    'created_at'\n  ]\n\n  return new Promise((resolve, reject) => {\n    function finish(err, songRequest) {\n      if (err) {\n        console.log(err)\n        return reject(err)\n      }\n      songRequestCache.setSongRequest(songRequest)\n      resolve(songRequest)\n    }\n    \n    utils.updateWithID(db, songRequestID, allowedFields, data, SONG_REQUESTS_PUBLIC_COLUMNS, SONG_REQUESTS_TABLE)\n      .then(segment => finish(null, segment))\n      .catch(err => finish(err))\n  })\n}\n\nmodule.exports = {\n  //\n  // Constants\n  //\n  columns: SONG_REQUESTS_PUBLIC_COLUMNS,\n  table: SONG_REQUESTS_TABLE,\n\n  //\n  // Methods\n  //\n  create,\n  updateWithID\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/errors.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/errors.js",
      "filenameRelative": "/home/playola/lib/errors.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "errors.js",
      "sourceFileName": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "errors"
    },
    "ignored": false,
    "code": "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ycy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ09OVEFJTlNfSU5WQUxJRF9BUkdVTUVOVCIsIlNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVCIsIklOVkFMSURfQlVDS0VUX05BTUUiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLDZCQUEyQixtRUFEWjtBQUVmQywrQkFBNkIsMkNBRmQ7QUFHZkMsdUJBQXFCO0FBSE4sQ0FBakIiLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIENPTlRBSU5TX0lOVkFMSURfQVJHVU1FTlQ6ICdUaGUgcXVlcnkgY29udGFpbmVkIGFuIGludmFsaWQgdmFsdWUgKHVuYWJsZSB0byBiZSBtb3JlIHNwZWNpZmljKScsXG4gIFNPTkdfUkVRVUVTVF9ET0VTX05PVF9FWElTVDogJ0Egc29uZ1JlcXVlc3Qgd2l0aCB0aGF0IGlkIGRvZXMgbm90IGV4aXN0JyxcbiAgSU5WQUxJRF9CVUNLRVRfTkFNRTogJ2ludmFsaWQgYnVja2V0TmFtZSdcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "errors.js"
      ],
      "names": [
        "module",
        "exports",
        "CONTAINS_INVALID_ARGUMENT",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "INVALID_BUCKET_NAME"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,6BAA2B,mEADZ;AAEfC,+BAA6B,2CAFd;AAGfC,uBAAqB;AAHN,CAAjB",
      "file": "errors.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  CONTAINS_INVALID_ARGUMENT: 'The query contained an invalid value (unable to be more specific)',\n  SONG_REQUEST_DOES_NOT_EXIST: 'A songRequest with that id does not exist',\n  INVALID_BUCKET_NAME: 'invalid bucketName'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/index.js",
      "filenameRelative": "/home/playola/deps/db-utils/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "const utils = require('./utils');\nmodule.exports = utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLFFBQVEsU0FBUixDQUFkO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUJILEtBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvZGVwcy9kYi11dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5tb2R1bGUuZXhwb3J0cyA9IHV0aWxzXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "utils",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,SAAR,CAAd;AACAC,OAAOC,OAAP,GAAiBH,KAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const utils = require('./utils')\nmodule.exports = utils\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/db-utils/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/db-utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/db-utils/utils.js",
      "filenameRelative": "/home/playola/deps/db-utils/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/db-utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified'\n};\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual;\n    this.table1JoinField = table1JoinField;\n    this.table2JoinField = table2JoinField;\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(db, fieldID, field, entityID, entity, columns, table, fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS, entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    db.oneOrNone(`insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` + `where not exists ` + `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` + `returning ${columns}`).then(row => {\n      if (!row) {\n        reject(new Error(fieldAlreadyExistsError));\n      } else {\n        resolve(row);\n      }\n    }).catch(error => {\n      if (parseInt(error.code) === 23503) {\n        reject(new Error(entityNotFoundError));\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY));\n      return;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const defaultFields = Object.keys(defaults);\n    const fields = defaultFields.join(', ');\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ');\n    data = Object.assign(defaults, data);\n    db.one(`insert into ${table} (${fields}) values (${values}) returning ${columns}`, data).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nfunction getWithID(db, id, columns = 'id', table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError);\n}\n\nfunction getMany(db, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table);\n}\n\nfunction getWithFieldID(db, fieldID, field, columns, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const data = {};\n    data[field] = fieldID;\n    db.oneOrNone(`select ${columns} from ${table} where ${field}=\\${${field}}`, data).then(row => row ? resolve(row) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([]);\n      return;\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '');\n    const columnsWithoutTable = columns.replace(new RegExp(`${table}.`, 'g'), '');\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter((elem, index, self) => index === self.indexOf(elem));\n    db.manyOrNone(`select ${columnsWithoutTable} ` + `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` + `on field_id = ${fieldWithoutTable} order by idx`, [uniqueIDs]).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction getManyInnerJoinedByFieldID(db, fieldID, table1, table1Field, table1JoinField, table2, table2JoinField, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  const joinConditions = [new JoinCondition(table1JoinField, table2JoinField, true)];\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder, offset, limit);\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(db, fieldID, joinConditions, table1, table1Field, table2, table2Columns, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  let joins = '';\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField;\n    const table2JoinField = condition.table2JoinField;\n    const isEqual = condition.isEqual;\n    joins += `${table1JoinField} ${isEqual ? '=' : '!='} ${table2JoinField} and `;\n  }\n  joins = joins.slice(0, -5);\n  return db.manyOrNone(`select ${table2Columns} from ${table1} ` + `inner join ${table2} on (${joins}) ` + `where ${table1Field} = ${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`);\n}\n\nfunction getManyWithFieldID(db, fieldID, field, columns, table, orderByField, sortOrder = 'asc', offset = 0, limit = 25) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    db.manyOrNone(`select ${columns} from ${table} ` + `where ${field}=${fieldID} ` + `order by ${orderByField} ${sortOrder} ` + `offset ${offset} limit ${limit}`).then(rows => resolve(rows)).catch(error => reject(error));\n  });\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(db, fieldIDs, field, entityID, entityField, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([]);\n      return;\n    }\n\n    db.tx(t => {\n      let queries = [];\n\n      /**\n       * Delete all existing fields matching ID\n       */\n      queries.push(t.result(`delete from ${table} where ${entityField} = ${entityID}`));\n\n      /**\n       * Add these new fields\n       */\n      if (fieldIDs && fieldIDs.length) {\n        queries.push(t.manyOrNone(`insert into ${table} (${entityField}, ${field}) ` + `values(${entityID}, unnest($1)) on conflict do nothing ` + `returning ${columns}`, [fieldIDs]));\n      }\n\n      return t.batch(queries);\n    }).then(data => !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1])).catch(error => reject(error.first));\n  });\n}\n\nfunction removeWithFieldID(db, fieldID, field, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  const fields = {};\n  fields[field] = fieldID;\n  return removeWithFieldIDs(db, fields, table, notFoundError);\n}\n\nfunction removeWithFieldIDs(db, fields, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    let where = '';\n    Object.keys(fields).map(key => where += `${key} = \\${${key}} and `);where = where.slice(0, -5), db.result(`delete from ${table} where ${where}`, fields).then(data => data.rowCount !== 0 ? resolve(data) : reject(new Error(notFoundError))).catch(error => reject(error));\n  });\n}\n\nfunction removeWithID(db, id, table, notFoundError = errors.ENTITY_DOES_NOT_EXIST) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError);\n}\n\nfunction updateWithID(db, id, allowedFields = [], data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY));\n      return;\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED));\n      return;\n    }\n\n    const allowedData = {};\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()';\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField];\n      }\n    }\n\n    let updates = '';\n    Object.keys(allowedData).map(key => updates += `${key} = \\${${key}}, `);\n    updates = updates.slice(0, -2);\n    db.one(`update ${table} set ${updates} where id = ${id} returning ${columns}`, allowedData).then(row => resolve(row)).catch(error => reject(error));\n  });\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImVycm9ycyIsIkRFRkFVTFRTX0VNUFRZIiwiREFUQV9FTVBUWSIsIkVOVElUWV9ET0VTX05PVF9FWElTVCIsIkZJRUxEX0FMUkVBRFlfRVhJU1RTIiwiVEFCTEVfTk9UX1NQRUNJRklFRCIsIkpvaW5Db25kaXRpb24iLCJjb25zdHJ1Y3RvciIsInRhYmxlMUpvaW5GaWVsZCIsInRhYmxlMkpvaW5GaWVsZCIsImlzRXF1YWwiLCJhZGRGaWVsZFdpdGhJRFRvRW50aXR5V2l0aElEIiwiZGIiLCJmaWVsZElEIiwiZmllbGQiLCJlbnRpdHlJRCIsImVudGl0eSIsImNvbHVtbnMiLCJ0YWJsZSIsImZpZWxkQWxyZWFkeUV4aXN0c0Vycm9yIiwiZW50aXR5Tm90Rm91bmRFcnJvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25lT3JOb25lIiwidGhlbiIsInJvdyIsIkVycm9yIiwiY2F0Y2giLCJlcnJvciIsInBhcnNlSW50IiwiY29kZSIsImNyZWF0ZSIsImRlZmF1bHRzIiwiZGF0YSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJkZWZhdWx0RmllbGRzIiwiZmllbGRzIiwiam9pbiIsInZhbHVlcyIsIm1hcCIsImYiLCJhc3NpZ24iLCJvbmUiLCJnZXRXaXRoSUQiLCJpZCIsIm5vdEZvdW5kRXJyb3IiLCJnZXRXaXRoRmllbGRJRCIsImdldE1hbnkiLCJvcmRlckJ5RmllbGQiLCJzb3J0T3JkZXIiLCJvZmZzZXQiLCJsaW1pdCIsIm1hbnlPck5vbmUiLCJyb3dzIiwiZ2V0TWFueVdpdGhJRHMiLCJpZHMiLCJnZXRNYW55V2l0aEZpZWxkSURzIiwiZmllbGRJRHMiLCJmaWVsZFdpdGhvdXRUYWJsZSIsInJlcGxhY2UiLCJSZWdFeHAiLCJjb2x1bW5zV2l0aG91dFRhYmxlIiwidW5pcXVlSURzIiwiZmlsdGVyIiwiZWxlbSIsImluZGV4Iiwic2VsZiIsImluZGV4T2YiLCJnZXRNYW55SW5uZXJKb2luZWRCeUZpZWxkSUQiLCJ0YWJsZTEiLCJ0YWJsZTFGaWVsZCIsInRhYmxlMiIsInRhYmxlMkNvbHVtbnMiLCJqb2luQ29uZGl0aW9ucyIsImdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRFVzaW5nSm9pbkNvbmRpdGlvbnMiLCJqb2lucyIsImNvbmRpdGlvbiIsInNsaWNlIiwiZ2V0TWFueVdpdGhGaWVsZElEIiwicmVwbGFjZUZpZWxkc1dpdGhJRHNGb3JFbnRpdHlXaXRoSUQiLCJlbnRpdHlGaWVsZCIsInR4IiwidCIsInF1ZXJpZXMiLCJwdXNoIiwicmVzdWx0IiwiYmF0Y2giLCJmaXJzdCIsInJlbW92ZVdpdGhGaWVsZElEIiwicmVtb3ZlV2l0aEZpZWxkSURzIiwid2hlcmUiLCJrZXkiLCJyb3dDb3VudCIsInJlbW92ZVdpdGhJRCIsInVwZGF0ZVdpdGhJRCIsImFsbG93ZWRGaWVsZHMiLCJhbGxvd2VkRGF0YSIsImFsbG93ZWRGaWVsZCIsImhhc093blByb3BlcnR5IiwidXBkYXRlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVM7QUFDYkMsa0JBQWdCLDBCQURIO0FBRWJDLGNBQVksc0JBRkM7QUFHYkMseUJBQXVCLG9CQUhWO0FBSWJDLHdCQUFzQixzQkFKVDtBQUtiQyx1QkFBcUI7QUFMUixDQUFmOztBQVFBLE1BQU1DLGFBQU4sQ0FBb0I7QUFDbEJDLGNBQVlDLGVBQVosRUFBNkJDLGVBQTdCLEVBQThDQyxPQUE5QyxFQUF1RDtBQUNyRCxTQUFLQSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLRixlQUFMLEdBQXVCQSxlQUF2QjtBQUNBLFNBQUtDLGVBQUwsR0FBdUJBLGVBQXZCO0FBQ0Q7QUFMaUI7O0FBUXBCLFNBQVNFLDRCQUFULENBQ0VDLEVBREYsRUFFRUMsT0FGRixFQUdFQyxLQUhGLEVBSUVDLFFBSkYsRUFLRUMsTUFMRixFQU1FQyxPQU5GLEVBT0VDLEtBUEYsRUFRRUMsMEJBQTBCbkIsT0FBT0ksb0JBUm5DLEVBU0VnQixzQkFBc0JwQixPQUFP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QUcsY0FBYTlCLE9BQVEsRUFGekUsRUFHSWtGLFdBSEosRUFLRzFFLElBTEgsQ0FLUUMsT0FBT0osUUFBUUksR0FBUixDQUxmLEVBTUdFLEtBTkgsQ0FNU0MsU0FBU04sT0FBT00sS0FBUCxDQU5sQjtBQU9ELEdBOUJNLENBQVA7QUErQkQ7O0FBRUQwRSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0F4RyxRQUplOztBQU1mO0FBQ0E7QUFDQTtBQUNBVyw4QkFUZTtBQVVmcUIsUUFWZTtBQVdmYyxXQVhlO0FBWWZJLFNBWmU7QUFhZk8sZ0JBYmU7QUFjZlIsZ0JBZGU7QUFlZlUscUJBZmU7QUFnQmZZLDZCQWhCZTtBQWlCZk0sZ0RBakJlO0FBa0JmSSxvQkFsQmU7QUFtQmZDLHFDQW5CZTtBQW9CZlMsbUJBcEJlO0FBcUJmQyxvQkFyQmU7QUFzQmZJLGNBdEJlO0FBdUJmQyxjQXZCZTs7QUF5QmY7QUFDQTtBQUNBO0FBQ0EzRjtBQTVCZSxDQUFqQiIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZGItdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlcnJvcnMgPSB7XG4gIERFRkFVTFRTX0VNUFRZOiAnRGVmYXVsdHMgY2Fubm90IGJlIGVtcHR5JyxcbiAgREFUQV9FTVBUWTogJ0RhdGEgY2Fubm90IGJlIGVtcHR5JyxcbiAgRU5USVRZX0RPRVNfTk9UX0VYSVNUOiAnUm93IGRvZXMgbm90IGV4aXN0JyxcbiAgRklFTERfQUxSRUFEWV9FWElTVFM6ICdGaWVsZCBhbHJlYWR5IGV4aXN0cycsXG4gIFRBQkxFX05PVF9TUEVDSUZJRUQ6ICdUYWJsZSBub3Qgc3BlY2lmaWVkJyxcbn1cblxuY2xhc3MgSm9pbkNvbmRpdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHRhYmxlMUpvaW5GaWVsZCwgdGFibGUySm9pbkZpZWxkLCBpc0VxdWFsKSB7XG4gICAgdGhpcy5pc0VxdWFsID0gaXNFcXVhbFxuICAgIHRoaXMudGFibGUxSm9pbkZpZWxkID0gdGFibGUxSm9pbkZpZWxkXG4gICAgdGhpcy50YWJsZTJKb2luRmllbGQgPSB0YWJsZTJKb2luRmllbGRcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRGaWVsZFdpdGhJRFRvRW50aXR5V2l0aElEKFxuICBkYixcbiAgZmllbGRJRCxcbiAgZmllbGQsXG4gIGVudGl0eUlELFxuICBlbnRpdHksXG4gIGNvbHVtbnMsXG4gIHRhYmxlLFxuICBmaWVsZEFscmVhZHlFeGlzdHNFcnJvciA9IGVycm9ycy5GSUVMRF9BTFJFQURZX0VYSVNUUyxcbiAgZW50aXR5Tm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBkYlxuICAgICAgLm9uZU9yTm9uZShcbiAgICAgICAgYGluc2VydCBpbnRvICR7dGFibGV9ICgke2VudGl0eX0sICR7ZmllbGR9KSBzZWxlY3QgJHtlbnRpdHlJRH0sICR7ZmllbGRJRH0gYCArXG4gICAgICAgICAgYHdoZXJlIG5vdCBleGlzdHMgYCArXG4gICAgICAgICAgYChzZWxlY3QgaWQgZnJvbSAke3RhYmxlfSB3aGVyZSAke2VudGl0eX0gPSAke2VudGl0eUlEfSBhbmQgJHtmaWVsZH0gPSAke2ZpZWxkSUR9KSBgICtcbiAgICAgICAgICBgcmV0dXJuaW5nICR7Y29sdW1uc31gLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93ID0+IHtcbiAgICAgICAgaWYgKCFyb3cpIHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKGZpZWxkQWxyZWFkeUV4aXN0c0Vycm9yKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJvdylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGlmIChwYXJzZUludChlcnJvci5jb2RlKSA9PT0gMjM1MDMpIHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVudGl0eU5vdEZvdW5kRXJyb3IpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlKGRiLCBkZWZhdWx0cyA9IHt9LCBkYXRhID0ge30sIGNvbHVtbnMgPSAnaWQnLCB0YWJsZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghZGVmYXVsdHMgfHwgT2JqZWN0LmtleXMoZGVmYXVsdHMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuREVGQVVMVFNfRU1QVFkpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKCFkYXRhIHx8IE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuREFUQV9FTVBUWSkpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoIXRhYmxlIHx8IHRhYmxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvcnMuVEFCTEVfTk9UX1NQRUNJRklFRCkpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBkZWZhdWx0RmllbGRzID0gT2JqZWN0LmtleXMoZGVmYXVsdHMpXG4gICAgY29uc3QgZmllbGRzID0gZGVmYXVsdEZpZWxkcy5qb2luKCcsICcpXG4gICAgY29uc3QgdmFsdWVzID0gZGVmYXVsdEZpZWxkcy5tYXAoZiA9PiBgXFwkeyR7Zn19YCkuam9pbignLCAnKVxuICAgIGRhdGEgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRzLCBkYXRhKVxuICAgIGRiXG4gICAgICAub25lKFxuICAgICAgICBgaW5zZXJ0IGludG8gJHt0YWJsZX0gKCR7ZmllbGRzfSkgdmFsdWVzICgke3ZhbHVlc30pIHJldHVybmluZyAke2NvbHVtbnN9YCxcbiAgICAgICAgZGF0YSxcbiAgICAgIClcbiAgICAgIC50aGVuKHJvdyA9PiByZXNvbHZlKHJvdykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2V0V2l0aElEKFxuICBkYixcbiAgaWQsXG4gIGNvbHVtbnMgPSAnaWQnLFxuICB0YWJsZSxcbiAgbm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIGdldFdpdGhGaWVsZElEKGRiLCBpZCwgJ2lkJywgY29sdW1ucywgdGFibGUsIG5vdEZvdW5kRXJyb3IpXG59XG5cbmZ1bmN0aW9uIGdldE1hbnkoXG4gIGRiLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgb3JkZXJCeUZpZWxkLFxuICBzb3J0T3JkZXIgPSAnYXNjJyxcbiAgb2Zmc2V0ID0gMCxcbiAgbGltaXQgPSAyNSxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSBgICtcbiAgICAgICAgICBgb3JkZXIgYnkgJHtvcmRlckJ5RmllbGR9ICR7c29ydE9yZGVyfSBgICtcbiAgICAgICAgICBgb2Zmc2V0ICR7b2Zmc2V0fSBsaW1pdCAke2xpbWl0fWAsXG4gICAgICApXG4gICAgICAudGhlbihyb3dzID0+IHJlc29sdmUocm93cykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2V0TWFueVdpdGhJRHMoZGIsIGlkcywgY29sdW1ucyA9ICdpZCcsIHRhYmxlKSB7XG4gIHJldHVybiBnZXRNYW55V2l0aEZpZWxkSURzKGRiLCBpZHMsICdpZCcsIGNvbHVtbnMsIHRhYmxlKVxufVxuXG5mdW5jdGlvbiBnZXRXaXRoRmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIGZpZWxkLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgbm90Rm91bmRFcnJvciA9IGVycm9ycy5FTlRJVFlfRE9FU19OT1RfRVhJU1QsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIXRhYmxlKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5UQUJMRV9OT1RfU1BFQ0lGSUVEKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSB7fVxuICAgIGRhdGFbZmllbGRdID0gZmllbGRJRFxuICAgIGRiXG4gICAgICAub25lT3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSB3aGVyZSAke2ZpZWxkfT1cXCR7JHtmaWVsZH19YCxcbiAgICAgICAgZGF0YSxcbiAgICAgIClcbiAgICAgIC50aGVuKHJvdyA9PiAocm93ID8gcmVzb2x2ZShyb3cpIDogcmVqZWN0KG5ldyBFcnJvcihub3RGb3VuZEVycm9yKSkpKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlXaXRoRmllbGRJRHMoZGIsIGZpZWxkSURzLCBmaWVsZCwgY29sdW1ucywgdGFibGUpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoZmllbGRJRHMgPT09IG51bGwgfHwgZmllbGRJRHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXNvbHZlKFtdKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHF1ZXJ5IHdlJ3JlIHVzaW5nIGZvciB0aGUgYmF0Y2ggbWV0aG9kIGRvZXMgbm90IGFsbG93IHNwZWNpZnlpbmdcbiAgICAgKiB0aGUgY29sdW1uIG5hbWVzcGFjZSBzbyB3ZSBuZWVkIHRvIHJlbW92ZSB0aG9zZVxuICAgICAqL1xuICAgIGNvbnN0IGZpZWxkV2l0aG91dFRhYmxlID0gZmllbGQucmVwbGFjZShuZXcgUmVnRXhwKGAke3RhYmxlfS5gKSwgJycpXG4gICAgY29uc3QgY29sdW1uc1dpdGhvdXRUYWJsZSA9IGNvbHVtbnMucmVwbGFjZShcbiAgICAgIG5ldyBSZWdFeHAoYCR7dGFibGV9LmAsICdnJyksXG4gICAgICAnJyxcbiAgICApXG5cbiAgICAvKipcbiAgICAgKiBSaWdodCBub3cgd2UncmUgaGFuZGxpbmcgcmVtb3ZpbmcgZHVwbGljYXRlcyBvbiB0aGUgSlMgc2lkZS4gSSBzZWFyY2hlZCBhcm91bmRcbiAgICAgKiBmb3IgYSB3YXkgdG8gZG8gdGhpcyBncmFjZWZ1bGx5IHdpdGggUG9zdGdyZXMsIGJ1dCBpdCBzZWVtcyByZWFsbHkgaW5jb25zaXN0ZW50XG4gICAgICogYW5kIGNvbXBsaWNhdGVkLiBJZiB0aGVyZSdzIGEgYmV0dGVyIHdheSB0byBkbyB0aGlzIGluIFBvc3RncmVzIHBsZWFzZVxuICAgICAqIGxldCBtZSBrbm93IVxuICAgICAqL1xuICAgIGNvbnN0IHVuaXF1ZUlEcyA9IGZpZWxkSURzLmZpbHRlcihcbiAgICAgIChlbGVtLCBpbmRleCwgc2VsZikgPT4gaW5kZXggPT09IHNlbGYuaW5kZXhPZihlbGVtKSxcbiAgICApXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc1dpdGhvdXRUYWJsZX0gYCArXG4gICAgICAgICAgYGZyb20gJHt0YWJsZX0gaW5uZXIgam9pbiB1bm5lc3QoJDEpIHdpdGggb3JkaW5hbGl0eSBhcyBmKGZpZWxkX2lkLCBpZHgpIGAgK1xuICAgICAgICAgIGBvbiBmaWVsZF9pZCA9ICR7ZmllbGRXaXRob3V0VGFibGV9IG9yZGVyIGJ5IGlkeGAsXG4gICAgICAgIFt1bmlxdWVJRHNdLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93cyA9PiByZXNvbHZlKHJvd3MpKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIHRhYmxlMSxcbiAgdGFibGUxRmllbGQsXG4gIHRhYmxlMUpvaW5GaWVsZCxcbiAgdGFibGUyLFxuICB0YWJsZTJKb2luRmllbGQsXG4gIHRhYmxlMkNvbHVtbnMsXG4gIG9yZGVyQnlGaWVsZCxcbiAgc29ydE9yZGVyID0gJ2FzYycsXG4gIG9mZnNldCA9IDAsXG4gIGxpbWl0ID0gMjUsXG4pIHtcbiAgY29uc3Qgam9pbkNvbmRpdGlvbnMgPSBbXG4gICAgbmV3IEpvaW5Db25kaXRpb24odGFibGUxSm9pbkZpZWxkLCB0YWJsZTJKb2luRmllbGQsIHRydWUpLFxuICBdXG4gIHJldHVybiBnZXRNYW55SW5uZXJKb2luZWRCeUZpZWxkSURVc2luZ0pvaW5Db25kaXRpb25zKFxuICAgIGRiLFxuICAgIGZpZWxkSUQsXG4gICAgam9pbkNvbmRpdGlvbnMsXG4gICAgdGFibGUxLFxuICAgIHRhYmxlMUZpZWxkLFxuICAgIHRhYmxlMixcbiAgICB0YWJsZTJDb2x1bW5zLFxuICAgIG9yZGVyQnlGaWVsZCxcbiAgICBzb3J0T3JkZXIsXG4gICAgb2Zmc2V0LFxuICAgIGxpbWl0LFxuICApXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRFVzaW5nSm9pbkNvbmRpdGlvbnMoXG4gIGRiLFxuICBmaWVsZElELFxuICBqb2luQ29uZGl0aW9ucyxcbiAgdGFibGUxLFxuICB0YWJsZTFGaWVsZCxcbiAgdGFibGUyLFxuICB0YWJsZTJDb2x1bW5zLFxuICBvcmRlckJ5RmllbGQsXG4gIHNvcnRPcmRlciA9ICdhc2MnLFxuICBvZmZzZXQgPSAwLFxuICBsaW1pdCA9IDI1LFxuKSB7XG4gIGxldCBqb2lucyA9ICcnXG4gIGZvciAobGV0IGNvbmRpdGlvbiBvZiBqb2luQ29uZGl0aW9ucykge1xuICAgIGNvbnN0IHRhYmxlMUpvaW5GaWVsZCA9IGNvbmRpdGlvbi50YWJsZTFKb2luRmllbGRcbiAgICBjb25zdCB0YWJsZTJKb2luRmllbGQgPSBjb25kaXRpb24udGFibGUySm9pbkZpZWxkXG4gICAgY29uc3QgaXNFcXVhbCA9IGNvbmRpdGlvbi5pc0VxdWFsXG4gICAgam9pbnMgKz0gYCR7dGFibGUxSm9pbkZpZWxkfSAke2lzRXF1YWxcbiAgICAgID8gJz0nXG4gICAgICA6ICchPSd9ICR7dGFibGUySm9pbkZpZWxkfSBhbmQgYFxuICB9XG4gIGpvaW5zID0gam9pbnMuc2xpY2UoMCwgLTUpXG4gIHJldHVybiBkYi5tYW55T3JOb25lKFxuICAgIGBzZWxlY3QgJHt0YWJsZTJDb2x1bW5zfSBmcm9tICR7dGFibGUxfSBgICtcbiAgICAgIGBpbm5lciBqb2luICR7dGFibGUyfSBvbiAoJHtqb2luc30pIGAgK1xuICAgICAgYHdoZXJlICR7dGFibGUxRmllbGR9ID0gJHtmaWVsZElEfSBgICtcbiAgICAgIGBvcmRlciBieSAke29yZGVyQnlGaWVsZH0gJHtzb3J0T3JkZXJ9IGAgK1xuICAgICAgYG9mZnNldCAke29mZnNldH0gbGltaXQgJHtsaW1pdH1gLFxuICApXG59XG5cbmZ1bmN0aW9uIGdldE1hbnlXaXRoRmllbGRJRChcbiAgZGIsXG4gIGZpZWxkSUQsXG4gIGZpZWxkLFxuICBjb2x1bW5zLFxuICB0YWJsZSxcbiAgb3JkZXJCeUZpZWxkLFxuICBzb3J0T3JkZXIgPSAnYXNjJyxcbiAgb2Zmc2V0ID0gMCxcbiAgbGltaXQgPSAyNSxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC5tYW55T3JOb25lKFxuICAgICAgICBgc2VsZWN0ICR7Y29sdW1uc30gZnJvbSAke3RhYmxlfSBgICtcbiAgICAgICAgICBgd2hlcmUgJHtmaWVsZH09JHtmaWVsZElEfSBgICtcbiAgICAgICAgICBgb3JkZXIgYnkgJHtvcmRlckJ5RmllbGR9ICR7c29ydE9yZGVyfSBgICtcbiAgICAgICAgICBgb2Zmc2V0ICR7b2Zmc2V0fSBsaW1pdCAke2xpbWl0fWAsXG4gICAgICApXG4gICAgICAudGhlbihyb3dzID0+IHJlc29sdmUocm93cykpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUZpZWxkc1dpdGhJRHNGb3JFbnRpdHlXaXRoSUQoXG4gIGRiLFxuICBmaWVsZElEcyxcbiAgZmllbGQsXG4gIGVudGl0eUlELFxuICBlbnRpdHlGaWVsZCxcbiAgY29sdW1ucyxcbiAgdGFibGUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIWVudGl0eUlEKSB7XG4gICAgICByZXNvbHZlKFtdKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGJcbiAgICAgIC50eCh0ID0+IHtcbiAgICAgICAgbGV0IHF1ZXJpZXMgPSBbXVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWxldGUgYWxsIGV4aXN0aW5nIGZpZWxkcyBtYXRjaGluZyBJRFxuICAgICAgICAgKi9cbiAgICAgICAgcXVlcmllcy5wdXNoKFxuICAgICAgICAgIHQucmVzdWx0KGBkZWxldGUgZnJvbSAke3RhYmxlfSB3aGVyZSAke2VudGl0eUZpZWxkfSA9ICR7ZW50aXR5SUR9YCksXG4gICAgICAgIClcblxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIHRoZXNlIG5ldyBmaWVsZHNcbiAgICAgICAgICovXG4gICAgICAgIGlmIChmaWVsZElEcyAmJiBmaWVsZElEcy5sZW5ndGgpIHtcbiAgICAgICAgICBxdWVyaWVzLnB1c2goXG4gICAgICAgICAgICB0Lm1hbnlPck5vbmUoXG4gICAgICAgICAgICAgIGBpbnNlcnQgaW50byAke3RhYmxlfSAoJHtlbnRpdHlGaWVsZH0sICR7ZmllbGR9KSBgICtcbiAgICAgICAgICAgICAgICBgdmFsdWVzKCR7ZW50aXR5SUR9LCB1bm5lc3QoJDEpKSBvbiBjb25mbGljdCBkbyBub3RoaW5nIGAgK1xuICAgICAgICAgICAgICAgIGByZXR1cm5pbmcgJHtjb2x1bW5zfWAsXG4gICAgICAgICAgICAgIFtmaWVsZElEc10sXG4gICAgICAgICAgICApLFxuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0LmJhdGNoKHF1ZXJpZXMpXG4gICAgICB9KVxuICAgICAgLnRoZW4oXG4gICAgICAgIGRhdGEgPT5cbiAgICAgICAgICAhZmllbGRJRHMgfHwgZmllbGRJRHMubGVuZ3RoID09PSAwID8gcmVzb2x2ZShbXSkgOiByZXNvbHZlKGRhdGFbMV0pLFxuICAgICAgKVxuICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvci5maXJzdCkpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVdpdGhGaWVsZElEKFxuICBkYixcbiAgZmllbGRJRCxcbiAgZmllbGQsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICBjb25zdCBmaWVsZHMgPSB7fVxuICBmaWVsZHNbZmllbGRdID0gZmllbGRJRFxuICByZXR1cm4gcmVtb3ZlV2l0aEZpZWxkSURzKGRiLCBmaWVsZHMsIHRhYmxlLCBub3RGb3VuZEVycm9yKVxufVxuXG5mdW5jdGlvbiByZW1vdmVXaXRoRmllbGRJRHMoXG4gIGRiLFxuICBmaWVsZHMsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmICghdGFibGUpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyb3JzLlRBQkxFX05PVF9TUEVDSUZJRUQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgbGV0IHdoZXJlID0gJydcbiAgICBPYmplY3Qua2V5cyhmaWVsZHMpLm1hcChrZXkgPT4gKHdoZXJlICs9IGAke2tleX0gPSBcXCR7JHtrZXl9fSBhbmQgYCkpXG4gICAgOyh3aGVyZSA9IHdoZXJlLnNsaWNlKDAsIC01KSksXG4gICAgICBkYlxuICAgICAgICAucmVzdWx0KGBkZWxldGUgZnJvbSAke3RhYmxlfSB3aGVyZSAke3doZXJlfWAsIGZpZWxkcylcbiAgICAgICAgLnRoZW4oXG4gICAgICAgICAgZGF0YSA9PlxuICAgICAgICAgICAgZGF0YS5yb3dDb3VudCAhPT0gMFxuICAgICAgICAgICAgICA/IHJlc29sdmUoZGF0YSlcbiAgICAgICAgICAgICAgOiByZWplY3QobmV3IEVycm9yKG5vdEZvdW5kRXJyb3IpKSxcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVtb3ZlV2l0aElEKFxuICBkYixcbiAgaWQsXG4gIHRhYmxlLFxuICBub3RGb3VuZEVycm9yID0gZXJyb3JzLkVOVElUWV9ET0VTX05PVF9FWElTVCxcbikge1xuICByZXR1cm4gcmVtb3ZlV2l0aEZpZWxkSUQoZGIsIGlkLCAnaWQnLCB0YWJsZSwgbm90Rm91bmRFcnJvcilcbn1cblxuZnVuY3Rpb24gdXBkYXRlV2l0aElEKFxuICBkYixcbiAgaWQsXG4gIGFsbG93ZWRGaWVsZHMgPSBbXSxcbiAgZGF0YSA9IHt9LFxuICBjb2x1bW5zID0gJ2lkJyxcbiAgdGFibGUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIWRhdGEgfHwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5EQVRBX0VNUFRZKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICghdGFibGUgfHwgdGFibGUubGVuZ3RoID09PSAwKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKGVycm9ycy5UQUJMRV9OT1RfU1BFQ0lGSUVEKSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGFsbG93ZWREYXRhID0ge31cbiAgICBmb3IgKGxldCBhbGxvd2VkRmllbGQgb2YgYWxsb3dlZEZpZWxkcykge1xuICAgICAgaWYgKGFsbG93ZWRGaWVsZCA9PT0gJ3VwZGF0ZWRfYXQnKSB7XG4gICAgICAgIGFsbG93ZWREYXRhW2FsbG93ZWRGaWVsZF0gPSAnbm93KCknXG4gICAgICB9IGVsc2UgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoYWxsb3dlZEZpZWxkKSkge1xuICAgICAgICBhbGxvd2VkRGF0YVthbGxvd2VkRmllbGRdID0gZGF0YVthbGxvd2VkRmllbGRdXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHVwZGF0ZXMgPSAnJ1xuICAgIE9iamVjdC5rZXlzKGFsbG93ZWREYXRhKS5tYXAoa2V5ID0+ICh1cGRhdGVzICs9IGAke2tleX0gPSBcXCR7JHtrZXl9fSwgYCkpXG4gICAgdXBkYXRlcyA9IHVwZGF0ZXMuc2xpY2UoMCwgLTIpXG4gICAgZGJcbiAgICAgIC5vbmUoXG4gICAgICAgIGB1cGRhdGUgJHt0YWJsZX0gc2V0ICR7dXBkYXRlc30gd2hlcmUgaWQgPSAke2lkfSByZXR1cm5pbmcgJHtjb2x1bW5zfWAsXG4gICAgICAgIGFsbG93ZWREYXRhLFxuICAgICAgKVxuICAgICAgLnRoZW4ocm93ID0+IHJlc29sdmUocm93KSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy9cbiAgLy8gRXJyb3JzXG4gIC8vXG4gIGVycm9ycyxcblxuICAvL1xuICAvLyBNZXRob2RzXG4gIC8vXG4gIGFkZEZpZWxkV2l0aElEVG9FbnRpdHlXaXRoSUQsXG4gIGNyZWF0ZSxcbiAgZ2V0V2l0aElELFxuICBnZXRNYW55LFxuICBnZXRNYW55V2l0aElEcyxcbiAgZ2V0V2l0aEZpZWxkSUQsXG4gIGdldE1hbnlXaXRoRmllbGRJRHMsXG4gIGdldE1hbnlJbm5lckpvaW5lZEJ5RmllbGRJRCxcbiAgZ2V0TWFueUlubmVySm9pbmVkQnlGaWVsZElEVXNpbmdKb2luQ29uZGl0aW9ucyxcbiAgZ2V0TWFueVdpdGhGaWVsZElELFxuICByZXBsYWNlRmllbGRzV2l0aElEc0ZvckVudGl0eVdpdGhJRCxcbiAgcmVtb3ZlV2l0aEZpZWxkSUQsXG4gIHJlbW92ZVdpdGhGaWVsZElEcyxcbiAgcmVtb3ZlV2l0aElELFxuICB1cGRhdGVXaXRoSUQsXG5cbiAgLy9cbiAgLy8gQ2xhc3Nlc1xuICAvL1xuICBKb2luQ29uZGl0aW9uLFxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "errors",
        "DEFAULTS_EMPTY",
        "DATA_EMPTY",
        "ENTITY_DOES_NOT_EXIST",
        "FIELD_ALREADY_EXISTS",
        "TABLE_NOT_SPECIFIED",
        "JoinCondition",
        "constructor",
        "table1JoinField",
        "table2JoinField",
        "isEqual",
        "addFieldWithIDToEntityWithID",
        "db",
        "fieldID",
        "field",
        "entityID",
        "entity",
        "columns",
        "table",
        "fieldAlreadyExistsError",
        "entityNotFoundError",
        "Promise",
        "resolve",
        "reject",
        "oneOrNone",
        "then",
        "row",
        "Error",
        "catch",
        "error",
        "parseInt",
        "code",
        "create",
        "defaults",
        "data",
        "Object",
        "keys",
        "length",
        "defaultFields",
        "fields",
        "join",
        "values",
        "map",
        "f",
        "assign",
        "one",
        "getWithID",
        "id",
        "notFoundError",
        "getWithFieldID",
        "getMany",
        "orderByField",
        "sortOrder",
        "offset",
        "limit",
        "manyOrNone",
        "rows",
        "getManyWithIDs",
        "ids",
        "getManyWithFieldIDs",
        "fieldIDs",
        "fieldWithoutTable",
        "replace",
        "RegExp",
        "columnsWithoutTable",
        "uniqueIDs",
        "filter",
        "elem",
        "index",
        "self",
        "indexOf",
        "getManyInnerJoinedByFieldID",
        "table1",
        "table1Field",
        "table2",
        "table2Columns",
        "joinConditions",
        "getManyInnerJoinedByFieldIDUsingJoinConditions",
        "joins",
        "condition",
        "slice",
        "getManyWithFieldID",
        "replaceFieldsWithIDsForEntityWithID",
        "entityField",
        "tx",
        "t",
        "queries",
        "push",
        "result",
        "batch",
        "first",
        "removeWithFieldID",
        "removeWithFieldIDs",
        "where",
        "key",
        "rowCount",
        "removeWithID",
        "updateWithID",
        "allowedFields",
        "allowedData",
        "allowedField",
        "hasOwnProperty",
        "updates",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "utils.js",
      "sourceRoot": "/home/playola/deps/db-utils",
      "sourcesContent": [
        "const errors = {\n  DEFAULTS_EMPTY: 'Defaults cannot be empty',\n  DATA_EMPTY: 'Data cannot be empty',\n  ENTITY_DOES_NOT_EXIST: 'Row does not exist',\n  FIELD_ALREADY_EXISTS: 'Field already exists',\n  TABLE_NOT_SPECIFIED: 'Table not specified',\n}\n\nclass JoinCondition {\n  constructor(table1JoinField, table2JoinField, isEqual) {\n    this.isEqual = isEqual\n    this.table1JoinField = table1JoinField\n    this.table2JoinField = table2JoinField\n  }\n}\n\nfunction addFieldWithIDToEntityWithID(\n  db,\n  fieldID,\n  field,\n  entityID,\n  entity,\n  columns,\n  table,\n  fieldAlreadyExistsError = errors.FIELD_ALREADY_EXISTS,\n  entityNotFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    db\n      .oneOrNone(\n        `insert into ${table} (${entity}, ${field}) select ${entityID}, ${fieldID} ` +\n          `where not exists ` +\n          `(select id from ${table} where ${entity} = ${entityID} and ${field} = ${fieldID}) ` +\n          `returning ${columns}`,\n      )\n      .then(row => {\n        if (!row) {\n          reject(new Error(fieldAlreadyExistsError))\n        } else {\n          resolve(row)\n        }\n      })\n      .catch(error => {\n        if (parseInt(error.code) === 23503) {\n          reject(new Error(entityNotFoundError))\n        } else {\n          reject(error)\n        }\n      })\n  })\n}\n\nfunction create(db, defaults = {}, data = {}, columns = 'id', table) {\n  return new Promise((resolve, reject) => {\n    if (!defaults || Object.keys(defaults).length === 0) {\n      reject(new Error(errors.DEFAULTS_EMPTY))\n      return\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const defaultFields = Object.keys(defaults)\n    const fields = defaultFields.join(', ')\n    const values = defaultFields.map(f => `\\${${f}}`).join(', ')\n    data = Object.assign(defaults, data)\n    db\n      .one(\n        `insert into ${table} (${fields}) values (${values}) returning ${columns}`,\n        data,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getWithID(\n  db,\n  id,\n  columns = 'id',\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return getWithFieldID(db, id, 'id', columns, table, notFoundError)\n}\n\nfunction getMany(\n  db,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithIDs(db, ids, columns = 'id', table) {\n  return getManyWithFieldIDs(db, ids, 'id', columns, table)\n}\n\nfunction getWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const data = {}\n    data[field] = fieldID\n    db\n      .oneOrNone(\n        `select ${columns} from ${table} where ${field}=\\${${field}}`,\n        data,\n      )\n      .then(row => (row ? resolve(row) : reject(new Error(notFoundError))))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyWithFieldIDs(db, fieldIDs, field, columns, table) {\n  return new Promise((resolve, reject) => {\n    if (fieldIDs === null || fieldIDs.length === 0) {\n      resolve([])\n      return\n    }\n\n    /**\n     * The query we're using for the batch method does not allow specifying\n     * the column namespace so we need to remove those\n     */\n    const fieldWithoutTable = field.replace(new RegExp(`${table}.`), '')\n    const columnsWithoutTable = columns.replace(\n      new RegExp(`${table}.`, 'g'),\n      '',\n    )\n\n    /**\n     * Right now we're handling removing duplicates on the JS side. I searched around\n     * for a way to do this gracefully with Postgres, but it seems really inconsistent\n     * and complicated. If there's a better way to do this in Postgres please\n     * let me know!\n     */\n    const uniqueIDs = fieldIDs.filter(\n      (elem, index, self) => index === self.indexOf(elem),\n    )\n    db\n      .manyOrNone(\n        `select ${columnsWithoutTable} ` +\n          `from ${table} inner join unnest($1) with ordinality as f(field_id, idx) ` +\n          `on field_id = ${fieldWithoutTable} order by idx`,\n        [uniqueIDs],\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction getManyInnerJoinedByFieldID(\n  db,\n  fieldID,\n  table1,\n  table1Field,\n  table1JoinField,\n  table2,\n  table2JoinField,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  const joinConditions = [\n    new JoinCondition(table1JoinField, table2JoinField, true),\n  ]\n  return getManyInnerJoinedByFieldIDUsingJoinConditions(\n    db,\n    fieldID,\n    joinConditions,\n    table1,\n    table1Field,\n    table2,\n    table2Columns,\n    orderByField,\n    sortOrder,\n    offset,\n    limit,\n  )\n}\n\nfunction getManyInnerJoinedByFieldIDUsingJoinConditions(\n  db,\n  fieldID,\n  joinConditions,\n  table1,\n  table1Field,\n  table2,\n  table2Columns,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  let joins = ''\n  for (let condition of joinConditions) {\n    const table1JoinField = condition.table1JoinField\n    const table2JoinField = condition.table2JoinField\n    const isEqual = condition.isEqual\n    joins += `${table1JoinField} ${isEqual\n      ? '='\n      : '!='} ${table2JoinField} and `\n  }\n  joins = joins.slice(0, -5)\n  return db.manyOrNone(\n    `select ${table2Columns} from ${table1} ` +\n      `inner join ${table2} on (${joins}) ` +\n      `where ${table1Field} = ${fieldID} ` +\n      `order by ${orderByField} ${sortOrder} ` +\n      `offset ${offset} limit ${limit}`,\n  )\n}\n\nfunction getManyWithFieldID(\n  db,\n  fieldID,\n  field,\n  columns,\n  table,\n  orderByField,\n  sortOrder = 'asc',\n  offset = 0,\n  limit = 25,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    db\n      .manyOrNone(\n        `select ${columns} from ${table} ` +\n          `where ${field}=${fieldID} ` +\n          `order by ${orderByField} ${sortOrder} ` +\n          `offset ${offset} limit ${limit}`,\n      )\n      .then(rows => resolve(rows))\n      .catch(error => reject(error))\n  })\n}\n\nfunction replaceFieldsWithIDsForEntityWithID(\n  db,\n  fieldIDs,\n  field,\n  entityID,\n  entityField,\n  columns,\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!entityID) {\n      resolve([])\n      return\n    }\n\n    db\n      .tx(t => {\n        let queries = []\n\n        /**\n         * Delete all existing fields matching ID\n         */\n        queries.push(\n          t.result(`delete from ${table} where ${entityField} = ${entityID}`),\n        )\n\n        /**\n         * Add these new fields\n         */\n        if (fieldIDs && fieldIDs.length) {\n          queries.push(\n            t.manyOrNone(\n              `insert into ${table} (${entityField}, ${field}) ` +\n                `values(${entityID}, unnest($1)) on conflict do nothing ` +\n                `returning ${columns}`,\n              [fieldIDs],\n            ),\n          )\n        }\n\n        return t.batch(queries)\n      })\n      .then(\n        data =>\n          !fieldIDs || fieldIDs.length === 0 ? resolve([]) : resolve(data[1]),\n      )\n      .catch(error => reject(error.first))\n  })\n}\n\nfunction removeWithFieldID(\n  db,\n  fieldID,\n  field,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  const fields = {}\n  fields[field] = fieldID\n  return removeWithFieldIDs(db, fields, table, notFoundError)\n}\n\nfunction removeWithFieldIDs(\n  db,\n  fields,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return new Promise((resolve, reject) => {\n    if (!table) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    let where = ''\n    Object.keys(fields).map(key => (where += `${key} = \\${${key}} and `))\n    ;(where = where.slice(0, -5)),\n      db\n        .result(`delete from ${table} where ${where}`, fields)\n        .then(\n          data =>\n            data.rowCount !== 0\n              ? resolve(data)\n              : reject(new Error(notFoundError)),\n        )\n        .catch(error => reject(error))\n  })\n}\n\nfunction removeWithID(\n  db,\n  id,\n  table,\n  notFoundError = errors.ENTITY_DOES_NOT_EXIST,\n) {\n  return removeWithFieldID(db, id, 'id', table, notFoundError)\n}\n\nfunction updateWithID(\n  db,\n  id,\n  allowedFields = [],\n  data = {},\n  columns = 'id',\n  table,\n) {\n  return new Promise((resolve, reject) => {\n    if (!data || Object.keys(data).length === 0) {\n      reject(new Error(errors.DATA_EMPTY))\n      return\n    }\n\n    if (!table || table.length === 0) {\n      reject(new Error(errors.TABLE_NOT_SPECIFIED))\n      return\n    }\n\n    const allowedData = {}\n    for (let allowedField of allowedFields) {\n      if (allowedField === 'updated_at') {\n        allowedData[allowedField] = 'now()'\n      } else if (data.hasOwnProperty(allowedField)) {\n        allowedData[allowedField] = data[allowedField]\n      }\n    }\n\n    let updates = ''\n    Object.keys(allowedData).map(key => (updates += `${key} = \\${${key}}, `))\n    updates = updates.slice(0, -2)\n    db\n      .one(\n        `update ${table} set ${updates} where id = ${id} returning ${columns}`,\n        allowedData,\n      )\n      .then(row => resolve(row))\n      .catch(error => reject(error))\n  })\n}\n\nmodule.exports = {\n  //\n  // Errors\n  //\n  errors,\n\n  //\n  // Methods\n  //\n  addFieldWithIDToEntityWithID,\n  create,\n  getWithID,\n  getMany,\n  getManyWithIDs,\n  getWithFieldID,\n  getManyWithFieldIDs,\n  getManyInnerJoinedByFieldID,\n  getManyInnerJoinedByFieldIDUsingJoinConditions,\n  getManyWithFieldID,\n  replaceFieldsWithIDsForEntityWithID,\n  removeWithFieldID,\n  removeWithFieldIDs,\n  removeWithID,\n  updateWithID,\n\n  //\n  // Classes\n  //\n  JoinCondition,\n}\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/cache/songRequest.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/songRequest.js",
      "filenameRelative": "/home/playola/lib/cache/songRequest.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "songRequest.js",
      "sourceFileName": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "songRequest"
    },
    "ignored": false,
    "code": "const url = require('url');\nconst client = require('./redisClient');\n\nclass SongRequestCache {\n  constructor() {}\n\n  show(req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err);\n        next();\n      }\n\n      if (data) {\n        return res.status(200).send(data);\n      } else {\n        next();\n      }\n    });\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest));\n  }\n}\n\nmodule.exports = new SongRequestCache();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbmdSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbInVybCIsInJlcXVpcmUiLCJjbGllbnQiLCJTb25nUmVxdWVzdENhY2hlIiwiY29uc3RydWN0b3IiLCJzaG93IiwicmVxIiwicmVzIiwibmV4dCIsImdldCIsInBhcmFtcyIsInNwb3RpZnlJRCIsImVyciIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsInNldFNvbmdSZXF1ZXN0Iiwic29uZ1JlcXVlc3QiLCJzZXRleCIsInNwb3RpZnlfaWQiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTUMsUUFBUSxLQUFSLENBQVo7QUFDQSxNQUFNQyxTQUFTRCxRQUFRLGVBQVIsQ0FBZjs7QUFFQSxNQUFNRSxnQkFBTixDQUF1QjtBQUNyQkMsZ0JBQWMsQ0FFYjs7QUFFREMsT0FBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUFzQjtBQUNwQk4sV0FBT08sR0FBUCxDQUFZLGdCQUFlSCxJQUFJSSxNQUFKLENBQVdDLFNBQVUsRUFBaEQsRUFBbUQsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDaEUsVUFBSUQsR0FBSixFQUFTO0FBQ1BFLGdCQUFRQyxHQUFSLENBQVlILEdBQVo7QUFDQUo7QUFDRDs7QUFFRCxVQUFJSyxJQUFKLEVBQVU7QUFDUixlQUFPTixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLElBQXJCLENBQVA7QUFDRCxPQUZELE1BRU87QUFDTEw7QUFDRDtBQUNGLEtBWEQ7QUFZRDs7QUFFRFUsaUJBQWVDLFdBQWYsRUFBNEI7QUFDMUJqQixXQUFPa0IsS0FBUCxDQUFjLGdCQUFlRCxZQUFZRSxVQUFXLEVBQXBELEVBQXVELEVBQXZELEVBQTJEQyxLQUFLQyxTQUFMLENBQWVKLFdBQWYsQ0FBM0Q7QUFDRDtBQXRCb0I7O0FBeUJ2QkssT0FBT0MsT0FBUCxHQUFpQixJQUFJdEIsZ0JBQUosRUFBakIiLCJmaWxlIjoic29uZ1JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvY2FjaGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKVxuY29uc3QgY2xpZW50ID0gcmVxdWlyZSgnLi9yZWRpc0NsaWVudCcpXG5cbmNsYXNzIFNvbmdSZXF1ZXN0Q2FjaGUge1xuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgc2hvdyAocmVxLCByZXMsIG5leHQpIHtcbiAgICBjbGllbnQuZ2V0KGBzb25nX3JlcXVlc3RfJHtyZXEucGFyYW1zLnNwb3RpZnlJRH1gLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChkYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCgpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHNldFNvbmdSZXF1ZXN0KHNvbmdSZXF1ZXN0KSB7XG4gICAgY2xpZW50LnNldGV4KGBzb25nX3JlcXVlc3RfJHtzb25nUmVxdWVzdC5zcG90aWZ5X2lkfWAsIDYwLCBKU09OLnN0cmluZ2lmeShzb25nUmVxdWVzdCkpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU29uZ1JlcXVlc3RDYWNoZSgpIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "songRequest.js"
      ],
      "names": [
        "url",
        "require",
        "client",
        "SongRequestCache",
        "constructor",
        "show",
        "req",
        "res",
        "next",
        "get",
        "params",
        "spotifyID",
        "err",
        "data",
        "console",
        "log",
        "status",
        "send",
        "setSongRequest",
        "songRequest",
        "setex",
        "spotify_id",
        "JSON",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,MAAMC,SAASD,QAAQ,eAAR,CAAf;;AAEA,MAAME,gBAAN,CAAuB;AACrBC,gBAAc,CAEb;;AAEDC,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AACpBN,WAAOO,GAAP,CAAY,gBAAeH,IAAII,MAAJ,CAAWC,SAAU,EAAhD,EAAmD,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChE,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAJ;AACD;;AAED,UAAIK,IAAJ,EAAU;AACR,eAAON,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB,CAAP;AACD,OAFD,MAEO;AACLL;AACD;AACF,KAXD;AAYD;;AAEDU,iBAAeC,WAAf,EAA4B;AAC1BjB,WAAOkB,KAAP,CAAc,gBAAeD,YAAYE,UAAW,EAApD,EAAuD,EAAvD,EAA2DC,KAAKC,SAAL,CAAeJ,WAAf,CAA3D;AACD;AAtBoB;;AAyBvBK,OAAOC,OAAP,GAAiB,IAAItB,gBAAJ,EAAjB",
      "file": "songRequest.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const url = require('url')\nconst client = require('./redisClient')\n\nclass SongRequestCache {\n  constructor() {\n\n  }\n\n  show (req, res, next) {\n    client.get(`song_request_${req.params.spotifyID}`, (err, data) => {\n      if (err) {\n        console.log(err)\n        next()\n      }\n\n      if (data) {\n        return res.status(200).send(data)\n      } else {\n        next()\n      }\n    })\n  }\n\n  setSongRequest(songRequest) {\n    client.setex(`song_request_${songRequest.spotify_id}`, 60, JSON.stringify(songRequest))\n  }\n}\n\nmodule.exports = new SongRequestCache()"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/cache/redisClient.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/cache\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/cache/redisClient.js",
      "filenameRelative": "/home/playola/lib/cache/redisClient.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "redisClient.js",
      "sourceFileName": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/cache",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "redisClient"
    },
    "ignored": false,
    "code": "const redis = require('redis');\nconst client = redis.createClient(process.env.REDIS_URL);\nmodule.exports = client;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZGlzQ2xpZW50LmpzIl0sIm5hbWVzIjpbInJlZGlzIiwicmVxdWlyZSIsImNsaWVudCIsImNyZWF0ZUNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19VUkwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLFNBQVNGLE1BQU1HLFlBQU4sQ0FBbUJDLFFBQVFDLEdBQVIsQ0FBWUMsU0FBL0IsQ0FBZjtBQUNBQyxPQUFPQyxPQUFQLEdBQWlCTixNQUFqQiIsImZpbGUiOiJyZWRpc0NsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9jYWNoZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlzID0gcmVxdWlyZSgncmVkaXMnKVxuY29uc3QgY2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KHByb2Nlc3MuZW52LlJFRElTX1VSTClcbm1vZHVsZS5leHBvcnRzID0gY2xpZW50Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "redisClient.js"
      ],
      "names": [
        "redis",
        "require",
        "client",
        "createClient",
        "process",
        "env",
        "REDIS_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,SAASF,MAAMG,YAAN,CAAmBC,QAAQC,GAAR,CAAYC,SAA/B,CAAf;AACAC,OAAOC,OAAP,GAAiBN,MAAjB",
      "file": "redisClient.js",
      "sourceRoot": "/home/playola/lib/cache",
      "sourcesContent": [
        "const redis = require('redis')\nconst client = redis.createClient(process.env.REDIS_URL)\nmodule.exports = client"
      ]
    },
    "mtime": 1522275423000
  },
  "{\"filename\":\"/home/playola/test/lib.test.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/test\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/test/lib.test.js",
      "filenameRelative": "/home/playola/test/lib.test.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.test.js",
      "sourceFileName": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/test",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib.test"
    },
    "ignored": false,
    "code": "const { assert } = require('chai');\nconst faker = require('faker');\nconst mocha = require('mocha');\nconst after = mocha.after;\nconst before = mocha.before;\nconst beforeEach = mocha.beforeEach;\nconst afterEach = mocha.afterEach;\nconst describe = mocha.describe;\nconst it = mocha.it;\nconst sinon = require('sinon');\nconst mongoose = require('mongoose');\n\nconst db = require('../lib/db');\nconst services = require('../lib/services');\nconst lib = require('../lib/lib');\nconst errors = require('../lib/errors');\nconst status = require('../lib/status');\nconst events = require('../lib/events');\nconst Song = require('../lib/mongoose/song');\n\ndescribe('lib', function () {\n  before(function (done) {\n    mongoose.connect(process.env.MONGODB_URI, { autoReconnect: true }, err => {\n      done();\n    });\n  });\n\n  beforeEach(async function () {\n    var requests = await db.getAllSongRequests();\n    for (let request of requests) {\n      await db.removeSongRequestWithID(request.id);\n    }\n    await Song.find({}).remove();\n  });\n\n  //\n  // Stub for detecting services publishing\n  //\n  var createdSongRequest;\n  var publishStub;\n  // stub services\n  beforeEach(function () {\n    songRequestPublishStub = sinon.stub(services.songRequest, 'publish');\n    songCreatedPublishStub = sinon.stub(services.song, 'publish');\n  });\n\n  afterEach(function () {\n    songRequestPublishStub.restore();\n    songCreatedPublishStub.restore();\n  });\n\n  afterEach(async function () {\n    try {\n      await db.removeSongRequestWithID(createdSongRequest.id);\n    } catch (err) {}\n  });\n\n  //\n  // dummy songRequest and song\n  //\n  var songRequest;\n  var song;\n  var spotifyInfo;\n\n  beforeEach(async function () {\n    spotifyInfo = { id: 'aSpotifyID',\n      artists: [{ name: 'bob' }],\n      name: 'bobsSong',\n      album: { name: 'bobsAlbum',\n        images: [{ url: 'http://bobsPicURL.com' }] },\n      duration_ms: 1000,\n      explicit: true,\n      external_ids: { isrc: 'bobsISRC' }\n    };\n    songRequest = await db.createSongRequest({ spotify_id: 'aSpotifyID',\n      spotify_info: spotifyInfo,\n      is_processing: true });\n    song = await Song.create({ 'spotifyInfo': { id: 'anotherSpotifyID' } });\n  });\n\n  describe('getOrCreateSongRequest', function () {\n    it('errors if there is no spotifyID', async function () {\n      try {\n        createdSongRequest = await lib.getOrCreateSongRequest();\n      } catch (err) {\n        assert.equal(err.message, 'spotifyID not included');\n      }\n    });\n\n    it('gets an existing songRequest', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(songRequest.spotify_id);\n      assert.equal(createdSongRequest.id, songRequest.id);\n    });\n\n    it('song exists -- create a songRequest with proper song_id and status', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(song.spotifyInfo.id);\n      assert.equal(createdSongRequest.song_id, song.id);\n      assert.equal(createdSongRequest.spotify_id, song.spotifyInfo.id);\n      assert.equal(createdSongRequest.is_processing, false);\n    });\n\n    it('creates a songRequest if neither song nor songRequest exist', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest('totallyDifferentSpotifyID');\n      assert.equal(createdSongRequest.song_id, '');\n      assert.equal(createdSongRequest.spotify_id, 'totallyDifferentSpotifyID');\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest);\n    });\n  });\n\n  describe('createSongRequest', function () {\n    it('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      assert.equal(createdSongRequest.spotify_id, 'mySpotifyID');\n      assert.equal(createdSongRequest.status, status.GETTING_SPOTIFY_INFO);\n      assert.equal(createdSongRequest.is_processing, true);\n    });\n\n    it('broadcasts that it was created', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID');\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest);\n    });\n  });\n\n  describe('completeReplaceAudioForSong', function () {\n    it('updates the song with the new key', async function () {\n      var updatedSong = await lib.completeReplaceAudioForSong({ key: 'aNewKey', songID: song.id });\n      assert.equal(updatedSong.key, 'aNewKey');\n    });\n  });\n\n  describe('completeSongAcquisition', function () {\n    it('adds the new song to the db', async function () {\n      var newSong = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      assert.equal(newSong.spotifyInfo.id, spotifyInfo.id);\n      assert.equal(newSong.album, spotifyInfo.album.name);\n      assert.equal(newSong.title, spotifyInfo.name);\n      assert.equal(newSong.explicit, spotifyInfo.explicit);\n      assert.equal(newSong.isrc, spotifyInfo.external_ids.isrc);\n      assert.equal(newSong.albumArtworkUrl, spotifyInfo.album.images[0].url);\n      assert.equal(newSong.artist, spotifyInfo.artists[0].name);\n    });\n\n    it('updates the old songRequest', async function () {\n      var newSong = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      var completedSongRequest = await db.getSongRequestWithID(songRequest.id);\n      console.log('completedSongRequest: ', completedSongRequest);\n      assert.equal(completedSongRequest.song_id, newSong.id);\n      assert.equal(completedSongRequest.is_processing, false);\n    });\n\n    it('updates the songRequest and key if the song already exists', async function () {\n      var newSong = await Song.create({ spotifyInfo: { id: songRequest.spotify_id }, key: 'oldKey' });\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' });\n      assert.equal(completedSongRequest.song.id, newSong.id);\n      assert.equal(completedSongRequest.song_id, newSong.id);\n      assert.equal(completedSongRequest.song.key, 'aNewKey');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.test.js"
      ],
      "names": [
        "assert",
        "require",
        "faker",
        "mocha",
        "after",
        "before",
        "beforeEach",
        "afterEach",
        "describe",
        "it",
        "sinon",
        "mongoose",
        "db",
        "services",
        "lib",
        "errors",
        "status",
        "events",
        "Song",
        "done",
        "connect",
        "process",
        "env",
        "MONGODB_URI",
        "autoReconnect",
        "err",
        "requests",
        "getAllSongRequests",
        "request",
        "removeSongRequestWithID",
        "id",
        "find",
        "remove",
        "createdSongRequest",
        "publishStub",
        "songRequestPublishStub",
        "stub",
        "songRequest",
        "songCreatedPublishStub",
        "song",
        "restore",
        "spotifyInfo",
        "artists",
        "name",
        "album",
        "images",
        "url",
        "duration_ms",
        "explicit",
        "external_ids",
        "isrc",
        "createSongRequest",
        "spotify_id",
        "spotify_info",
        "is_processing",
        "create",
        "getOrCreateSongRequest",
        "equal",
        "message",
        "song_id",
        "calledWith",
        "SONGREQUEST_CREATED",
        "GETTING_SPOTIFY_INFO",
        "updatedSong",
        "completeReplaceAudioForSong",
        "key",
        "songID",
        "newSong",
        "completeSongAcquisition",
        "spotifyID",
        "title",
        "albumArtworkUrl",
        "artist",
        "completedSongRequest",
        "getSongRequestWithID",
        "console",
        "log"
      ],
      "mappings": "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",
      "file": "lib.test.js",
      "sourceRoot": "/home/playola/test",
      "sourcesContent": [
        "const { assert } = require('chai')\nconst faker = require('faker')\nconst mocha = require('mocha')\nconst after = mocha.after\nconst before = mocha.before\nconst beforeEach = mocha.beforeEach\nconst afterEach = mocha.afterEach\nconst describe = mocha.describe\nconst it = mocha.it\nconst sinon = require('sinon')\nconst mongoose = require('mongoose')\n\nconst db = require('../lib/db')\nconst services = require('../lib/services')\nconst lib = require('../lib/lib')\nconst errors = require('../lib/errors')\nconst status = require('../lib/status')\nconst events = require('../lib/events')\nconst Song = require('../lib/mongoose/song')\n\ndescribe ('lib', function () {\n  before(function (done) {\n    mongoose.connect(process.env.MONGODB_URI, { autoReconnect: true }, (err) => {\n      done()\n    })\n  })\n\n  beforeEach(async function () {\n    var requests = await db.getAllSongRequests()\n    for (let request of requests) {\n      await db.removeSongRequestWithID(request.id)\n    }\n    await Song.find({}).remove()\n  })\n\n  //\n  // Stub for detecting services publishing\n  //\n  var createdSongRequest\n  var publishStub\n  // stub services\n  beforeEach(function () {\n    songRequestPublishStub = sinon.stub(services.songRequest, 'publish')\n    songCreatedPublishStub = sinon.stub(services.song, 'publish')\n  })\n\n  afterEach(function () {\n    songRequestPublishStub.restore()\n    songCreatedPublishStub.restore()\n  })\n\n  afterEach(async function () {\n    try {\n      await db.removeSongRequestWithID(createdSongRequest.id)\n    } catch (err) {}\n  })\n\n  //\n  // dummy songRequest and song\n  //\n  var songRequest\n  var song\n  var spotifyInfo\n\n  beforeEach(async function () {\n    spotifyInfo = { id: 'aSpotifyID',\n      artists: [{ name: 'bob' }],\n      name: 'bobsSong',\n      album: { name: 'bobsAlbum',\n               images: [{ url: 'http://bobsPicURL.com' }] },\n      duration_ms: 1000,\n      explicit: true,\n      external_ids: { isrc: 'bobsISRC' },\n    }\n    songRequest = await db.createSongRequest({ spotify_id: 'aSpotifyID',\n                                               spotify_info: spotifyInfo,\n                                               is_processing: true })\n    song = await Song.create({ 'spotifyInfo': { id: 'anotherSpotifyID' } })\n  })\n\n  describe ('getOrCreateSongRequest', function () {\n    it ('errors if there is no spotifyID', async function () {\n      try {\n        createdSongRequest = await lib.getOrCreateSongRequest()\n      } catch (err) {\n        assert.equal(err.message, 'spotifyID not included')\n      }\n    })\n\n    it ('gets an existing songRequest', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(songRequest.spotify_id)\n      assert.equal(createdSongRequest.id, songRequest.id)\n    })\n\n    it ('song exists -- create a songRequest with proper song_id and status', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest(song.spotifyInfo.id)\n      assert.equal(createdSongRequest.song_id, song.id)\n      assert.equal(createdSongRequest.spotify_id, song.spotifyInfo.id)\n      assert.equal(createdSongRequest.is_processing, false)\n    })\n\n    it ('creates a songRequest if neither song nor songRequest exist', async function () {\n      var createdSongRequest = await lib.getOrCreateSongRequest('totallyDifferentSpotifyID')\n      assert.equal(createdSongRequest.song_id, '')\n      assert.equal(createdSongRequest.spotify_id, 'totallyDifferentSpotifyID')\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest)\n    })\n  })\n\n  describe ('createSongRequest', function () {\n    it ('creates a songRequest', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      assert.equal(createdSongRequest.spotify_id, 'mySpotifyID')\n      assert.equal(createdSongRequest.status, status.GETTING_SPOTIFY_INFO)\n      assert.equal(createdSongRequest.is_processing, true)\n    })\n\n    it ('broadcasts that it was created', async function () {\n      createdSongRequest = await lib.createSongRequest('mySpotifyID')\n      sinon.assert.calledWith(songRequestPublishStub, events.SONGREQUEST_CREATED, createdSongRequest)\n    })\n  })\n\n  describe ('completeReplaceAudioForSong', function () {\n    it ('updates the song with the new key', async function () {\n      var updatedSong = await lib.completeReplaceAudioForSong({ key: 'aNewKey', songID: song.id })\n      assert.equal(updatedSong.key, 'aNewKey')\n    })\n  })\n\n  describe ('completeSongAcquisition', function () {\n    it ('adds the new song to the db', async function () {\n      var newSong = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      assert.equal(newSong.spotifyInfo.id, spotifyInfo.id)\n      assert.equal(newSong.album, spotifyInfo.album.name)\n      assert.equal(newSong.title, spotifyInfo.name)\n      assert.equal(newSong.explicit, spotifyInfo.explicit)\n      assert.equal(newSong.isrc, spotifyInfo.external_ids.isrc)\n      assert.equal(newSong.albumArtworkUrl, spotifyInfo.album.images[0].url)\n      assert.equal(newSong.artist, spotifyInfo.artists[0].name)\n    })\n\n    it ('updates the old songRequest', async function () {\n      var newSong = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      var completedSongRequest = await db.getSongRequestWithID(songRequest.id)\n      console.log('completedSongRequest: ', completedSongRequest)\n      assert.equal(completedSongRequest.song_id, newSong.id)\n      assert.equal(completedSongRequest.is_processing, false)\n    })\n    \n    it('updates the songRequest and key if the song already exists', async function () {\n      var newSong = await Song.create({ spotifyInfo: { id: songRequest.spotify_id }, key: 'oldKey' })\n      var completedSongRequest = await lib.completeSongAcquisition({ spotifyID: songRequest.spotify_id, key: 'aNewKey' })\n      assert.equal(completedSongRequest.song.id, newSong.id)\n      assert.equal(completedSongRequest.song_id, newSong.id)\n      assert.equal(completedSongRequest.song.key, 'aNewKey')\n    })\n  })\n})\n\n"
      ]
    },
    "mtime": 1524594619000
  },
  "{\"filename\":\"/home/playola/lib/services.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services.js",
      "filenameRelative": "/home/playola/lib/services.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "services.js",
      "sourceFileName": "services.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "services"
    },
    "ignored": false,
    "code": "const EventStream = require('../deps/event-stream/EventStream');\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup');\n\nconst instance = new EventStreamGroup([new EventStream('songRequest', process.env.CLOUDAMQP_URL), new EventStream('song', process.env.CLOUDAMQP_URL)]);\n\nObject.freeze(instance);\nmodule.exports = instance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzLmpzIl0sIm5hbWVzIjpbIkV2ZW50U3RyZWFtIiwicmVxdWlyZSIsIkV2ZW50U3RyZWFtR3JvdXAiLCJpbnN0YW5jZSIsInByb2Nlc3MiLCJlbnYiLCJDTE9VREFNUVBfVVJMIiwiT2JqZWN0IiwiZnJlZXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsY0FBY0MsUUFBUSxrQ0FBUixDQUFwQjtBQUNBLE1BQU1DLG1CQUFtQkQsUUFBUSx1Q0FBUixDQUF6Qjs7QUFFQSxNQUFNRSxXQUFXLElBQUlELGdCQUFKLENBQXFCLENBQ3BDLElBQUlGLFdBQUosQ0FBZ0IsYUFBaEIsRUFBK0JJLFFBQVFDLEdBQVIsQ0FBWUMsYUFBM0MsQ0FEb0MsRUFFcEMsSUFBSU4sV0FBSixDQUFnQixNQUFoQixFQUF3QkksUUFBUUMsR0FBUixDQUFZQyxhQUFwQyxDQUZvQyxDQUFyQixDQUFqQjs7QUFLQUMsT0FBT0MsTUFBUCxDQUFjTCxRQUFkO0FBQ0FNLE9BQU9DLE9BQVAsR0FBaUJQLFFBQWpCIiwiZmlsZSI6InNlcnZpY2VzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRTdHJlYW0gPSByZXF1aXJlKCcuLi9kZXBzL2V2ZW50LXN0cmVhbS9FdmVudFN0cmVhbScpXG5jb25zdCBFdmVudFN0cmVhbUdyb3VwID0gcmVxdWlyZSgnLi4vZGVwcy9ldmVudC1zdHJlYW0vRXZlbnRTdHJlYW1Hcm91cCcpXG5cbmNvbnN0IGluc3RhbmNlID0gbmV3IEV2ZW50U3RyZWFtR3JvdXAoW1xuICBuZXcgRXZlbnRTdHJlYW0oJ3NvbmdSZXF1ZXN0JywgcHJvY2Vzcy5lbnYuQ0xPVURBTVFQX1VSTCksXG4gIG5ldyBFdmVudFN0cmVhbSgnc29uZycsIHByb2Nlc3MuZW52LkNMT1VEQU1RUF9VUkwpLFxuXSlcblxuT2JqZWN0LmZyZWV6ZShpbnN0YW5jZSlcbm1vZHVsZS5leHBvcnRzID0gaW5zdGFuY2UiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "services.js"
      ],
      "names": [
        "EventStream",
        "require",
        "EventStreamGroup",
        "instance",
        "process",
        "env",
        "CLOUDAMQP_URL",
        "Object",
        "freeze",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,cAAcC,QAAQ,kCAAR,CAApB;AACA,MAAMC,mBAAmBD,QAAQ,uCAAR,CAAzB;;AAEA,MAAME,WAAW,IAAID,gBAAJ,CAAqB,CACpC,IAAIF,WAAJ,CAAgB,aAAhB,EAA+BI,QAAQC,GAAR,CAAYC,aAA3C,CADoC,EAEpC,IAAIN,WAAJ,CAAgB,MAAhB,EAAwBI,QAAQC,GAAR,CAAYC,aAApC,CAFoC,CAArB,CAAjB;;AAKAC,OAAOC,MAAP,CAAcL,QAAd;AACAM,OAAOC,OAAP,GAAiBP,QAAjB",
      "file": "services.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "const EventStream = require('../deps/event-stream/EventStream')\nconst EventStreamGroup = require('../deps/event-stream/EventStreamGroup')\n\nconst instance = new EventStreamGroup([\n  new EventStream('songRequest', process.env.CLOUDAMQP_URL),\n  new EventStream('song', process.env.CLOUDAMQP_URL),\n])\n\nObject.freeze(instance)\nmodule.exports = instance"
      ]
    },
    "mtime": 1523631585000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStream.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStream.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStream.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStream.js",
      "sourceFileName": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStream"
    },
    "ignored": false,
    "code": "let amqp = require('amqplib/callback_api');\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n    this.channel = null;\n    this.queue = null;\n    this.handlers = {};\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = connection => {\n        this._createChannel(connection).then(() => createQueue()).catch(error => reject(error));\n      };\n\n      const createQueue = () => {\n        this._createQueue().then(() => resolve()).catch(error => reject(error));\n      };\n\n      amqp.connect(this.url, (error, connection) => {\n        if (error) {\n          reject(error);\n        } else {\n          createChannel(connection);\n        }\n      });\n    });\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel((error, channel) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.channel = channel;\n          resolve();\n        }\n      });\n    });\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue('', { exclusive: true }, (error, queue) => {\n        if (error) {\n          reject(error);\n        } else {\n          this.queue = queue;\n          resolve();\n        }\n      });\n    });\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)));\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler;\n    this.channel.assertExchange(event, 'fanout', { durable: false });\n    this.channel.bindQueue(this.queue.queue, event, '');\n    this.channel.consume(this.queue.queue, msg => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content));\n    });\n  }\n\n}\n\nmodule.exports = EventStream;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtLmpzIl0sIm5hbWVzIjpbImFtcXAiLCJyZXF1aXJlIiwiRXZlbnRTdHJlYW0iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJ1cmwiLCJjaGFubmVsIiwicXVldWUiLCJoYW5kbGVycyIsImNvbm5lY3QiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNyZWF0ZUNoYW5uZWwiLCJjb25uZWN0aW9uIiwiX2NyZWF0ZUNoYW5uZWwiLCJ0aGVuIiwiY3JlYXRlUXVldWUiLCJjYXRjaCIsImVycm9yIiwiX2NyZWF0ZVF1ZXVlIiwiYXNzZXJ0UXVldWUiLCJleGNsdXNpdmUiLCJwdWJsaXNoIiwiZXZlbnQiLCJkYXRhIiwiYXNzZXJ0RXhjaGFuZ2UiLCJkdXJhYmxlIiwiQnVmZmVyIiwiSlNPTiIsInN0cmluZ2lmeSIsInN1YnNjcmliZSIsImhhbmRsZXIiLCJiaW5kUXVldWUiLCJjb25zdW1lIiwibXNnIiwiZmllbGRzIiwiZXhjaGFuZ2UiLCJwYXJzZSIsImNvbnRlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxRQUFRLHNCQUFSLENBQVg7O0FBRUEsTUFBTUMsV0FBTixDQUFrQjs7QUFFaEJDLGNBQVlDLElBQVosRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3JCLFNBQUtELElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLElBQWI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0Q7O0FBRURDLFlBQVU7QUFDUixXQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsWUFBTUMsZ0JBQWlCQyxVQUFELElBQWdCO0FBQ3BDLGFBQUtDLGNBQUwsQ0FBb0JELFVBQXBCLEVBQ0dFLElBREgsQ0FDUSxNQUFNQyxhQURkLEVBRUdDLEtBRkgsQ0FFU0MsU0FBU1AsT0FBT08sS0FBUCxDQUZsQjtBQUdELE9BSkQ7O0FBTUEsWUFBTUYsY0FBYyxNQUFNO0FBQ3hCLGFBQUtHLFlBQUwsR0FDR0osSUFESCxDQUNRLE1BQU1MLFNBRGQsRUFFR08sS0FGSCxDQUVTQyxTQUFTUCxPQUFPTyxLQUFQLENBRmxCO0FBR0QsT0FKRDs7QUFNQW5CLFdBQUtTLE9BQUwsQ0FDRSxLQUFLSixHQURQLEVBRUUsQ0FBQ2MsS0FBRCxFQUFRTCxVQUFSLEtBQXVCO0FBQ3JCLFlBQUlLLEtBQUosRUFBVztBQUNUUCxpQkFBT08sS0FBUDtBQUNELFNBRkQsTUFFTztBQUNMTix3QkFBY0MsVUFBZDtBQUNEO0FBQ0YsT0FSSDtBQVNELEtBdEJNLENBQVA7QUF1QkQ7O0FBRURDLGlCQUFlRCxVQUFmLEVBQTJCO0FBQ3pCLFdBQU8sSUFBSUosT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q0UsaUJBQVdELGFBQVgsQ0FDRSxDQUFDTSxLQUFELEVBQVFiLE9BQVIsS0FBb0I7QUFDbEIsWUFBSWEsS0FBSixFQUFXO0FBQ1RQLGlCQUFPTyxLQUFQO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsZUFBS2IsT0FBTCxHQUFlQSxPQUFmO0FBQ0FLO0FBQ0Q7QUFDRixPQVJIO0FBU0QsS0FWTSxDQUFQO0FBV0Q7O0FBRURTLGlCQUFlO0FBQ2IsV0FBTyxJQUFJVixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFdBQUtOLE9BQUwsQ0FBYWUsV0FBYixDQUNFLEVBREYsRUFFRSxFQUFDQyxXQUFXLElBQVosRUFGRixFQUdFLENBQUNILEtBQUQsRUFBUVosS0FBUixLQUFrQjtBQUNoQixZQUFJWSxLQUFKLEVBQVc7QUFDVFAsaUJBQU9PLEtBQVA7QUFDRCxTQUZELE1BRU87QUFDTCxlQUFLWixLQUFMLEdBQWFBLEtBQWI7QUFDQUk7QUFDRDtBQUNGLE9BVkg7QUFXRCxLQVpNLENBQVA7QUFhRDs7QUFFRFksVUFBUUMsS0FBUixFQUFlQyxJQUFmLEVBQXFCO0FBQ25CLFNBQUtuQixPQUFMLENBQWFvQixjQUFiLENBQTRCRixLQUE1QixFQUFtQyxRQUFuQyxFQUE2QyxFQUFDRyxTQUFTLEtBQVYsRUFBN0M7QUFDQSxTQUFLckIsT0FBTCxDQUFhaUIsT0FBYixDQUFxQkMsS0FBckIsRUFBNEIsRUFBNUIsRUFBZ0MsSUFBSUksTUFBSixDQUFXQyxLQUFLQyxTQUFMLENBQWVMLElBQWYsQ0FBWCxDQUFoQztBQUNEOztBQUVETSxZQUFVUCxLQUFWLEVBQWlCUSxPQUFqQixFQUEwQjtBQUN4QixTQUFLeEIsUUFBTCxDQUFjZ0IsS0FBZCxJQUF1QlEsT0FBdkI7QUFDQSxTQUFLMUIsT0FBTCxDQUFhb0IsY0FBYixDQUE0QkYsS0FBNUIsRUFBbUMsUUFBbkMsRUFBNkMsRUFBQ0csU0FBUyxLQUFWLEVBQTdDO0FBQ0EsU0FBS3JCLE9BQUwsQ0FBYTJCLFNBQWIsQ0FBdUIsS0FBSzFCLEtBQUwsQ0FBV0EsS0FBbEMsRUFBeUNpQixLQUF6QyxFQUFnRCxFQUFoRDtBQUNBLFNBQUtsQixPQUFMLENBQWE0QixPQUFiLENBQXFCLEtBQUszQixLQUFMLENBQVdBLEtBQWhDLEVBQXdDNEIsR0FBRCxJQUFTO0FBQzlDLFdBQUszQixRQUFMLENBQWMyQixJQUFJQyxNQUFKLENBQVdDLFFBQXpCLEVBQW1DUixLQUFLUyxLQUFMLENBQVdILElBQUlJLE9BQWYsQ0FBbkM7QUFDRCxLQUZEO0FBR0Q7O0FBOUVlOztBQWtGbEJDLE9BQU9DLE9BQVAsR0FBaUJ2QyxXQUFqQiIsImZpbGUiOiJFdmVudFN0cmVhbS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFtcXAgPSByZXF1aXJlKCdhbXFwbGliL2NhbGxiYWNrX2FwaScpXG5cbmNsYXNzIEV2ZW50U3RyZWFtIHtcblxuICBjb25zdHJ1Y3RvcihuYW1lLCB1cmwpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy51cmwgPSB1cmxcbiAgICB0aGlzLmNoYW5uZWwgPSBudWxsXG4gICAgdGhpcy5xdWV1ZSA9IG51bGxcbiAgICB0aGlzLmhhbmRsZXJzID0ge31cbiAgfVxuXG4gIGNvbm5lY3QoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGNyZWF0ZUNoYW5uZWwgPSAoY29ubmVjdGlvbikgPT4ge1xuICAgICAgICB0aGlzLl9jcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgLnRoZW4oKCkgPT4gY3JlYXRlUXVldWUoKSlcbiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgY3JlYXRlUXVldWUgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NyZWF0ZVF1ZXVlKClcbiAgICAgICAgICAudGhlbigoKSA9PiByZXNvbHZlKCkpXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpXG4gICAgICB9XG5cbiAgICAgIGFtcXAuY29ubmVjdChcbiAgICAgICAgdGhpcy51cmwsXG4gICAgICAgIChlcnJvciwgY29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjcmVhdGVDaGFubmVsKGNvbm5lY3Rpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBfY3JlYXRlQ2hhbm5lbChjb25uZWN0aW9uKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbm5lY3Rpb24uY3JlYXRlQ2hhbm5lbChcbiAgICAgICAgKGVycm9yLCBjaGFubmVsKSA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbCA9IGNoYW5uZWxcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgX2NyZWF0ZVF1ZXVlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLmNoYW5uZWwuYXNzZXJ0UXVldWUoXG4gICAgICAgICcnLFxuICAgICAgICB7ZXhjbHVzaXZlOiB0cnVlfSxcbiAgICAgICAgKGVycm9yLCBxdWV1ZSkgPT4ge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXVlID0gcXVldWVcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgcHVibGlzaChldmVudCwgZGF0YSkge1xuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLnB1Ymxpc2goZXZlbnQsICcnLCBuZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KGRhdGEpKSlcbiAgfVxuXG4gIHN1YnNjcmliZShldmVudCwgaGFuZGxlcikge1xuICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlclxuICAgIHRoaXMuY2hhbm5lbC5hc3NlcnRFeGNoYW5nZShldmVudCwgJ2Zhbm91dCcsIHtkdXJhYmxlOiBmYWxzZX0pXG4gICAgdGhpcy5jaGFubmVsLmJpbmRRdWV1ZSh0aGlzLnF1ZXVlLnF1ZXVlLCBldmVudCwgJycpXG4gICAgdGhpcy5jaGFubmVsLmNvbnN1bWUodGhpcy5xdWV1ZS5xdWV1ZSwgKG1zZykgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVyc1ttc2cuZmllbGRzLmV4Y2hhbmdlXShKU09OLnBhcnNlKG1zZy5jb250ZW50KSlcbiAgICB9KVxuICB9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFN0cmVhbVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStream.js"
      ],
      "names": [
        "amqp",
        "require",
        "EventStream",
        "constructor",
        "name",
        "url",
        "channel",
        "queue",
        "handlers",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "createChannel",
        "connection",
        "_createChannel",
        "then",
        "createQueue",
        "catch",
        "error",
        "_createQueue",
        "assertQueue",
        "exclusive",
        "publish",
        "event",
        "data",
        "assertExchange",
        "durable",
        "Buffer",
        "JSON",
        "stringify",
        "subscribe",
        "handler",
        "bindQueue",
        "consume",
        "msg",
        "fields",
        "exchange",
        "parse",
        "content",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAOC,QAAQ,sBAAR,CAAX;;AAEA,MAAMC,WAAN,CAAkB;;AAEhBC,cAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AACrB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,gBAAiBC,UAAD,IAAgB;AACpC,aAAKC,cAAL,CAAoBD,UAApB,EACGE,IADH,CACQ,MAAMC,aADd,EAEGC,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMA,YAAMF,cAAc,MAAM;AACxB,aAAKG,YAAL,GACGJ,IADH,CACQ,MAAML,SADd,EAEGO,KAFH,CAESC,SAASP,OAAOO,KAAP,CAFlB;AAGD,OAJD;;AAMAnB,WAAKS,OAAL,CACE,KAAKJ,GADP,EAEE,CAACc,KAAD,EAAQL,UAAR,KAAuB;AACrB,YAAIK,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACLN,wBAAcC,UAAd;AACD;AACF,OARH;AASD,KAtBM,CAAP;AAuBD;;AAEDC,iBAAeD,UAAf,EAA2B;AACzB,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCE,iBAAWD,aAAX,CACE,CAACM,KAAD,EAAQb,OAAR,KAAoB;AAClB,YAAIa,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKb,OAAL,GAAeA,OAAf;AACAK;AACD;AACF,OARH;AASD,KAVM,CAAP;AAWD;;AAEDS,iBAAe;AACb,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKN,OAAL,CAAae,WAAb,CACE,EADF,EAEE,EAACC,WAAW,IAAZ,EAFF,EAGE,CAACH,KAAD,EAAQZ,KAAR,KAAkB;AAChB,YAAIY,KAAJ,EAAW;AACTP,iBAAOO,KAAP;AACD,SAFD,MAEO;AACL,eAAKZ,KAAL,GAAaA,KAAb;AACAI;AACD;AACF,OAVH;AAWD,KAZM,CAAP;AAaD;;AAEDY,UAAQC,KAAR,EAAeC,IAAf,EAAqB;AACnB,SAAKnB,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAaiB,OAAb,CAAqBC,KAArB,EAA4B,EAA5B,EAAgC,IAAII,MAAJ,CAAWC,KAAKC,SAAL,CAAeL,IAAf,CAAX,CAAhC;AACD;;AAEDM,YAAUP,KAAV,EAAiBQ,OAAjB,EAA0B;AACxB,SAAKxB,QAAL,CAAcgB,KAAd,IAAuBQ,OAAvB;AACA,SAAK1B,OAAL,CAAaoB,cAAb,CAA4BF,KAA5B,EAAmC,QAAnC,EAA6C,EAACG,SAAS,KAAV,EAA7C;AACA,SAAKrB,OAAL,CAAa2B,SAAb,CAAuB,KAAK1B,KAAL,CAAWA,KAAlC,EAAyCiB,KAAzC,EAAgD,EAAhD;AACA,SAAKlB,OAAL,CAAa4B,OAAb,CAAqB,KAAK3B,KAAL,CAAWA,KAAhC,EAAwC4B,GAAD,IAAS;AAC9C,WAAK3B,QAAL,CAAc2B,IAAIC,MAAJ,CAAWC,QAAzB,EAAmCR,KAAKS,KAAL,CAAWH,IAAII,OAAf,CAAnC;AACD,KAFD;AAGD;;AA9Ee;;AAkFlBC,OAAOC,OAAP,GAAiBvC,WAAjB",
      "file": "EventStream.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        "let amqp = require('amqplib/callback_api')\n\nclass EventStream {\n\n  constructor(name, url) {\n    this.name = name\n    this.url = url\n    this.channel = null\n    this.queue = null\n    this.handlers = {}\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const createChannel = (connection) => {\n        this._createChannel(connection)\n          .then(() => createQueue())\n          .catch(error => reject(error))\n      }\n\n      const createQueue = () => {\n        this._createQueue()\n          .then(() => resolve())\n          .catch(error => reject(error))\n      }\n\n      amqp.connect(\n        this.url,\n        (error, connection) => {\n          if (error) {\n            reject(error)\n          } else {\n            createChannel(connection)\n          }\n        })\n    })\n  }\n\n  _createChannel(connection) {\n    return new Promise((resolve, reject) => {\n      connection.createChannel(\n        (error, channel) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.channel = channel\n            resolve()\n          }\n        })\n    })\n  }\n\n  _createQueue() {\n    return new Promise((resolve, reject) => {\n      this.channel.assertQueue(\n        '',\n        {exclusive: true},\n        (error, queue) => {\n          if (error) {\n            reject(error)\n          } else {\n            this.queue = queue\n            resolve()\n          }\n        })\n    })\n  }\n\n  publish(event, data) {\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.publish(event, '', new Buffer(JSON.stringify(data)))\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler\n    this.channel.assertExchange(event, 'fanout', {durable: false})\n    this.channel.bindQueue(this.queue.queue, event, '')\n    this.channel.consume(this.queue.queue, (msg) => {\n      this.handlers[msg.fields.exchange](JSON.parse(msg.content))\n    })\n  }\n\n}\n\nmodule.exports = EventStream\n"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/deps/event-stream/EventStreamGroup.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/deps/event-stream\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "filenameRelative": "/home/playola/deps/event-stream/EventStreamGroup.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "EventStreamGroup.js",
      "sourceFileName": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/deps/event-stream",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "EventStreamGroup"
    },
    "ignored": false,
    "code": "class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream;\n    }\n\n    this.streams = streams;\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'));\n        return;\n      }\n\n      let promises = [];\n      for (let stream of this.streams) {\n        promises.push(stream.connect());\n      }\n\n      Promise.all(promises).then(connections => resolve()).catch(error => reject(error));\n    });\n  }\n\n}\n\nmodule.exports = EventStreamGroup;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3RyZWFtR3JvdXAuanMiXSwibmFtZXMiOlsiRXZlbnRTdHJlYW1Hcm91cCIsImNvbnN0cnVjdG9yIiwic3RyZWFtcyIsInN0cmVhbSIsIm5hbWUiLCJjb25uZWN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsZW5ndGgiLCJFcnJvciIsInByb21pc2VzIiwicHVzaCIsImFsbCIsInRoZW4iLCJjb25uZWN0aW9ucyIsImNhdGNoIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQyxNQUFNQSxnQkFBTixDQUF1Qjs7QUFFdEJDLGNBQVlDLE9BQVosRUFBcUI7QUFDbkIsU0FBSyxJQUFJQyxNQUFULElBQW1CRCxPQUFuQixFQUE0QjtBQUMxQixXQUFLQyxPQUFPQyxJQUFaLElBQW9CRCxNQUFwQjtBQUNEOztBQUVELFNBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNEOztBQUVERyxZQUFVO0FBQ1IsV0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFVBQUksS0FBS04sT0FBTCxDQUFhTyxNQUFiLEtBQXdCLENBQTVCLEVBQStCO0FBQzdCRCxlQUFPLElBQUlFLEtBQUosQ0FBVSwrQ0FBVixDQUFQO0FBQ0E7QUFDRDs7QUFFRCxVQUFJQyxXQUFXLEVBQWY7QUFDQSxXQUFLLElBQUlSLE1BQVQsSUFBbUIsS0FBS0QsT0FBeEIsRUFBaUM7QUFDL0JTLGlCQUFTQyxJQUFULENBQWVULE9BQU9FLE9BQVAsRUFBZjtBQUNEOztBQUVEQyxjQUFRTyxHQUFSLENBQVlGLFFBQVosRUFDR0csSUFESCxDQUNTQyxXQUFELElBQWlCUixTQUR6QixFQUVHUyxLQUZILENBRVNDLFNBQVNULE9BQU9TLEtBQVAsQ0FGbEI7QUFHRCxLQWRNLENBQVA7QUFlRDs7QUExQnFCOztBQThCeEJDLE9BQU9DLE9BQVAsR0FBaUJuQixnQkFBakIiLCJmaWxlIjoiRXZlbnRTdHJlYW1Hcm91cC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2RlcHMvZXZlbnQtc3RyZWFtIiwic291cmNlc0NvbnRlbnQiOlsiIGNsYXNzIEV2ZW50U3RyZWFtR3JvdXAge1xuXG4gIGNvbnN0cnVjdG9yKHN0cmVhbXMpIHtcbiAgICBmb3IgKGxldCBzdHJlYW0gb2Ygc3RyZWFtcykge1xuICAgICAgdGhpc1tzdHJlYW0ubmFtZV0gPSBzdHJlYW1cbiAgICB9XG5cbiAgICB0aGlzLnN0cmVhbXMgPSBzdHJlYW1zXG4gIH1cblxuICBjb25uZWN0KCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpZiAodGhpcy5zdHJlYW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKCdFdmVudFN0cmVhbUdyb3VwIHNob3VsZCBub3QgY29udGFpbiAwIHN0cmVhbXMnKSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGxldCBwcm9taXNlcyA9IFtdXG4gICAgICBmb3IgKGxldCBzdHJlYW0gb2YgdGhpcy5zdHJlYW1zKSB7XG4gICAgICAgIHByb21pc2VzLnB1c2goIHN0cmVhbS5jb25uZWN0KCkgKVxuICAgICAgfVxuXG4gICAgICBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgICAgICAgLnRoZW4oKGNvbm5lY3Rpb25zKSA9PiByZXNvbHZlKCkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxuICAgIH0pXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U3RyZWFtR3JvdXAiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "EventStreamGroup.js"
      ],
      "names": [
        "EventStreamGroup",
        "constructor",
        "streams",
        "stream",
        "name",
        "connect",
        "Promise",
        "resolve",
        "reject",
        "length",
        "Error",
        "promises",
        "push",
        "all",
        "then",
        "connections",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAC,MAAMA,gBAAN,CAAuB;;AAEtBC,cAAYC,OAAZ,EAAqB;AACnB,SAAK,IAAIC,MAAT,IAAmBD,OAAnB,EAA4B;AAC1B,WAAKC,OAAOC,IAAZ,IAAoBD,MAApB;AACD;;AAED,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEDG,YAAU;AACR,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI,KAAKN,OAAL,CAAaO,MAAb,KAAwB,CAA5B,EAA+B;AAC7BD,eAAO,IAAIE,KAAJ,CAAU,+CAAV,CAAP;AACA;AACD;;AAED,UAAIC,WAAW,EAAf;AACA,WAAK,IAAIR,MAAT,IAAmB,KAAKD,OAAxB,EAAiC;AAC/BS,iBAASC,IAAT,CAAeT,OAAOE,OAAP,EAAf;AACD;;AAEDC,cAAQO,GAAR,CAAYF,QAAZ,EACGG,IADH,CACSC,WAAD,IAAiBR,SADzB,EAEGS,KAFH,CAESC,SAAST,OAAOS,KAAP,CAFlB;AAGD,KAdM,CAAP;AAeD;;AA1BqB;;AA8BxBC,OAAOC,OAAP,GAAiBnB,gBAAjB",
      "file": "EventStreamGroup.js",
      "sourceRoot": "/home/playola/deps/event-stream",
      "sourcesContent": [
        " class EventStreamGroup {\n\n  constructor(streams) {\n    for (let stream of streams) {\n      this[stream.name] = stream\n    }\n\n    this.streams = streams\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      if (this.streams.length === 0) {\n        reject(new Error('EventStreamGroup should not contain 0 streams'))\n        return\n      }\n\n      let promises = []\n      for (let stream of this.streams) {\n        promises.push( stream.connect() )\n      }\n\n      Promise.all(promises)\n        .then((connections) => resolve())\n        .catch(error => reject(error))\n    })\n  }\n\n}\n\nmodule.exports = EventStreamGroup"
      ]
    },
    "mtime": 1523103381000
  },
  "{\"filename\":\"/home/playola/lib/lib.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/lib.js",
      "filenameRelative": "/home/playola/lib/lib.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "lib.js",
      "sourceFileName": "lib.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "lib"
    },
    "ignored": false,
    "code": "var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nconst spotify = require('./services/spotify');\nconst Song = require('./mongoose/song');\nconst AWS = require('aws-sdk');\nconst services = require('./services');\nconst events = require('./events');\nconst db = require('./db');\nconst errors = require('./errors');\nconst status = require('./status');\n\nconst youTubeAudioProcessor = require('./services/youTubeAudioProcessor');\n\nfunction getOrCreateSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    if (!spotifyID) return reject(new Error('spotifyID not included'));\n    // first search songRequest\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => {\n      if (songRequest.song_id) {\n        Song.findById(songRequest.song_id).then(song => resolve(_extends({}, songRequest, { song }))).catch(err => reject(err));\n      } else {\n        resolve(songRequest);\n      }\n    }).catch(err => {\n      if (err.message !== errors.SONG_REQUEST_DOES_NOT_EXIST) return reject(err);\n      // check if song already exists\n\n      Song.findOne({ 'spotifyInfo.id': spotifyID }, function (err, song) {\n        if (err) {\n          console.log(err);\n          return reject(err);\n        }\n        // IF the song already exists, create a completed songRequest with it\n        // and resolve with it\n        if (song) {\n          db.createSongRequest({ spotify_id: spotifyID, status: status.COMPLETED, is_processing: false, song_id: song.id }).then(createdRequest => resolve(_extends({}, createdRequest, { song }))).catch(err => reject(err));\n        } else {\n          createSongRequest(spotifyID).then(newRequest => resolve(newRequest)).catch(err => reject(err));\n        }\n      });\n    });\n  });\n}\n\nfunction createSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    function finish(songRequest) {\n      services.songRequest.publish(events.SONGREQUEST_CREATED, songRequest);\n      resolve(songRequest);\n    }\n\n    db.createSongRequest({ spotify_id: spotifyID, status: status.GETTING_SPOTIFY_INFO, is_processing: true }).then(createdRequest => finish(createdRequest)).catch(err => reject(err));\n  });\n}\n\nfunction requestAudioForSongRequest({ youTubeIDs, spotifyID }) {\n  return new Promise((resolve, reject) => {\n    const webHookURL = `${process.env.BASE_URL}/v1/songRequests/complete/${spotifyID}`;\n    const webHookAPIToken = process.env.API_TOKEN;\n    youTubeAudioProcessor.requestAudio({ youTubeIDs, spotifyID, webHookURL, webHookAPIToken }).then(() => {\n      scheduleAudioDownloadCheck({ spotifyID });\n      resolve();\n    }).catch(err => reject(err));\n  });\n}\n\nfunction requestReplacementAudioForSong({ youTubeID, songID }) {\n  const webHookURL = `${process.env.BASE_URL}/v1/songs/${songID}/replaceAudio`;\n  return youTubeAudioProcessor.requestAudio({ webHookURL, youTubeIDs: [youTubeID] });\n}\n\nfunction completeReplaceAudioForSong({ key, songID }) {\n  return new Promise((resolve, reject) => {\n    Song.findOneAndUpdate({ _id: songID }, { $set: { key } }, { new: true }).then(updatedSong => resolve(updatedSong)).catch(err => reject(err));\n  });\n}\n\n// waits and marks the status as AUDIO_DOWNLOAD_TIMED_OUT if it has not\n// returned after waitTimeMS\nfunction scheduleAudioDownloadCheck({ spotifyID, waitTimeMS }) {\n  var waitTimeMS = waitTimeMS || 1000 * 60; // default 1 min\n  setTimeout(() => {\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => {\n      if (songRequest.status == status.DOWNLOADING_AUDIO) {\n        db.updateSongRequestWithID(songRequest.id, { status: status.AUDIO_DOWNLOAD_TIMED_OUT,\n          is_processing: false }).catch(err => console.log(err));\n      }\n    });\n  }, waitTimeMS);\n}\n\nfunction completeSongAcquisition({ spotifyID, key }) {\n  return new Promise((resolve, reject) => {\n    function finish(err, data) {\n      if (err) {\n        console.log(err);\n        return reject(err);\n      }\n      services.song.publish(events.SONG_CREATED, data);\n      return resolve(data);\n    }\n\n    db.getSongRequestWithSpotifyID(spotifyID).then(songRequest => {\n      // IF a song already exists, just updated the\n      // key -- this is to avoid duplicates in race condition\n      Song.findOne({ 'spotifyInfo.id': spotifyID }).then(foundSong => {\n        if (foundSong) {\n          foundSong.key = key;\n          Promise.all([db.updateSongRequestWithID(songRequest.id, { song_id: foundSong.id }), foundSong.save()]).then(results => resolve(_extends({}, results[0], { song: foundSong }))).catch(err => reject(err));\n        } else {\n          var song = Song.newFromSpotifyInfo(songRequest.spotify_info);\n          song.key = key;\n          song.save(err => {\n            if (err) return finish(err);\n            db.updateSongRequestWithID(songRequest.id, { status: status.COMPLETED,\n              completed: 'now()',\n              song_id: song.id,\n              is_processing: false }).then(savedSongRequest => finish(null, song)).catch(err => finish(err));\n          });\n        }\n      }).catch(err => finish(err));\n    }).catch(err => finish(err));\n  });\n}\n\nfunction getSongRequestsMatchingQueryString(queryString) {\n  // allow statuses to be queried by their KEY\n  if (Object.keys(status).includes(queryString)) {\n    queryString = status[queryString];\n  }\n  return db.getSongRequestsMatchingQuery(queryString);\n}\n\nmodule.exports = {\n  getOrCreateSongRequest,\n  createSongRequest,\n  requestAudioForSongRequest,\n  requestReplacementAudioForSong,\n  completeReplaceAudioForSong,\n  completeSongAcquisition,\n  getSongRequestsMatchingQueryString\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "lib.js"
      ],
      "names": [
        "spotify",
        "require",
        "Song",
        "AWS",
        "services",
        "events",
        "db",
        "errors",
        "status",
        "youTubeAudioProcessor",
        "getOrCreateSongRequest",
        "spotifyID",
        "Promise",
        "resolve",
        "reject",
        "Error",
        "getSongRequestWithSpotifyID",
        "then",
        "songRequest",
        "song_id",
        "findById",
        "song",
        "catch",
        "err",
        "message",
        "SONG_REQUEST_DOES_NOT_EXIST",
        "findOne",
        "console",
        "log",
        "createSongRequest",
        "spotify_id",
        "COMPLETED",
        "is_processing",
        "id",
        "createdRequest",
        "newRequest",
        "finish",
        "publish",
        "SONGREQUEST_CREATED",
        "GETTING_SPOTIFY_INFO",
        "requestAudioForSongRequest",
        "youTubeIDs",
        "webHookURL",
        "process",
        "env",
        "BASE_URL",
        "webHookAPIToken",
        "API_TOKEN",
        "requestAudio",
        "scheduleAudioDownloadCheck",
        "requestReplacementAudioForSong",
        "youTubeID",
        "songID",
        "completeReplaceAudioForSong",
        "key",
        "findOneAndUpdate",
        "_id",
        "$set",
        "new",
        "updatedSong",
        "waitTimeMS",
        "setTimeout",
        "DOWNLOADING_AUDIO",
        "updateSongRequestWithID",
        "AUDIO_DOWNLOAD_TIMED_OUT",
        "completeSongAcquisition",
        "data",
        "SONG_CREATED",
        "foundSong",
        "all",
        "save",
        "results",
        "newFromSpotifyInfo",
        "spotify_info",
        "completed",
        "savedSongRequest",
        "getSongRequestsMatchingQueryString",
        "queryString",
        "Object",
        "keys",
        "includes",
        "getSongRequestsMatchingQuery",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "lib.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "const spotify = require('./services/spotify')\nconst Song = require('./mongoose/song')\nconst AWS = require('aws-sdk')\nconst services = require('./services')\nconst events = require('./events')\nconst db = require('./db')\nconst errors = require('./errors')\nconst status = require('./status')\n\nconst youTubeAudioProcessor = require('./services/youTubeAudioProcessor')\n\nfunction getOrCreateSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    if (!spotifyID) return reject(new Error('spotifyID not included'))\n    // first search songRequest\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => {\n        if (songRequest.song_id) {\n          Song.findById(songRequest.song_id)\n            .then(song => resolve({ ...songRequest, song }))\n            .catch(err => reject(err))\n        } else {\n          resolve(songRequest)\n        }\n      })\n      .catch(err => {\n        if (err.message !== errors.SONG_REQUEST_DOES_NOT_EXIST) return reject(err)\n        // check if song already exists\n\n        Song.findOne({ 'spotifyInfo.id': spotifyID }, function (err, song) {\n          if (err) {\n            console.log(err)\n            return reject(err)\n          }\n          // IF the song already exists, create a completed songRequest with it\n          // and resolve with it\n          if (song) {\n            db.createSongRequest({ spotify_id: spotifyID, status: status.COMPLETED, is_processing: false, song_id: song.id })\n              .then(createdRequest => resolve({ ...createdRequest, song })) \n              .catch(err => reject(err))\n          } else {\n            createSongRequest(spotifyID)\n              .then(newRequest => resolve(newRequest))\n              .catch(err => reject(err))\n          }\n        })\n      })\n  })\n}\n\nfunction createSongRequest(spotifyID) {\n  return new Promise((resolve, reject) => {\n    function finish(songRequest) {\n      services.songRequest.publish(\n          events.SONGREQUEST_CREATED,\n          songRequest\n        )\n      resolve(songRequest)\n    }\n\n    db.createSongRequest({ spotify_id: spotifyID, status: status.GETTING_SPOTIFY_INFO, is_processing: true })\n      .then(createdRequest => finish(createdRequest))\n      .catch(err => reject(err))\n  })\n}\n\nfunction requestAudioForSongRequest({ youTubeIDs, spotifyID }) {\n  return new Promise((resolve, reject) => {\n    const webHookURL = `${process.env.BASE_URL}/v1/songRequests/complete/${spotifyID}`\n    const webHookAPIToken = process.env.API_TOKEN\n    youTubeAudioProcessor.requestAudio({ youTubeIDs, spotifyID, webHookURL, webHookAPIToken })\n      .then(() => { \n        scheduleAudioDownloadCheck({ spotifyID })\n        resolve()\n      })\n      .catch(err => reject(err))\n  })\n}\n\nfunction requestReplacementAudioForSong({ youTubeID, songID }) {\n  const webHookURL = `${process.env.BASE_URL}/v1/songs/${songID}/replaceAudio`\n  return youTubeAudioProcessor.requestAudio({ webHookURL, youTubeIDs: [youTubeID] })\n}\n\nfunction completeReplaceAudioForSong({ key, songID }) {\n  return new Promise((resolve, reject) => {\n    Song.findOneAndUpdate({ _id: songID }, { $set: { key } },{ new: true })\n      .then(updatedSong => resolve(updatedSong))\n      .catch(err => reject(err))\n  })\n}\n\n// waits and marks the status as AUDIO_DOWNLOAD_TIMED_OUT if it has not\n// returned after waitTimeMS\nfunction scheduleAudioDownloadCheck({ spotifyID, waitTimeMS }) {\n  var waitTimeMS = waitTimeMS || 1000*60    // default 1 min\n  setTimeout(() => {\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => {\n        if (songRequest.status == status.DOWNLOADING_AUDIO) {\n          db.updateSongRequestWithID(songRequest.id, { status: status.AUDIO_DOWNLOAD_TIMED_OUT,\n                                                       is_processing: false })\n            .catch(err => console.log(err))\n        }\n      })\n  }, waitTimeMS)\n}\n\nfunction completeSongAcquisition({ spotifyID, key }) {\n  return new Promise((resolve, reject) => {\n    function finish(err, data) {\n      if (err) { \n        console.log(err)\n       return reject(err)\n      }\n      services.song.publish(\n        events.SONG_CREATED,\n        data\n      )\n      return resolve(data)\n    }\n\n    db.getSongRequestWithSpotifyID(spotifyID)\n      .then(songRequest => {\n        // IF a song already exists, just updated the\n        // key -- this is to avoid duplicates in race condition\n        Song.findOne({ 'spotifyInfo.id': spotifyID })\n            .then(foundSong => {\n              if (foundSong) {\n                foundSong.key = key\n                Promise.all([db.updateSongRequestWithID(songRequest.id, { song_id: foundSong.id }),\n                             foundSong.save() ])\n                  .then((results) => resolve({ ...results[0], \n                                               ...{ song: foundSong }\n                                            })\n                  )\n                  .catch(err => reject(err))\n              } else {\n                var song = Song.newFromSpotifyInfo(songRequest.spotify_info)\n                song.key = key\n                song.save((err) => {\n                  if (err) return finish(err)\n                  db.updateSongRequestWithID(songRequest.id, { status: status.COMPLETED,\n                                                               completed: 'now()',\n                                                               song_id: song.id,\n                                                               is_processing: false })\n                    .then((savedSongRequest) => finish(null, song))\n                    .catch(err => finish(err))\n                })\n              }\n            })\n            .catch(err => finish(err))\n      })\n      .catch(err => finish(err))\n  })\n}\n\nfunction getSongRequestsMatchingQueryString(queryString) {\n  // allow statuses to be queried by their KEY\n  if (Object.keys(status).includes(queryString)) {\n    queryString = status[queryString]\n  }\n  return db.getSongRequestsMatchingQuery(queryString)\n}\n\nmodule.exports = { \n  getOrCreateSongRequest,\n  createSongRequest,\n  requestAudioForSongRequest,\n  requestReplacementAudioForSong,\n  completeReplaceAudioForSong,\n  completeSongAcquisition,\n  getSongRequestsMatchingQueryString\n}\n"
      ]
    },
    "mtime": 1524591609000
  },
  "{\"filename\":\"/home/playola/lib/services/spotify.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/spotify.js",
      "filenameRelative": "/home/playola/lib/services/spotify.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "spotify.js",
      "sourceFileName": "spotify.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "spotify"
    },
    "ignored": false,
    "code": "const axios = require('axios');\nconst api = axios.create({\n  baseURL: process.env.SERVICE_BASE_URL_SPOTIFY_INTERFACE\n});\nconst { httpErrorFromAPIError } = require('./utils');\n\nfunction getSongWithID(spotifyID) {\n  return new Promise((resolve, reject) => {\n    api.get(`/songs/${spotifyID}`).then(res => resolve(res.data)).catch(err => {\n      if (err.statusCode && err.statusCode == 503) {\n        getSongWithID(spotifyID).then(data => resolve(data)).catch(err => reject(err));\n      } else {\n        reject(httpErrorFromAPIError(err));\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  getSongWithID\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwb3RpZnkuanMiXSwibmFtZXMiOlsiYXhpb3MiLCJyZXF1aXJlIiwiYXBpIiwiY3JlYXRlIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX0JBU0VfVVJMX1NQT1RJRllfSU5URVJGQUNFIiwiaHR0cEVycm9yRnJvbUFQSUVycm9yIiwiZ2V0U29uZ1dpdGhJRCIsInNwb3RpZnlJRCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZ2V0IiwidGhlbiIsInJlcyIsImRhdGEiLCJjYXRjaCIsImVyciIsInN0YXR1c0NvZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLE1BQU1GLE1BQU1HLE1BQU4sQ0FBYTtBQUN2QkMsV0FBU0MsUUFBUUMsR0FBUixDQUFZQztBQURFLENBQWIsQ0FBWjtBQUdBLE1BQU0sRUFBRUMscUJBQUYsS0FBNEJQLFFBQVEsU0FBUixDQUFsQzs7QUFFQSxTQUFTUSxhQUFULENBQXVCQyxTQUF2QixFQUFrQztBQUNoQyxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENYLFFBQUlZLEdBQUosQ0FBUyxVQUFTSixTQUFVLEVBQTVCLEVBQ0dLLElBREgsQ0FDUUMsT0FBT0osUUFBUUksSUFBSUMsSUFBWixDQURmLEVBRUdDLEtBRkgsQ0FFU0MsT0FBTztBQUNaLFVBQUlBLElBQUlDLFVBQUosSUFBbUJELElBQUlDLFVBQUosSUFBa0IsR0FBekMsRUFBK0M7QUFDN0NYLHNCQUFjQyxTQUFkLEVBQ0dLLElBREgsQ0FDUUUsUUFBUUwsUUFBUUssSUFBUixDQURoQixFQUVHQyxLQUZILENBRVNDLE9BQU9OLE9BQU9NLEdBQVAsQ0FGaEI7QUFHRCxPQUpELE1BSU87QUFDTE4sZUFBT0wsc0JBQXNCVyxHQUF0QixDQUFQO0FBQ0Q7QUFDRixLQVZIO0FBV0QsR0FaTSxDQUFQO0FBYUQ7O0FBRURFLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmI7QUFEZSxDQUFqQiIsImZpbGUiOiJzcG90aWZ5LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpXG5jb25zdCBhcGkgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOiBwcm9jZXNzLmVudi5TRVJWSUNFX0JBU0VfVVJMX1NQT1RJRllfSU5URVJGQUNFXG59KVxuY29uc3QgeyBodHRwRXJyb3JGcm9tQVBJRXJyb3IgfSA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5mdW5jdGlvbiBnZXRTb25nV2l0aElEKHNwb3RpZnlJRCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGFwaS5nZXQoYC9zb25ncy8ke3Nwb3RpZnlJRH1gKVxuICAgICAgLnRoZW4ocmVzID0+IHJlc29sdmUocmVzLmRhdGEpKVxuICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIGlmIChlcnIuc3RhdHVzQ29kZSAmJiAoZXJyLnN0YXR1c0NvZGUgPT0gNTAzKSkge1xuICAgICAgICAgIGdldFNvbmdXaXRoSUQoc3BvdGlmeUlEKVxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiByZXNvbHZlKGRhdGEpKVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiByZWplY3QoZXJyKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QoaHR0cEVycm9yRnJvbUFQSUVycm9yKGVycikpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRTb25nV2l0aElEXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "spotify.js"
      ],
      "names": [
        "axios",
        "require",
        "api",
        "create",
        "baseURL",
        "process",
        "env",
        "SERVICE_BASE_URL_SPOTIFY_INTERFACE",
        "httpErrorFromAPIError",
        "getSongWithID",
        "spotifyID",
        "Promise",
        "resolve",
        "reject",
        "get",
        "then",
        "res",
        "data",
        "catch",
        "err",
        "statusCode",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,MAAMF,MAAMG,MAAN,CAAa;AACvBC,WAASC,QAAQC,GAAR,CAAYC;AADE,CAAb,CAAZ;AAGA,MAAM,EAAEC,qBAAF,KAA4BP,QAAQ,SAAR,CAAlC;;AAEA,SAASQ,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,QAAIY,GAAJ,CAAS,UAASJ,SAAU,EAA5B,EACGK,IADH,CACQC,OAAOJ,QAAQI,IAAIC,IAAZ,CADf,EAEGC,KAFH,CAESC,OAAO;AACZ,UAAIA,IAAIC,UAAJ,IAAmBD,IAAIC,UAAJ,IAAkB,GAAzC,EAA+C;AAC7CX,sBAAcC,SAAd,EACGK,IADH,CACQE,QAAQL,QAAQK,IAAR,CADhB,EAEGC,KAFH,CAESC,OAAON,OAAOM,GAAP,CAFhB;AAGD,OAJD,MAIO;AACLN,eAAOL,sBAAsBW,GAAtB,CAAP;AACD;AACF,KAVH;AAWD,GAZM,CAAP;AAaD;;AAEDE,OAAOC,OAAP,GAAiB;AACfb;AADe,CAAjB",
      "file": "spotify.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const axios = require('axios')\nconst api = axios.create({\n  baseURL: process.env.SERVICE_BASE_URL_SPOTIFY_INTERFACE\n})\nconst { httpErrorFromAPIError } = require('./utils')\n\nfunction getSongWithID(spotifyID) {\n  return new Promise((resolve, reject) => {\n    api.get(`/songs/${spotifyID}`)\n      .then(res => resolve(res.data))\n      .catch(err => {\n        if (err.statusCode && (err.statusCode == 503)) {\n          getSongWithID(spotifyID)\n            .then(data => resolve(data))\n            .catch(err => reject(err))\n        } else {\n          reject(httpErrorFromAPIError(err))\n        }\n      })\n  })\n}\n\nmodule.exports = {\n  getSongWithID\n}"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/services/utils.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/utils.js",
      "filenameRelative": "/home/playola/lib/services/utils.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "utils.js",
      "sourceFileName": "utils.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "utils"
    },
    "ignored": false,
    "code": "const HttpError = require('../models/HttpError');\n\nfunction httpErrorFromAPIError(error) {\n  console.log('error: ', error);\n  const res = error.response;\n  return new HttpError(res.status, res.data.message);\n}\n\nmodule.exports = {\n  httpErrorFromAPIError\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbIkh0dHBFcnJvciIsInJlcXVpcmUiLCJodHRwRXJyb3JGcm9tQVBJRXJyb3IiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJyZXMiLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsWUFBWUMsUUFBUSxxQkFBUixDQUFsQjs7QUFFQSxTQUFTQyxxQkFBVCxDQUErQkMsS0FBL0IsRUFBc0M7QUFDcENDLFVBQVFDLEdBQVIsQ0FBWSxTQUFaLEVBQXVCRixLQUF2QjtBQUNBLFFBQU1HLE1BQU1ILE1BQU1JLFFBQWxCO0FBQ0EsU0FBTyxJQUFJUCxTQUFKLENBQWNNLElBQUlFLE1BQWxCLEVBQTBCRixJQUFJRyxJQUFKLENBQVNDLE9BQW5DLENBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmVjtBQURlLENBQWpCIiwiZmlsZSI6InV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSHR0cEVycm9yID0gcmVxdWlyZSgnLi4vbW9kZWxzL0h0dHBFcnJvcicpXG5cbmZ1bmN0aW9uIGh0dHBFcnJvckZyb21BUElFcnJvcihlcnJvcikge1xuICBjb25zb2xlLmxvZygnZXJyb3I6ICcsIGVycm9yKVxuICBjb25zdCByZXMgPSBlcnJvci5yZXNwb25zZVxuICByZXR1cm4gbmV3IEh0dHBFcnJvcihyZXMuc3RhdHVzLCByZXMuZGF0YS5tZXNzYWdlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaHR0cEVycm9yRnJvbUFQSUVycm9yXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "HttpError",
        "require",
        "httpErrorFromAPIError",
        "error",
        "console",
        "log",
        "res",
        "response",
        "status",
        "data",
        "message",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,qBAAR,CAAlB;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpCC,UAAQC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,QAAMG,MAAMH,MAAMI,QAAlB;AACA,SAAO,IAAIP,SAAJ,CAAcM,IAAIE,MAAlB,EAA0BF,IAAIG,IAAJ,CAASC,OAAnC,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiB;AACfV;AADe,CAAjB",
      "file": "utils.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const HttpError = require('../models/HttpError')\n\nfunction httpErrorFromAPIError(error) {\n  console.log('error: ', error)\n  const res = error.response\n  return new HttpError(res.status, res.data.message)\n}\n\nmodule.exports = {\n  httpErrorFromAPIError\n}"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/models/HttpError.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/models/HttpError.js",
      "filenameRelative": "/home/playola/lib/models/HttpError.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "HttpError.js",
      "sourceFileName": "HttpError.js",
      "sourceRoot": "/home/playola/lib/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "HttpError"
    },
    "ignored": false,
    "code": "class HttpError {\n  static get defaults() {\n    return {\n      statusCode: 400,\n      message: \"An unknown error occurred\"\n    };\n  }\n\n  constructor(statusCode, message) {\n    this.error = new Error(message);\n    this.message = message || HttpError.defaults.message;\n    this.statusCode = statusCode || HttpError.defaults.statusCode;\n  }\n}\n\nmodule.exports = HttpError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkh0dHBFcnJvci5qcyJdLCJuYW1lcyI6WyJIdHRwRXJyb3IiLCJkZWZhdWx0cyIsInN0YXR1c0NvZGUiLCJtZXNzYWdlIiwiY29uc3RydWN0b3IiLCJlcnJvciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBTixDQUFnQjtBQUNkLGFBQVdDLFFBQVgsR0FBc0I7QUFDcEIsV0FBTztBQUNMQyxrQkFBWSxHQURQO0FBRUxDLGVBQVM7QUFGSixLQUFQO0FBSUQ7O0FBRURDLGNBQVlGLFVBQVosRUFBd0JDLE9BQXhCLEVBQWlDO0FBQy9CLFNBQUtFLEtBQUwsR0FBYSxJQUFJQyxLQUFKLENBQVVILE9BQVYsQ0FBYjtBQUNBLFNBQUtBLE9BQUwsR0FBZUEsV0FBV0gsVUFBVUMsUUFBVixDQUFtQkUsT0FBN0M7QUFDQSxTQUFLRCxVQUFMLEdBQWtCQSxjQUFjRixVQUFVQyxRQUFWLENBQW1CQyxVQUFuRDtBQUNEO0FBWmE7O0FBZWhCSyxPQUFPQyxPQUFQLEdBQWlCUixTQUFqQiIsImZpbGUiOiJIdHRwRXJyb3IuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSHR0cEVycm9yIHtcbiAgc3RhdGljIGdldCBkZWZhdWx0cygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzQ29kZTogNDAwLFxuICAgICAgbWVzc2FnZTogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkXCJcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCBtZXNzYWdlKSB7XG4gICAgdGhpcy5lcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKVxuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgSHR0cEVycm9yLmRlZmF1bHRzLm1lc3NhZ2VcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlIHx8IEh0dHBFcnJvci5kZWZhdWx0cy5zdGF0dXNDb2RlXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIdHRwRXJyb3IiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "HttpError.js"
      ],
      "names": [
        "HttpError",
        "defaults",
        "statusCode",
        "message",
        "constructor",
        "error",
        "Error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAN,CAAgB;AACd,aAAWC,QAAX,GAAsB;AACpB,WAAO;AACLC,kBAAY,GADP;AAELC,eAAS;AAFJ,KAAP;AAID;;AAEDC,cAAYF,UAAZ,EAAwBC,OAAxB,EAAiC;AAC/B,SAAKE,KAAL,GAAa,IAAIC,KAAJ,CAAUH,OAAV,CAAb;AACA,SAAKA,OAAL,GAAeA,WAAWH,UAAUC,QAAV,CAAmBE,OAA7C;AACA,SAAKD,UAAL,GAAkBA,cAAcF,UAAUC,QAAV,CAAmBC,UAAnD;AACD;AAZa;;AAehBK,OAAOC,OAAP,GAAiBR,SAAjB",
      "file": "HttpError.js",
      "sourceRoot": "/home/playola/lib/models",
      "sourcesContent": [
        "class HttpError {\n  static get defaults() {\n    return {\n      statusCode: 400,\n      message: \"An unknown error occurred\"\n    }\n  }\n\n  constructor(statusCode, message) {\n    this.error = new Error(message)\n    this.message = message || HttpError.defaults.message\n    this.statusCode = statusCode || HttpError.defaults.statusCode\n  }\n}\n\nmodule.exports = HttpError"
      ]
    },
    "mtime": 1521829388000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/index.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "var Song = require('./song.model');\n\nmodule.exports = Song;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlNvbmciLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBT0MsUUFBUSxjQUFSLENBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJILElBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliL21vbmdvb3NlL3NvbmciLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU29uZyA9IHJlcXVpcmUoJy4vc29uZy5tb2RlbCcpXG5cbm1vZHVsZS5leHBvcnRzID0gU29uZyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Song",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAOC,QAAQ,cAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiBH,IAAjB",
      "file": "index.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "var Song = require('./song.model')\n\nmodule.exports = Song"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/song.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/song.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/song.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "song.model.js",
      "sourceFileName": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "song.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst AudioBlockSchema = require('./audioBlock.schema');\nconst AudioBlock = require('./audioBlock.model');\n\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst _ = require('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags: {},\n  artist: { type: String },\n  artistID: { type: Schema.ObjectId, ref: 'Artist' },\n  title: { type: String },\n  album: { type: String },\n  albumArtworkUrl: { type: String },\n  albumArtworkUrlSmall: { type: String },\n  trackViewUrl: { type: String },\n  _eoi: { type: Number },\n  _eom: { type: Number },\n  _boo: { type: Number },\n  itunesTrackID: { type: String },\n  spotifyID: { type: String },\n  spotifyInfo: {},\n  itunesInfo: {},\n  verified: { type: Boolean },\n  explicit: { type: Boolean },\n  isrc: { type: String }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n        __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      };\n    }\n  }\n});\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"];\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n};\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom').get(function () {\n  if (!this._eom) {\n    return this.duration - 1000;\n  } else {\n    return this._eom;\n  }\n}).set(function (value) {\n  this._eom = value;\n});\n\nsongSchema.virtual('eoi').get(function () {\n  if (!this._eoi) {\n    return 0;\n  } else {\n    return this._eoi;\n  }\n}).set(function (value) {\n  this._eoi = value;\n});\n\nsongSchema.virtual('boo').get(function () {\n  if (!this._boo) {\n    return this.eom;\n  } else {\n    return this._boo;\n  }\n}).set(function (value) {\n  this._boo = value;\n});\n\nsongSchema.statics.getSpotifyIDs = function (limit = 1000) {\n  return new Promise((resolve, reject) => {\n    Song.find({ 'spotifyInfo.id': { $exists: true } }).limit(limit).exec(function (err, foundSongs) {\n      if (err) return reject(err);\n      return resolve(foundSongs.map(song => song.spotifyInfo.id));\n    });\n  });\n};\n\nconst Song = AudioBlock.discriminator('Song', songSchema);\nmodule.exports = Song;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "song.model.js"
      ],
      "names": [
        "AudioBlockSchema",
        "require",
        "AudioBlock",
        "mongoose",
        "Schema",
        "_",
        "songSchema",
        "originalTags",
        "artist",
        "type",
        "String",
        "artistID",
        "ObjectId",
        "ref",
        "title",
        "album",
        "albumArtworkUrl",
        "albumArtworkUrlSmall",
        "trackViewUrl",
        "_eoi",
        "Number",
        "_eom",
        "_boo",
        "itunesTrackID",
        "spotifyID",
        "spotifyInfo",
        "itunesInfo",
        "verified",
        "Boolean",
        "explicit",
        "isrc",
        "toObject",
        "virtuals",
        "transform",
        "doc",
        "ret",
        "options",
        "id",
        "key",
        "duration",
        "__t",
        "eoi",
        "eom",
        "boo",
        "audioFileUrl",
        "lastFMTags",
        "status",
        "statics",
        "newFromSpotifyInfo",
        "length",
        "Error",
        "song",
        "Song",
        "virtual",
        "get",
        "set",
        "value",
        "getSpotifyIDs",
        "limit",
        "Promise",
        "resolve",
        "reject",
        "find",
        "$exists",
        "exec",
        "err",
        "foundSongs",
        "map",
        "discriminator",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "song.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nconst AudioBlockSchema  =     require('./audioBlock.schema');\nconst AudioBlock        =     require('./audioBlock.model');\n\nconst mongoose          =     require('mongoose');\nconst Schema            =     mongoose.Schema;\nconst _                 =     require ('lodash');\n\nvar songSchema = new AudioBlockSchema({\n  originalTags:           {},\n  artist:                 { type: String  },\n  artistID:               { type: Schema.ObjectId, ref: 'Artist' },\n  title:                  { type: String  },\n  album:                  { type: String  },\n  albumArtworkUrl:        { type: String  },\n  albumArtworkUrlSmall:   { type: String  },\n  trackViewUrl:           { type: String  },\n  _eoi:                   { type: Number  },\n  _eom:                   { type: Number  },\n  _boo:                   { type: Number  },\n  itunesTrackID:          { type: String  },\n  spotifyID:              { type: String  },\n  spotifyInfo:            {},\n  itunesInfo:             {},\n  verified:               { type: Boolean },\n  explicit:               { type: Boolean },\n  isrc:                   { type: String  }\n}, {\n  toObject: {\n    virtuals: true,\n    transform: function (doc, ret, options) {\n      return {\n        id: ret.id,\n        key: ret.key,\n        isrc: ret.isrc,\n        duration: ret.duration,\n         __t: ret.__t,\n        artist: ret.artist,\n        title: ret.title,\n        album: ret.album,\n        itunesTrackID: ret.itunesTrackID,\n        albumArtworkUrl: ret.albumArtworkUrl,\n        albumArtworkUrlSmall: ret.albumArtworkUrlSmall,\n        trackViewUrl: ret.trackViewUrl,\n        eoi: ret.eoi,\n        eom: ret.eom,\n        boo: ret.boo,\n        audioFileUrl: ret.audioFileUrl,\n        lastFMTags: ret.lastFMTags,\n        status: ret.status,\n        spotifyInfo: ret.spotifyInfo,\n        spotifyID: ret.spotifyID\n      }\n    }\n  }\n})\n\nsongSchema.statics.newFromSpotifyInfo = function (spotifyInfo) {\n  // validation\n  if (!spotifyInfo[\"artists\"] || !spotifyInfo[\"artists\"].length) {\n    throw new Error('no artists in spotifyInfo');\n  }\n\n  if (!spotifyInfo[\"album\"]) {\n    throw new Error('no album in spotifyInfo');\n  }\n\n  // creation\n  var song = new Song();\n  song.artist = spotifyInfo[\"artists\"][0][\"name\"];\n  song.title = spotifyInfo[\"name\"];\n  song.album = spotifyInfo[\"album\"][\"name\"];\n  song.duration = spotifyInfo[\"duration_ms\"];\n  song.spotifyID = spotifyInfo[\"id\"]\n  song.spotifyInfo = spotifyInfo;\n  song.explicit = spotifyInfo.explicit;\n  if (spotifyInfo[\"external_ids\"]) {\n    song.isrc = spotifyInfo[\"external_ids\"][\"isrc\"];\n  }\n  if (spotifyInfo[\"album\"] && spotifyInfo[\"album\"][\"images\"] && spotifyInfo[\"album\"][\"images\"].length) {\n    song.albumArtworkUrl = spotifyInfo[\"album\"][\"images\"][0][\"url\"];\n  }\n  return song;\n}\n\n// provide defaults for eom, eoi, boo\nsongSchema.virtual('eom')\n  .get(function () {\n    if (!this._eom) {\n      return this.duration - 1000;\n    } else {\n      return this._eom;\n    }\n  })\n  .set(function (value) {\n    this._eom = value;\n  })\n\nsongSchema.virtual('eoi')\n  .get(function () {\n    if (!this._eoi) {\n      return 0;\n    } else {\n      return this._eoi;\n    }\n  })\n  .set(function (value) {\n    this._eoi = value;\n  })\n\nsongSchema.virtual('boo')\n  .get(function () {\n    if (!this._boo) {\n      return this.eom;\n    } else {\n      return this._boo;\n    }\n  })\n  .set(function (value) {\n    this._boo = value;\n  })\n\n\nsongSchema.statics.getSpotifyIDs = function (limit=1000) {\n  return new Promise((resolve, reject) => {\n    Song\n      .find({ 'spotifyInfo.id': { $exists: true }})\n      .limit(limit)\n      .exec(function (err, foundSongs) {\n        if (err) return reject(err)\n        return resolve(foundSongs.map(song => song.spotifyInfo.id))\n      })\n  })\n}\n\nconst Song = AudioBlock.discriminator('Song', songSchema)\nmodule.exports = Song\n"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/audioBlock.schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/audioBlock.schema.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/audioBlock.schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.schema.js",
      "sourceFileName": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type: { type: String },\n    key: { type: String },\n    duration: { type: Number }\n  });\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2suc2NoZW1hLmpzIl0sIm5hbWVzIjpbInV0aWwiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJBdWRpb0Jsb2NrU2NoZW1hIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJhZGQiLCJ0eXBlIiwiU3RyaW5nIiwia2V5IiwiZHVyYXRpb24iLCJOdW1iZXIiLCJpbmhlcml0cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLE9BQU9DLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUMsV0FBV0QsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJRSxTQUFTRCxTQUFTQyxNQUR0Qjs7QUFHQSxTQUFTQyxnQkFBVCxHQUE0QjtBQUMxQkQsU0FBT0UsS0FBUCxDQUFhLElBQWIsRUFBbUJDLFNBQW5COztBQUVBLE9BQUtDLEdBQUwsQ0FBUztBQUNQQyxVQUFvQixFQUFFQSxNQUFNQyxNQUFSLEVBRGI7QUFFUEMsU0FBb0IsRUFBRUYsTUFBTUMsTUFBUixFQUZiO0FBR1BFLGNBQW9CLEVBQUVILE1BQU1JLE1BQVI7QUFIYixHQUFUO0FBT0Q7QUFDRFosS0FBS2EsUUFBTCxDQUFjVCxnQkFBZCxFQUFnQ0QsTUFBaEM7O0FBRUFXLE9BQU9DLE9BQVAsR0FBaUJYLGdCQUFqQiIsImZpbGUiOiJhdWRpb0Jsb2NrLnNjaGVtYS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZS9zb25nIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbnZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyksXG4gICAgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xuXG5mdW5jdGlvbiBBdWRpb0Jsb2NrU2NoZW1hKCkge1xuICBTY2hlbWEuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICB0aGlzLmFkZCh7XG4gICAgdHlwZTogICAgICAgICAgICAgICB7IHR5cGU6IFN0cmluZyB9LFxuICAgIGtleTogICAgICAgICAgICAgICAgeyB0eXBlOiBTdHJpbmcgfSxcbiAgICBkdXJhdGlvbjogICAgICAgICAgIHsgdHlwZTogTnVtYmVyIH1cbiAgfSk7XG5cblxufVxudXRpbC5pbmhlcml0cyhBdWRpb0Jsb2NrU2NoZW1hLCBTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF1ZGlvQmxvY2tTY2hlbWEiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.schema.js"
      ],
      "names": [
        "util",
        "require",
        "mongoose",
        "Schema",
        "AudioBlockSchema",
        "apply",
        "arguments",
        "add",
        "type",
        "String",
        "key",
        "duration",
        "Number",
        "inherits",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AAAA,IACIE,SAASD,SAASC,MADtB;;AAGA,SAASC,gBAAT,GAA4B;AAC1BD,SAAOE,KAAP,CAAa,IAAb,EAAmBC,SAAnB;;AAEA,OAAKC,GAAL,CAAS;AACPC,UAAoB,EAAEA,MAAMC,MAAR,EADb;AAEPC,SAAoB,EAAEF,MAAMC,MAAR,EAFb;AAGPE,cAAoB,EAAEH,MAAMI,MAAR;AAHb,GAAT;AAOD;AACDZ,KAAKa,QAAL,CAAcT,gBAAd,EAAgCD,MAAhC;;AAEAW,OAAOC,OAAP,GAAiBX,gBAAjB",
      "file": "audioBlock.schema.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nvar util = require('util');\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nfunction AudioBlockSchema() {\n  Schema.apply(this, arguments);\n\n  this.add({\n    type:               { type: String },\n    key:                { type: String },\n    duration:           { type: Number }\n  });\n\n\n}\nutil.inherits(AudioBlockSchema, Schema);\n\nmodule.exports = AudioBlockSchema"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/mongoose/song/audioBlock.model.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/mongoose/song\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/mongoose/song/audioBlock.model.js",
      "filenameRelative": "/home/playola/lib/mongoose/song/audioBlock.model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "audioBlock.model.js",
      "sourceFileName": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/mongoose/song",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "audioBlock.model"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n    _type: { type: String } }, { collection: 'audioBlocks' });\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({ \"__t\": 1, \"_id\": 1 });\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvQmxvY2subW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiU2NoZW1hIiwiQXVkaW9CbG9ja1NjaGVtYSIsInRpbWVzdGFtcHMiLCJNb2RlbFNjaGVtYSIsIl9fdCIsInR5cGUiLCJTdHJpbmciLCJpbmRleCIsIl90eXBlIiwiY29sbGVjdGlvbiIsInBsdWdpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsV0FBV0MsUUFBUSxVQUFSLENBQWY7QUFBQSxJQUNJQyxTQUFTRixTQUFTRSxNQUR0QjtBQUVBLElBQUlDLG1CQUFtQkYsUUFBUSxxQkFBUixDQUF2QjtBQUNBLElBQUlHLGFBQWFILFFBQVEsb0JBQVIsQ0FBakI7QUFDQSxJQUFJSSxjQUFjLElBQUlGLGdCQUFKLENBQXFCLEVBQUVHLEtBQUssRUFBRUMsTUFBTUMsTUFBUixFQUFnQkMsT0FBTyxJQUF2QixFQUFQO0FBQ0NDLFdBQU8sRUFBRUgsTUFBTUMsTUFBUixFQURSLEVBQXJCLEVBRWhCLEVBQUVHLFlBQVksYUFBZCxFQUZnQixDQUFsQjs7QUFLQU4sWUFBWU8sTUFBWixDQUFtQlIsVUFBbkI7O0FBRUFDLFlBQVlJLEtBQVosQ0FBa0IsRUFBQyxPQUFPLENBQVIsRUFBVyxPQUFPLENBQWxCLEVBQWxCOztBQUVBSSxPQUFPQyxPQUFQLEdBQWlCZCxTQUFTZSxLQUFULENBQWUsWUFBZixFQUE2QlYsV0FBN0IsQ0FBakIiLCJmaWxlIjoiYXVkaW9CbG9jay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9tb25nb29zZS9zb25nIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpLFxuICAgIFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcbnZhciBBdWRpb0Jsb2NrU2NoZW1hID0gcmVxdWlyZSgnLi9hdWRpb0Jsb2NrLnNjaGVtYScpO1xudmFyIHRpbWVzdGFtcHMgPSByZXF1aXJlKCdtb25nb29zZS10aW1lc3RhbXAnKTtcbnZhciBNb2RlbFNjaGVtYSA9IG5ldyBBdWRpb0Jsb2NrU2NoZW1hKHsgX190OiB7IHR5cGU6IFN0cmluZywgaW5kZXg6IHRydWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdHlwZTogeyB0eXBlOiBTdHJpbmcgfSB9LFxuICB7IGNvbGxlY3Rpb246ICdhdWRpb0Jsb2NrcycgfVxuKTtcblxuTW9kZWxTY2hlbWEucGx1Z2luKHRpbWVzdGFtcHMpO1xuXG5Nb2RlbFNjaGVtYS5pbmRleCh7XCJfX3RcIjogMSwgXCJfaWRcIjogMX0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdBdWRpb0Jsb2NrJywgTW9kZWxTY2hlbWEpOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "audioBlock.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "AudioBlockSchema",
        "timestamps",
        "ModelSchema",
        "__t",
        "type",
        "String",
        "index",
        "_type",
        "collection",
        "plugin",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AAAA,IACIC,SAASF,SAASE,MADtB;AAEA,IAAIC,mBAAmBF,QAAQ,qBAAR,CAAvB;AACA,IAAIG,aAAaH,QAAQ,oBAAR,CAAjB;AACA,IAAII,cAAc,IAAIF,gBAAJ,CAAqB,EAAEG,KAAK,EAAEC,MAAMC,MAAR,EAAgBC,OAAO,IAAvB,EAAP;AACCC,WAAO,EAAEH,MAAMC,MAAR,EADR,EAArB,EAEhB,EAAEG,YAAY,aAAd,EAFgB,CAAlB;;AAKAN,YAAYO,MAAZ,CAAmBR,UAAnB;;AAEAC,YAAYI,KAAZ,CAAkB,EAAC,OAAO,CAAR,EAAW,OAAO,CAAlB,EAAlB;;AAEAI,OAAOC,OAAP,GAAiBd,SAASe,KAAT,CAAe,YAAf,EAA6BV,WAA7B,CAAjB",
      "file": "audioBlock.model.js",
      "sourceRoot": "/home/playola/lib/mongoose/song",
      "sourcesContent": [
        "'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\nvar AudioBlockSchema = require('./audioBlock.schema');\nvar timestamps = require('mongoose-timestamp');\nvar ModelSchema = new AudioBlockSchema({ __t: { type: String, index: true },\n                                        _type: { type: String } },\n  { collection: 'audioBlocks' }\n);\n\nModelSchema.plugin(timestamps);\n\nModelSchema.index({\"__t\": 1, \"_id\": 1});\n\nmodule.exports = mongoose.model('AudioBlock', ModelSchema);"
      ]
    },
    "mtime": 1523759812000
  },
  "{\"filename\":\"/home/playola/lib/events.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/events.js",
      "filenameRelative": "/home/playola/lib/events.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "events.js",
      "sourceFileName": "events.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "events"
    },
    "ignored": false,
    "code": "module.exports = {\n  SONGREQUEST_CREATED: 'songrequest.created',\n  SONGREQUEST_SPOTIFYINFO_RECEIVED: 'songrequest.spotifyinfo.received',\n  SONGREQUEST_SPOTIFYINFO_FAILED: 'songrequest.spotifyinfo.failed',\n  SONGREQUEST_YOUTUBEINFO_RECEIVED: 'songrequest.youtubeinfo.received',\n  SONGREQUEST_YOUTUBEINFO_FAILED: 'songrequest.youtubeinfo.failed',\n  SONG_CREATED: 'song.created'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiU09OR1JFUVVFU1RfQ1JFQVRFRCIsIlNPTkdSRVFVRVNUX1NQT1RJRllJTkZPX1JFQ0VJVkVEIiwiU09OR1JFUVVFU1RfU1BPVElGWUlORk9fRkFJTEVEIiwiU09OR1JFUVVFU1RfWU9VVFVCRUlORk9fUkVDRUlWRUQiLCJTT05HUkVRVUVTVF9ZT1VUVUJFSU5GT19GQUlMRUQiLCJTT05HX0NSRUFURUQiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLHVCQUFzQixxQkFEUDtBQUVmQyxvQ0FBbUMsa0NBRnBCO0FBR2ZDLGtDQUFpQyxnQ0FIbEI7QUFJZkMsb0NBQW1DLGtDQUpwQjtBQUtmQyxrQ0FBaUMsZ0NBTGxCO0FBTWZDLGdCQUFlO0FBTkEsQ0FBakIiLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3BsYXlvbGEvbGliIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNPTkdSRVFVRVNUX0NSRUFURUQgOiAnc29uZ3JlcXVlc3QuY3JlYXRlZCcsXG4gIFNPTkdSRVFVRVNUX1NQT1RJRllJTkZPX1JFQ0VJVkVEIDogJ3NvbmdyZXF1ZXN0LnNwb3RpZnlpbmZvLnJlY2VpdmVkJyxcbiAgU09OR1JFUVVFU1RfU1BPVElGWUlORk9fRkFJTEVEIDogJ3NvbmdyZXF1ZXN0LnNwb3RpZnlpbmZvLmZhaWxlZCcsXG4gIFNPTkdSRVFVRVNUX1lPVVRVQkVJTkZPX1JFQ0VJVkVEIDogJ3NvbmdyZXF1ZXN0LnlvdXR1YmVpbmZvLnJlY2VpdmVkJyxcbiAgU09OR1JFUVVFU1RfWU9VVFVCRUlORk9fRkFJTEVEIDogJ3NvbmdyZXF1ZXN0LnlvdXR1YmVpbmZvLmZhaWxlZCcsXG4gIFNPTkdfQ1JFQVRFRCA6ICdzb25nLmNyZWF0ZWQnXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "events.js"
      ],
      "names": [
        "module",
        "exports",
        "SONGREQUEST_CREATED",
        "SONGREQUEST_SPOTIFYINFO_RECEIVED",
        "SONGREQUEST_SPOTIFYINFO_FAILED",
        "SONGREQUEST_YOUTUBEINFO_RECEIVED",
        "SONGREQUEST_YOUTUBEINFO_FAILED",
        "SONG_CREATED"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,uBAAsB,qBADP;AAEfC,oCAAmC,kCAFpB;AAGfC,kCAAiC,gCAHlB;AAIfC,oCAAmC,kCAJpB;AAKfC,kCAAiC,gCALlB;AAMfC,gBAAe;AANA,CAAjB",
      "file": "events.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  SONGREQUEST_CREATED : 'songrequest.created',\n  SONGREQUEST_SPOTIFYINFO_RECEIVED : 'songrequest.spotifyinfo.received',\n  SONGREQUEST_SPOTIFYINFO_FAILED : 'songrequest.spotifyinfo.failed',\n  SONGREQUEST_YOUTUBEINFO_RECEIVED : 'songrequest.youtubeinfo.received',\n  SONGREQUEST_YOUTUBEINFO_FAILED : 'songrequest.youtubeinfo.failed',\n  SONG_CREATED : 'song.created'\n}"
      ]
    },
    "mtime": 1522882953000
  },
  "{\"filename\":\"/home/playola/lib/status.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/status.js",
      "filenameRelative": "/home/playola/lib/status.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "status.js",
      "sourceFileName": "status.js",
      "sourceRoot": "/home/playola/lib",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "status"
    },
    "ignored": false,
    "code": "module.exports = {\n  GETTING_SPOTIFY_INFO: `Looking up the song's info from spotify.`,\n  FAILED_TO_GET_SPOTIFY_INFO: 'There was an error retrieving the spotify info for this song',\n  GETTING_YOUTUBE_MATCHES: 'Looking up the youtube matches for this song.',\n  FAILED_TO_GET_YOUTUBE_MATCHES: 'There was an error getting the youtube matches for this song',\n\n  DOWNLOADING_AUDIO: 'The audio is being retreived',\n  FAILED_TO_DOWNLOAD_AUDIO: 'There was an error downloading the audio',\n  AUDIO_DOWNLOAD_TIMED_OUT: 'The audio download never returned',\n  MATCH_NOT_FOUND: 'The song could not be matched to the playola library',\n  PROCESSING: 'The song is being processed',\n  COMPLETED: 'The song has been processed'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXR1cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiR0VUVElOR19TUE9USUZZX0lORk8iLCJGQUlMRURfVE9fR0VUX1NQT1RJRllfSU5GTyIsIkdFVFRJTkdfWU9VVFVCRV9NQVRDSEVTIiwiRkFJTEVEX1RPX0dFVF9ZT1VUVUJFX01BVENIRVMiLCJET1dOTE9BRElOR19BVURJTyIsIkZBSUxFRF9UT19ET1dOTE9BRF9BVURJTyIsIkFVRElPX0RPV05MT0FEX1RJTUVEX09VVCIsIk1BVENIX05PVF9GT1VORCIsIlBST0NFU1NJTkciLCJDT01QTEVURUQiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLHdCQUF1QiwwQ0FEUjtBQUVmQyw4QkFBNEIsOERBRmI7QUFHZkMsMkJBQXlCLCtDQUhWO0FBSWZDLGlDQUErQiw4REFKaEI7O0FBTWZDLHFCQUFtQiw4QkFOSjtBQU9mQyw0QkFBMEIsMENBUFg7QUFRZkMsNEJBQTBCLG1DQVJYO0FBU2ZDLG1CQUFpQixzREFURjtBQVVmQyxjQUFZLDZCQVZHO0FBV2ZDLGFBQVc7QUFYSSxDQUFqQiIsImZpbGUiOiJzdGF0dXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcGxheW9sYS9saWIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgR0VUVElOR19TUE9USUZZX0lORk86IGBMb29raW5nIHVwIHRoZSBzb25nJ3MgaW5mbyBmcm9tIHNwb3RpZnkuYCxcbiAgRkFJTEVEX1RPX0dFVF9TUE9USUZZX0lORk86ICdUaGVyZSB3YXMgYW4gZXJyb3IgcmV0cmlldmluZyB0aGUgc3BvdGlmeSBpbmZvIGZvciB0aGlzIHNvbmcnLFxuICBHRVRUSU5HX1lPVVRVQkVfTUFUQ0hFUzogJ0xvb2tpbmcgdXAgdGhlIHlvdXR1YmUgbWF0Y2hlcyBmb3IgdGhpcyBzb25nLicsXG4gIEZBSUxFRF9UT19HRVRfWU9VVFVCRV9NQVRDSEVTOiAnVGhlcmUgd2FzIGFuIGVycm9yIGdldHRpbmcgdGhlIHlvdXR1YmUgbWF0Y2hlcyBmb3IgdGhpcyBzb25nJyxcblxuICBET1dOTE9BRElOR19BVURJTzogJ1RoZSBhdWRpbyBpcyBiZWluZyByZXRyZWl2ZWQnLFxuICBGQUlMRURfVE9fRE9XTkxPQURfQVVESU86ICdUaGVyZSB3YXMgYW4gZXJyb3IgZG93bmxvYWRpbmcgdGhlIGF1ZGlvJyxcbiAgQVVESU9fRE9XTkxPQURfVElNRURfT1VUOiAnVGhlIGF1ZGlvIGRvd25sb2FkIG5ldmVyIHJldHVybmVkJyxcbiAgTUFUQ0hfTk9UX0ZPVU5EOiAnVGhlIHNvbmcgY291bGQgbm90IGJlIG1hdGNoZWQgdG8gdGhlIHBsYXlvbGEgbGlicmFyeScsXG4gIFBST0NFU1NJTkc6ICdUaGUgc29uZyBpcyBiZWluZyBwcm9jZXNzZWQnLFxuICBDT01QTEVURUQ6ICdUaGUgc29uZyBoYXMgYmVlbiBwcm9jZXNzZWQnXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "status.js"
      ],
      "names": [
        "module",
        "exports",
        "GETTING_SPOTIFY_INFO",
        "FAILED_TO_GET_SPOTIFY_INFO",
        "GETTING_YOUTUBE_MATCHES",
        "FAILED_TO_GET_YOUTUBE_MATCHES",
        "DOWNLOADING_AUDIO",
        "FAILED_TO_DOWNLOAD_AUDIO",
        "AUDIO_DOWNLOAD_TIMED_OUT",
        "MATCH_NOT_FOUND",
        "PROCESSING",
        "COMPLETED"
      ],
      "mappings": "AAAAA,OAAOC,OAAP,GAAiB;AACfC,wBAAuB,0CADR;AAEfC,8BAA4B,8DAFb;AAGfC,2BAAyB,+CAHV;AAIfC,iCAA+B,8DAJhB;;AAMfC,qBAAmB,8BANJ;AAOfC,4BAA0B,0CAPX;AAQfC,4BAA0B,mCARX;AASfC,mBAAiB,sDATF;AAUfC,cAAY,6BAVG;AAWfC,aAAW;AAXI,CAAjB",
      "file": "status.js",
      "sourceRoot": "/home/playola/lib",
      "sourcesContent": [
        "module.exports = {\n  GETTING_SPOTIFY_INFO: `Looking up the song's info from spotify.`,\n  FAILED_TO_GET_SPOTIFY_INFO: 'There was an error retrieving the spotify info for this song',\n  GETTING_YOUTUBE_MATCHES: 'Looking up the youtube matches for this song.',\n  FAILED_TO_GET_YOUTUBE_MATCHES: 'There was an error getting the youtube matches for this song',\n\n  DOWNLOADING_AUDIO: 'The audio is being retreived',\n  FAILED_TO_DOWNLOAD_AUDIO: 'There was an error downloading the audio',\n  AUDIO_DOWNLOAD_TIMED_OUT: 'The audio download never returned',\n  MATCH_NOT_FOUND: 'The song could not be matched to the playola library',\n  PROCESSING: 'The song is being processed',\n  COMPLETED: 'The song has been processed'\n}"
      ]
    },
    "mtime": 1522762030000
  },
  "{\"filename\":\"/home/playola/lib/services/youTubeAudioProcessor.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/playola/lib/services\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/playola/lib/services/youTubeAudioProcessor.js",
      "filenameRelative": "/home/playola/lib/services/youTubeAudioProcessor.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "youTubeAudioProcessor.js",
      "sourceFileName": "youTubeAudioProcessor.js",
      "sourceRoot": "/home/playola/lib/services",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/playola/lib/services",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "youTubeAudioProcessor"
    },
    "ignored": false,
    "code": "const AWS = require('aws-sdk');\n\nconst LAMBDA_FUNCTION_TO_DISPATCH = 'youtube-converter';\n\nfunction requestAudio({ youTubeIDs, spotifyID, webHookURL, webHookAPIKey }) {\n  return new Promise((resolve, reject) => {\n    var lambda = new AWS.Lambda();\n    console.log(' calling lambda....................');\n    lambda.invoke({\n      FunctionName: LAMBDA_FUNCTION_TO_DISPATCH,\n      Payload: JSON.stringify({ youTubeIDs: youTubeIDs,\n        webHookURL: webHookURL,\n        webHookAPIKey: webHookAPIKey,\n        bucketName: process.env.SONGS_BUCKET_NAME\n      }),\n      InvocationType: 'Event'\n    }, function (err, response) {\n      if (err) {\n        console.log('LABMDA ERROR!', err);\n        return reject(err);\n      }\n      if (response['StatusCode'] !== 202) {\n        console.log('statusCode wrong ---------------------------');\n        console.log(response);\n        reject(response);\n      } else {\n        console.log('LAMBDA SUCCESSFULLY CALLED ------------------------');\n        resolve({ spotifyID: spotifyID });\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  requestAudio\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlvdVR1YmVBdWRpb1Byb2Nlc3Nvci5qcyJdLCJuYW1lcyI6WyJBV1MiLCJyZXF1aXJlIiwiTEFNQkRBX0ZVTkNUSU9OX1RPX0RJU1BBVENIIiwicmVxdWVzdEF1ZGlvIiwieW91VHViZUlEcyIsInNwb3RpZnlJRCIsIndlYkhvb2tVUkwiLCJ3ZWJIb29rQVBJS2V5IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsYW1iZGEiLCJMYW1iZGEiLCJjb25zb2xlIiwibG9nIiwiaW52b2tlIiwiRnVuY3Rpb25OYW1lIiwiUGF5bG9hZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJidWNrZXROYW1lIiwicHJvY2VzcyIsImVudiIsIlNPTkdTX0JVQ0tFVF9OQU1FIiwiSW52b2NhdGlvblR5cGUiLCJlcnIiLCJyZXNwb25zZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU1DLFFBQVEsU0FBUixDQUFaOztBQUVBLE1BQU1DLDhCQUE4QixtQkFBcEM7O0FBRUEsU0FBU0MsWUFBVCxDQUFzQixFQUFFQyxVQUFGLEVBQWNDLFNBQWQsRUFBeUJDLFVBQXpCLEVBQXFDQyxhQUFyQyxFQUF0QixFQUE0RTtBQUMxRSxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdEMsUUFBSUMsU0FBUyxJQUFJWCxJQUFJWSxNQUFSLEVBQWI7QUFDQUMsWUFBUUMsR0FBUixDQUFZLHFDQUFaO0FBQ0FILFdBQU9JLE1BQVAsQ0FBYztBQUNaQyxvQkFBY2QsMkJBREY7QUFFWmUsZUFBU0MsS0FBS0MsU0FBTCxDQUFlLEVBQUVmLFlBQVlBLFVBQWQ7QUFDRUUsb0JBQVlBLFVBRGQ7QUFFRUMsdUJBQWVBLGFBRmpCO0FBR0VhLG9CQUFZQyxRQUFRQyxHQUFSLENBQVlDO0FBSDFCLE9BQWYsQ0FGRztBQU9aQyxzQkFBZ0I7QUFQSixLQUFkLEVBUUcsVUFBVUMsR0FBVixFQUFlQyxRQUFmLEVBQXlCO0FBQzFCLFVBQUlELEdBQUosRUFBUztBQUNQWixnQkFBUUMsR0FBUixDQUFZLGVBQVosRUFBNkJXLEdBQTdCO0FBQ0EsZUFBT2YsT0FBT2UsR0FBUCxDQUFQO0FBQ0Q7QUFDRCxVQUFJQyxTQUFTLFlBQVQsTUFBMkIsR0FBL0IsRUFBb0M7QUFDbENiLGdCQUFRQyxHQUFSLENBQVksOENBQVo7QUFDQUQsZ0JBQVFDLEdBQVIsQ0FBWVksUUFBWjtBQUNBaEIsZUFBT2dCLFFBQVA7QUFDRCxPQUpELE1BSU87QUFDTGIsZ0JBQVFDLEdBQVIsQ0FBWSxxREFBWjtBQUNBTCxnQkFBUSxFQUFFSixXQUFXQSxTQUFiLEVBQVI7QUFDRDtBQUNGLEtBckJEO0FBc0JELEdBekJNLENBQVA7QUEwQkQ7O0FBRURzQixPQUFPQyxPQUFQLEdBQWlCO0FBQ2Z6QjtBQURlLENBQWpCIiwiZmlsZSI6InlvdVR1YmVBdWRpb1Byb2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9wbGF5b2xhL2xpYi9zZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFXUyA9IHJlcXVpcmUoJ2F3cy1zZGsnKVxuXG5jb25zdCBMQU1CREFfRlVOQ1RJT05fVE9fRElTUEFUQ0ggPSAneW91dHViZS1jb252ZXJ0ZXInXG5cbmZ1bmN0aW9uIHJlcXVlc3RBdWRpbyh7IHlvdVR1YmVJRHMsIHNwb3RpZnlJRCwgd2ViSG9va1VSTCwgd2ViSG9va0FQSUtleSB9KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGxhbWJkYSA9IG5ldyBBV1MuTGFtYmRhKClcbiAgICBjb25zb2xlLmxvZygnIGNhbGxpbmcgbGFtYmRhLi4uLi4uLi4uLi4uLi4uLi4uLi4nKVxuICAgIGxhbWJkYS5pbnZva2Uoe1xuICAgICAgRnVuY3Rpb25OYW1lOiBMQU1CREFfRlVOQ1RJT05fVE9fRElTUEFUQ0gsXG4gICAgICBQYXlsb2FkOiBKU09OLnN0cmluZ2lmeSh7IHlvdVR1YmVJRHM6IHlvdVR1YmVJRHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlYkhvb2tVUkw6IHdlYkhvb2tVUkwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlYkhvb2tBUElLZXk6IHdlYkhvb2tBUElLZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1Y2tldE5hbWU6IHByb2Nlc3MuZW52LlNPTkdTX0JVQ0tFVF9OQU1FXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgIEludm9jYXRpb25UeXBlOiAnRXZlbnQnXG4gICAgfSwgZnVuY3Rpb24gKGVyciwgcmVzcG9uc2UpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0xBQk1EQSBFUlJPUiEnLCBlcnIpXG4gICAgICAgIHJldHVybiByZWplY3QoZXJyKVxuICAgICAgfVxuICAgICAgaWYgKHJlc3BvbnNlWydTdGF0dXNDb2RlJ10gIT09IDIwMikge1xuICAgICAgICBjb25zb2xlLmxvZygnc3RhdHVzQ29kZSB3cm9uZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKVxuICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgcmVqZWN0KHJlc3BvbnNlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0xBTUJEQSBTVUNDRVNTRlVMTFkgQ0FMTEVEIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpXG4gICAgICAgIHJlc29sdmUoeyBzcG90aWZ5SUQ6IHNwb3RpZnlJRCB9KVxuICAgICAgfVxuICAgIH0pXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByZXF1ZXN0QXVkaW9cbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "youTubeAudioProcessor.js"
      ],
      "names": [
        "AWS",
        "require",
        "LAMBDA_FUNCTION_TO_DISPATCH",
        "requestAudio",
        "youTubeIDs",
        "spotifyID",
        "webHookURL",
        "webHookAPIKey",
        "Promise",
        "resolve",
        "reject",
        "lambda",
        "Lambda",
        "console",
        "log",
        "invoke",
        "FunctionName",
        "Payload",
        "JSON",
        "stringify",
        "bucketName",
        "process",
        "env",
        "SONGS_BUCKET_NAME",
        "InvocationType",
        "err",
        "response",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAMC,QAAQ,SAAR,CAAZ;;AAEA,MAAMC,8BAA8B,mBAApC;;AAEA,SAASC,YAAT,CAAsB,EAAEC,UAAF,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,aAArC,EAAtB,EAA4E;AAC1E,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,SAAS,IAAIX,IAAIY,MAAR,EAAb;AACAC,YAAQC,GAAR,CAAY,qCAAZ;AACAH,WAAOI,MAAP,CAAc;AACZC,oBAAcd,2BADF;AAEZe,eAASC,KAAKC,SAAL,CAAe,EAAEf,YAAYA,UAAd;AACEE,oBAAYA,UADd;AAEEC,uBAAeA,aAFjB;AAGEa,oBAAYC,QAAQC,GAAR,CAAYC;AAH1B,OAAf,CAFG;AAOZC,sBAAgB;AAPJ,KAAd,EAQG,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC1B,UAAID,GAAJ,EAAS;AACPZ,gBAAQC,GAAR,CAAY,eAAZ,EAA6BW,GAA7B;AACA,eAAOf,OAAOe,GAAP,CAAP;AACD;AACD,UAAIC,SAAS,YAAT,MAA2B,GAA/B,EAAoC;AAClCb,gBAAQC,GAAR,CAAY,8CAAZ;AACAD,gBAAQC,GAAR,CAAYY,QAAZ;AACAhB,eAAOgB,QAAP;AACD,OAJD,MAIO;AACLb,gBAAQC,GAAR,CAAY,qDAAZ;AACAL,gBAAQ,EAAEJ,WAAWA,SAAb,EAAR;AACD;AACF,KArBD;AAsBD,GAzBM,CAAP;AA0BD;;AAEDsB,OAAOC,OAAP,GAAiB;AACfzB;AADe,CAAjB",
      "file": "youTubeAudioProcessor.js",
      "sourceRoot": "/home/playola/lib/services",
      "sourcesContent": [
        "const AWS = require('aws-sdk')\n\nconst LAMBDA_FUNCTION_TO_DISPATCH = 'youtube-converter'\n\nfunction requestAudio({ youTubeIDs, spotifyID, webHookURL, webHookAPIKey }) {\n  return new Promise((resolve, reject) => {\n    var lambda = new AWS.Lambda()\n    console.log(' calling lambda....................')\n    lambda.invoke({\n      FunctionName: LAMBDA_FUNCTION_TO_DISPATCH,\n      Payload: JSON.stringify({ youTubeIDs: youTubeIDs,\n                                webHookURL: webHookURL,\n                                webHookAPIKey: webHookAPIKey,\n                                bucketName: process.env.SONGS_BUCKET_NAME\n                              }),\n      InvocationType: 'Event'\n    }, function (err, response) {\n      if (err) {\n        console.log('LABMDA ERROR!', err)\n        return reject(err)\n      }\n      if (response['StatusCode'] !== 202) {\n        console.log('statusCode wrong ---------------------------')\n        console.log(response)\n        reject(response)\n      } else {\n        console.log('LAMBDA SUCCESSFULLY CALLED ------------------------')\n        resolve({ spotifyID: spotifyID })\n      }\n    })\n  })\n}\n\nmodule.exports = {\n  requestAudio\n}"
      ]
    },
    "mtime": 1524256051000
  }
}